

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed May 22 09:59:06 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.44
    37                           ; Generated 14/09/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F1572 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  018C                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0197                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  028C                     	;# 
   141  030C                     	;# 
   142  038C                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0691                     	;# 
   147  0692                     	;# 
   148  0693                     	;# 
   149  0694                     	;# 
   150  0695                     	;# 
   151  0D8E                     	;# 
   152  0D8F                     	;# 
   153  0D90                     	;# 
   154  0D91                     	;# 
   155  0D91                     	;# 
   156  0D92                     	;# 
   157  0D93                     	;# 
   158  0D93                     	;# 
   159  0D94                     	;# 
   160  0D95                     	;# 
   161  0D95                     	;# 
   162  0D96                     	;# 
   163  0D97                     	;# 
   164  0D97                     	;# 
   165  0D98                     	;# 
   166  0D99                     	;# 
   167  0D99                     	;# 
   168  0D9A                     	;# 
   169  0D9B                     	;# 
   170  0D9C                     	;# 
   171  0D9C                     	;# 
   172  0D9D                     	;# 
   173  0D9D                     	;# 
   174  0D9E                     	;# 
   175  0D9F                     	;# 
   176  0DA0                     	;# 
   177  0DA1                     	;# 
   178  0DA1                     	;# 
   179  0DA2                     	;# 
   180  0DA3                     	;# 
   181  0DA3                     	;# 
   182  0DA4                     	;# 
   183  0DA5                     	;# 
   184  0DA5                     	;# 
   185  0DA6                     	;# 
   186  0DA7                     	;# 
   187  0DA7                     	;# 
   188  0DA8                     	;# 
   189  0DA9                     	;# 
   190  0DA9                     	;# 
   191  0DAA                     	;# 
   192  0DAB                     	;# 
   193  0DAC                     	;# 
   194  0DAC                     	;# 
   195  0DAD                     	;# 
   196  0DAD                     	;# 
   197  0DAE                     	;# 
   198  0DAF                     	;# 
   199  0DB0                     	;# 
   200  0DB1                     	;# 
   201  0DB1                     	;# 
   202  0DB2                     	;# 
   203  0DB3                     	;# 
   204  0DB3                     	;# 
   205  0DB4                     	;# 
   206  0DB5                     	;# 
   207  0DB5                     	;# 
   208  0DB6                     	;# 
   209  0DB7                     	;# 
   210  0DB7                     	;# 
   211  0DB8                     	;# 
   212  0DB9                     	;# 
   213  0DB9                     	;# 
   214  0DBA                     	;# 
   215  0DBB                     	;# 
   216  0DBC                     	;# 
   217  0DBC                     	;# 
   218  0DBD                     	;# 
   219  0DBD                     	;# 
   220  0DBE                     	;# 
   221  0DBF                     	;# 
   222  0DC0                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE8                     	;# 
   229  0FE9                     	;# 
   230  0FEA                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  008C                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  010C                     	;# 
   279  0111                     	;# 
   280  0112                     	;# 
   281  0115                     	;# 
   282  0116                     	;# 
   283  0117                     	;# 
   284  0118                     	;# 
   285  0119                     	;# 
   286  011D                     	;# 
   287  011D                     	;# 
   288  018C                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0194                     	;# 
   295  0195                     	;# 
   296  0196                     	;# 
   297  0197                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020C                     	;# 
   307  028C                     	;# 
   308  030C                     	;# 
   309  038C                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  0691                     	;# 
   314  0692                     	;# 
   315  0693                     	;# 
   316  0694                     	;# 
   317  0695                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D90                     	;# 
   321  0D91                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D93                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D97                     	;# 
   332  0D98                     	;# 
   333  0D99                     	;# 
   334  0D99                     	;# 
   335  0D9A                     	;# 
   336  0D9B                     	;# 
   337  0D9C                     	;# 
   338  0D9C                     	;# 
   339  0D9D                     	;# 
   340  0D9D                     	;# 
   341  0D9E                     	;# 
   342  0D9F                     	;# 
   343  0DA0                     	;# 
   344  0DA1                     	;# 
   345  0DA1                     	;# 
   346  0DA2                     	;# 
   347  0DA3                     	;# 
   348  0DA3                     	;# 
   349  0DA4                     	;# 
   350  0DA5                     	;# 
   351  0DA5                     	;# 
   352  0DA6                     	;# 
   353  0DA7                     	;# 
   354  0DA7                     	;# 
   355  0DA8                     	;# 
   356  0DA9                     	;# 
   357  0DA9                     	;# 
   358  0DAA                     	;# 
   359  0DAB                     	;# 
   360  0DAC                     	;# 
   361  0DAC                     	;# 
   362  0DAD                     	;# 
   363  0DAD                     	;# 
   364  0DAE                     	;# 
   365  0DAF                     	;# 
   366  0DB0                     	;# 
   367  0DB1                     	;# 
   368  0DB1                     	;# 
   369  0DB2                     	;# 
   370  0DB3                     	;# 
   371  0DB3                     	;# 
   372  0DB4                     	;# 
   373  0DB5                     	;# 
   374  0DB5                     	;# 
   375  0DB6                     	;# 
   376  0DB7                     	;# 
   377  0DB7                     	;# 
   378  0DB8                     	;# 
   379  0DB9                     	;# 
   380  0DB9                     	;# 
   381  0DBA                     	;# 
   382  0DBB                     	;# 
   383  0DBC                     	;# 
   384  0DBC                     	;# 
   385  0DBD                     	;# 
   386  0DBD                     	;# 
   387  0DBE                     	;# 
   388  0DBF                     	;# 
   389  0DC0                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE8                     	;# 
   396  0FE9                     	;# 
   397  0FEA                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEE                     	;# 
   403  0FEF                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  008C                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  010C                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011D                     	;# 
   454  011D                     	;# 
   455  018C                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0197                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  028C                     	;# 
   475  030C                     	;# 
   476  038C                     	;# 
   477  0391                     	;# 
   478  0392                     	;# 
   479  0393                     	;# 
   480  0691                     	;# 
   481  0692                     	;# 
   482  0693                     	;# 
   483  0694                     	;# 
   484  0695                     	;# 
   485  0D8E                     	;# 
   486  0D8F                     	;# 
   487  0D90                     	;# 
   488  0D91                     	;# 
   489  0D91                     	;# 
   490  0D92                     	;# 
   491  0D93                     	;# 
   492  0D93                     	;# 
   493  0D94                     	;# 
   494  0D95                     	;# 
   495  0D95                     	;# 
   496  0D96                     	;# 
   497  0D97                     	;# 
   498  0D97                     	;# 
   499  0D98                     	;# 
   500  0D99                     	;# 
   501  0D99                     	;# 
   502  0D9A                     	;# 
   503  0D9B                     	;# 
   504  0D9C                     	;# 
   505  0D9C                     	;# 
   506  0D9D                     	;# 
   507  0D9D                     	;# 
   508  0D9E                     	;# 
   509  0D9F                     	;# 
   510  0DA0                     	;# 
   511  0DA1                     	;# 
   512  0DA1                     	;# 
   513  0DA2                     	;# 
   514  0DA3                     	;# 
   515  0DA3                     	;# 
   516  0DA4                     	;# 
   517  0DA5                     	;# 
   518  0DA5                     	;# 
   519  0DA6                     	;# 
   520  0DA7                     	;# 
   521  0DA7                     	;# 
   522  0DA8                     	;# 
   523  0DA9                     	;# 
   524  0DA9                     	;# 
   525  0DAA                     	;# 
   526  0DAB                     	;# 
   527  0DAC                     	;# 
   528  0DAC                     	;# 
   529  0DAD                     	;# 
   530  0DAD                     	;# 
   531  0DAE                     	;# 
   532  0DAF                     	;# 
   533  0DB0                     	;# 
   534  0DB1                     	;# 
   535  0DB1                     	;# 
   536  0DB2                     	;# 
   537  0DB3                     	;# 
   538  0DB3                     	;# 
   539  0DB4                     	;# 
   540  0DB5                     	;# 
   541  0DB5                     	;# 
   542  0DB6                     	;# 
   543  0DB7                     	;# 
   544  0DB7                     	;# 
   545  0DB8                     	;# 
   546  0DB9                     	;# 
   547  0DB9                     	;# 
   548  0DBA                     	;# 
   549  0DBB                     	;# 
   550  0DBC                     	;# 
   551  0DBC                     	;# 
   552  0DBD                     	;# 
   553  0DBD                     	;# 
   554  0DBE                     	;# 
   555  0DBF                     	;# 
   556  0DC0                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEE                     	;# 
   570  0FEF                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0008                     	;# 
   580  0009                     	;# 
   581  000A                     	;# 
   582  000B                     	;# 
   583  000C                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  008C                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0097                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009A                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  010C                     	;# 
   613  0111                     	;# 
   614  0112                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011D                     	;# 
   621  011D                     	;# 
   622  018C                     	;# 
   623  0191                     	;# 
   624  0191                     	;# 
   625  0192                     	;# 
   626  0193                     	;# 
   627  0193                     	;# 
   628  0194                     	;# 
   629  0195                     	;# 
   630  0196                     	;# 
   631  0197                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  028C                     	;# 
   642  030C                     	;# 
   643  038C                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0691                     	;# 
   648  0692                     	;# 
   649  0693                     	;# 
   650  0694                     	;# 
   651  0695                     	;# 
   652  0D8E                     	;# 
   653  0D8F                     	;# 
   654  0D90                     	;# 
   655  0D91                     	;# 
   656  0D91                     	;# 
   657  0D92                     	;# 
   658  0D93                     	;# 
   659  0D93                     	;# 
   660  0D94                     	;# 
   661  0D95                     	;# 
   662  0D95                     	;# 
   663  0D96                     	;# 
   664  0D97                     	;# 
   665  0D97                     	;# 
   666  0D98                     	;# 
   667  0D99                     	;# 
   668  0D99                     	;# 
   669  0D9A                     	;# 
   670  0D9B                     	;# 
   671  0D9C                     	;# 
   672  0D9C                     	;# 
   673  0D9D                     	;# 
   674  0D9D                     	;# 
   675  0D9E                     	;# 
   676  0D9F                     	;# 
   677  0DA0                     	;# 
   678  0DA1                     	;# 
   679  0DA1                     	;# 
   680  0DA2                     	;# 
   681  0DA3                     	;# 
   682  0DA3                     	;# 
   683  0DA4                     	;# 
   684  0DA5                     	;# 
   685  0DA5                     	;# 
   686  0DA6                     	;# 
   687  0DA7                     	;# 
   688  0DA7                     	;# 
   689  0DA8                     	;# 
   690  0DA9                     	;# 
   691  0DA9                     	;# 
   692  0DAA                     	;# 
   693  0DAB                     	;# 
   694  0DAC                     	;# 
   695  0DAC                     	;# 
   696  0DAD                     	;# 
   697  0DAD                     	;# 
   698  0DAE                     	;# 
   699  0DAF                     	;# 
   700  0DB0                     	;# 
   701  0DB1                     	;# 
   702  0DB1                     	;# 
   703  0DB2                     	;# 
   704  0DB3                     	;# 
   705  0DB3                     	;# 
   706  0DB4                     	;# 
   707  0DB5                     	;# 
   708  0DB5                     	;# 
   709  0DB6                     	;# 
   710  0DB7                     	;# 
   711  0DB7                     	;# 
   712  0DB8                     	;# 
   713  0DB9                     	;# 
   714  0DB9                     	;# 
   715  0DBA                     	;# 
   716  0DBB                     	;# 
   717  0DBC                     	;# 
   718  0DBC                     	;# 
   719  0DBD                     	;# 
   720  0DBD                     	;# 
   721  0DBE                     	;# 
   722  0DBF                     	;# 
   723  0DC0                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE8                     	;# 
   730  0FE9                     	;# 
   731  0FEA                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  008C                     	;# 
   764  0091                     	;# 
   765  0092                     	;# 
   766  0093                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  010C                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0117                     	;# 
   785  0118                     	;# 
   786  0119                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  018C                     	;# 
   790  0191                     	;# 
   791  0191                     	;# 
   792  0192                     	;# 
   793  0193                     	;# 
   794  0193                     	;# 
   795  0194                     	;# 
   796  0195                     	;# 
   797  0196                     	;# 
   798  0197                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019F                     	;# 
   807  020C                     	;# 
   808  028C                     	;# 
   809  030C                     	;# 
   810  038C                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  0393                     	;# 
   814  0691                     	;# 
   815  0692                     	;# 
   816  0693                     	;# 
   817  0694                     	;# 
   818  0695                     	;# 
   819  0D8E                     	;# 
   820  0D8F                     	;# 
   821  0D90                     	;# 
   822  0D91                     	;# 
   823  0D91                     	;# 
   824  0D92                     	;# 
   825  0D93                     	;# 
   826  0D93                     	;# 
   827  0D94                     	;# 
   828  0D95                     	;# 
   829  0D95                     	;# 
   830  0D96                     	;# 
   831  0D97                     	;# 
   832  0D97                     	;# 
   833  0D98                     	;# 
   834  0D99                     	;# 
   835  0D99                     	;# 
   836  0D9A                     	;# 
   837  0D9B                     	;# 
   838  0D9C                     	;# 
   839  0D9C                     	;# 
   840  0D9D                     	;# 
   841  0D9D                     	;# 
   842  0D9E                     	;# 
   843  0D9F                     	;# 
   844  0DA0                     	;# 
   845  0DA1                     	;# 
   846  0DA1                     	;# 
   847  0DA2                     	;# 
   848  0DA3                     	;# 
   849  0DA3                     	;# 
   850  0DA4                     	;# 
   851  0DA5                     	;# 
   852  0DA5                     	;# 
   853  0DA6                     	;# 
   854  0DA7                     	;# 
   855  0DA7                     	;# 
   856  0DA8                     	;# 
   857  0DA9                     	;# 
   858  0DA9                     	;# 
   859  0DAA                     	;# 
   860  0DAB                     	;# 
   861  0DAC                     	;# 
   862  0DAC                     	;# 
   863  0DAD                     	;# 
   864  0DAD                     	;# 
   865  0DAE                     	;# 
   866  0DAF                     	;# 
   867  0DB0                     	;# 
   868  0DB1                     	;# 
   869  0DB1                     	;# 
   870  0DB2                     	;# 
   871  0DB3                     	;# 
   872  0DB3                     	;# 
   873  0DB4                     	;# 
   874  0DB5                     	;# 
   875  0DB5                     	;# 
   876  0DB6                     	;# 
   877  0DB7                     	;# 
   878  0DB7                     	;# 
   879  0DB8                     	;# 
   880  0DB9                     	;# 
   881  0DB9                     	;# 
   882  0DBA                     	;# 
   883  0DBB                     	;# 
   884  0DBC                     	;# 
   885  0DBC                     	;# 
   886  0DBD                     	;# 
   887  0DBD                     	;# 
   888  0DBE                     	;# 
   889  0DBF                     	;# 
   890  0DC0                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE8                     	;# 
   897  0FE9                     	;# 
   898  0FEA                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEE                     	;# 
   904  0FEF                     	;# 
   905  0000                     	;# 
   906  0001                     	;# 
   907  0002                     	;# 
   908  0003                     	;# 
   909  0004                     	;# 
   910  0005                     	;# 
   911  0006                     	;# 
   912  0007                     	;# 
   913  0008                     	;# 
   914  0009                     	;# 
   915  000A                     	;# 
   916  000B                     	;# 
   917  000C                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0015                     	;# 
   922  0016                     	;# 
   923  0016                     	;# 
   924  0017                     	;# 
   925  0018                     	;# 
   926  0019                     	;# 
   927  001A                     	;# 
   928  001B                     	;# 
   929  001C                     	;# 
   930  008C                     	;# 
   931  0091                     	;# 
   932  0092                     	;# 
   933  0093                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  009F                     	;# 
   946  010C                     	;# 
   947  0111                     	;# 
   948  0112                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011D                     	;# 
   955  011D                     	;# 
   956  018C                     	;# 
   957  0191                     	;# 
   958  0191                     	;# 
   959  0192                     	;# 
   960  0193                     	;# 
   961  0193                     	;# 
   962  0194                     	;# 
   963  0195                     	;# 
   964  0196                     	;# 
   965  0197                     	;# 
   966  0199                     	;# 
   967  019A                     	;# 
   968  019B                     	;# 
   969  019B                     	;# 
   970  019C                     	;# 
   971  019D                     	;# 
   972  019E                     	;# 
   973  019F                     	;# 
   974  020C                     	;# 
   975  028C                     	;# 
   976  030C                     	;# 
   977  038C                     	;# 
   978  0391                     	;# 
   979  0392                     	;# 
   980  0393                     	;# 
   981  0691                     	;# 
   982  0692                     	;# 
   983  0693                     	;# 
   984  0694                     	;# 
   985  0695                     	;# 
   986  0D8E                     	;# 
   987  0D8F                     	;# 
   988  0D90                     	;# 
   989  0D91                     	;# 
   990  0D91                     	;# 
   991  0D92                     	;# 
   992  0D93                     	;# 
   993  0D93                     	;# 
   994  0D94                     	;# 
   995  0D95                     	;# 
   996  0D95                     	;# 
   997  0D96                     	;# 
   998  0D97                     	;# 
   999  0D97                     	;# 
  1000  0D98                     	;# 
  1001  0D99                     	;# 
  1002  0D99                     	;# 
  1003  0D9A                     	;# 
  1004  0D9B                     	;# 
  1005  0D9C                     	;# 
  1006  0D9C                     	;# 
  1007  0D9D                     	;# 
  1008  0D9D                     	;# 
  1009  0D9E                     	;# 
  1010  0D9F                     	;# 
  1011  0DA0                     	;# 
  1012  0DA1                     	;# 
  1013  0DA1                     	;# 
  1014  0DA2                     	;# 
  1015  0DA3                     	;# 
  1016  0DA3                     	;# 
  1017  0DA4                     	;# 
  1018  0DA5                     	;# 
  1019  0DA5                     	;# 
  1020  0DA6                     	;# 
  1021  0DA7                     	;# 
  1022  0DA7                     	;# 
  1023  0DA8                     	;# 
  1024  0DA9                     	;# 
  1025  0DA9                     	;# 
  1026  0DAA                     	;# 
  1027  0DAB                     	;# 
  1028  0DAC                     	;# 
  1029  0DAC                     	;# 
  1030  0DAD                     	;# 
  1031  0DAD                     	;# 
  1032  0DAE                     	;# 
  1033  0DAF                     	;# 
  1034  0DB0                     	;# 
  1035  0DB1                     	;# 
  1036  0DB1                     	;# 
  1037  0DB2                     	;# 
  1038  0DB3                     	;# 
  1039  0DB3                     	;# 
  1040  0DB4                     	;# 
  1041  0DB5                     	;# 
  1042  0DB5                     	;# 
  1043  0DB6                     	;# 
  1044  0DB7                     	;# 
  1045  0DB7                     	;# 
  1046  0DB8                     	;# 
  1047  0DB9                     	;# 
  1048  0DB9                     	;# 
  1049  0DBA                     	;# 
  1050  0DBB                     	;# 
  1051  0DBC                     	;# 
  1052  0DBC                     	;# 
  1053  0DBD                     	;# 
  1054  0DBD                     	;# 
  1055  0DBE                     	;# 
  1056  0DBF                     	;# 
  1057  0DC0                     	;# 
  1058  0FE4                     	;# 
  1059  0FE5                     	;# 
  1060  0FE6                     	;# 
  1061  0FE7                     	;# 
  1062  0FE8                     	;# 
  1063  0FE8                     	;# 
  1064  0FE9                     	;# 
  1065  0FEA                     	;# 
  1066  0FEA                     	;# 
  1067  0FEB                     	;# 
  1068  0FED                     	;# 
  1069  0FEE                     	;# 
  1070  0FEE                     	;# 
  1071  0FEF                     	;# 
  1072  001B                     _PR2	set	27
  1073  001C                     _T2CONbits	set	28
  1074  000B                     _INTCONbits	set	11
  1075  0011                     _PIR1bits	set	17
  1076  009B                     _ADRES	set	155
  1077  009E                     _ADCON1bits	set	158
  1078  009D                     _ADCON0bits	set	157
  1079  008C                     _TRISAbits	set	140
  1080  009A                     _OSCSTATbits	set	154
  1081  0098                     _OSCTUNEbits	set	152
  1082  0099                     _OSCCONbits	set	153
  1083  0091                     _PIE1bits	set	145
  1084  010C                     _LATAbits	set	268
  1085  018C                     _ANSELAbits	set	396
  1086  0DB9                     _PWM3TMR	set	3513
  1087  0DB7                     _PWM3OF	set	3511
  1088  0DB5                     _PWM3PR	set	3509
  1089  0DB3                     _PWM3DC	set	3507
  1090  0DB1                     _PWM3PH	set	3505
  1091  0DC0                     _PWM3OFCONbits	set	3520
  1092  0DBF                     _PWM3LDCONbits	set	3519
  1093  0DBE                     _PWM3CLKCONbits	set	3518
  1094  0DBD                     _PWM3INTF	set	3517
  1095  0DBC                     _PWM3INTE	set	3516
  1096  0DBB                     _PWM3CONbits	set	3515
  1097                           
  1098                           ; #config settings
  1099  0000                     
  1100                           	psect	cinit
  1101  0016                     start_initialization:	
  1102  0016                     __initialization:	
  1103                           
  1104                           ; Clear objects allocated to COMMON
  1105  0016  01F0               	clrf	__pbssCOMMON& (0+127)
  1106  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1107  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1108  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1109  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1110                           
  1111                           ; Clear objects allocated to BANK0
  1112  001B  3045               	movlw	low __pbssBANK0
  1113  001C  0084               	movwf	4
  1114  001D  3000               	movlw	high __pbssBANK0
  1115  001E  0085               	movwf	5
  1116  001F  301D               	movlw	29
  1117  0020  2374               	fcall	clear_ram0
  1118                           
  1119                           ; Clear objects allocated to BANK1
  1120  0021  30A0               	movlw	low __pbssBANK1
  1121  0022  0084               	movwf	4
  1122  0023  3000               	movlw	high __pbssBANK1
  1123  0024  0085               	movwf	5
  1124  0025  3028               	movlw	40
  1125  0026  2374               	fcall	clear_ram0
  1126  0027                     end_of_initialization:	
  1127                           ;End of C runtime variable initialization code
  1128                           
  1129  0027                     __end_of__initialization:	
  1130  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1131  0028  0020               	movlb	0
  1132  0029  29F2               	ljmp	_main	;jump to C main() function
  1133                           
  1134                           	psect	bssCOMMON
  1135  0070                     __pbssCOMMON:	
  1136  0070                     _target_value:	
  1137  0070                     	ds	2
  1138  0072                     _adc_filter_value:	
  1139  0072                     	ds	2
  1140  0074                     _on:	
  1141  0074                     	ds	1
  1142                           
  1143                           	psect	bssBANK0
  1144  0045                     __pbssBANK0:	
  1145  0045                     _adc_filter_buf:	
  1146  0045                     	ds	20
  1147  0059                     _tmr2_isr_handler:	
  1148  0059                     	ds	2
  1149  005B                     _current_value:	
  1150  005B                     	ds	2
  1151  005D                     _adc_gather_value:	
  1152  005D                     	ds	2
  1153  005F                     led_update_state@cnt_off:	
  1154  005F                     	ds	1
  1155  0060                     led_update_state@cnt_on:	
  1156  0060                     	ds	1
  1157  0061                     adc_filter@index:	
  1158  0061                     	ds	1
  1159                           
  1160                           	psect	bssBANK1
  1161  00A0                     __pbssBANK1:	
  1162  00A0                     adc_gather@F3559:	
  1163  00A0                     	ds	20
  1164  00B4                     adc_gather_init@F3551:	
  1165  00B4                     	ds	20
  1166                           
  1167                           	psect	clrtext
  1168  0374                     clear_ram0:	
  1169                           ;	Called with FSR0 containing the base address, and
  1170                           ;	WREG with the size to clear
  1171                           
  1172  0374  0064               	clrwdt	;clear the watchdog before getting into this loop
  1173  0375                     clrloop0:	
  1174  0375  0180               	clrf	0	;clear RAM location pointed to by FSR
  1175  0376  3101               	addfsr 0,1
  1176  0377  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1177  0378  2B75               	goto	clrloop0	;have we reached the end yet?
  1178  0379  3400               	retlw	0	;all done for this memory range, return
  1179                           
  1180                           	psect	cstackCOMMON
  1181  0075                     __pcstackCOMMON:	
  1182  0075                     ?_pwm_dutyCycle_set:	
  1183  0075                     ?_pwm_loadBuffer_set:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0075                     ??_pwm_loadBuffer_set:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0075                     ?_osc_init:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0075                     ?_gpio_init:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0075                     ?_pwm_init:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0075                     ?_adc_init:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0075                     ?_tmr2_init:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0075                     ?_tmr2_start:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0075                     ?_tmr2_isr_enable:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0075                     ?_tmr2_isr:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0075                     ?_adc_gather_init:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0075                     ?_adc_gather:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0075                     ?_adc_filter:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0075                     ?_led_update_state:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0075                     ?_pwm_update_duty:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0075                     ?_pwm_run:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0075                     ?_set_interrupt_handle:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0075                     ?_main:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0075                     ?_ISR:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0075                     pwm_dutyCycle_set@duty:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243                           
  1244                           ; 2 bytes @ 0x0
  1245  0075                     	ds	2
  1246  0077                     ??_pwm_dutyCycle_set:	
  1247  0077                     ??_pwm_run:	
  1248                           ; 1 bytes @ 0x2
  1249                           
  1250                           
  1251                           ; 1 bytes @ 0x2
  1252  0077                     	ds	2
  1253  0079                     ??_tmr2_isr:	
  1254  0079                     ??_ISR:	
  1255                           ; 1 bytes @ 0x4
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x4
  1259  0079                     	ds	1
  1260                           
  1261                           	psect	cstackBANK0
  1262  0020                     __pcstackBANK0:	
  1263  0020                     ?_tmr2_set_handler:	
  1264  0020                     ??_osc_init:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267  0020                     ??_gpio_init:	
  1268                           ; 1 bytes @ 0x0
  1269                           
  1270  0020                     ??_pwm_init:	
  1271                           ; 1 bytes @ 0x0
  1272                           
  1273  0020                     ??_adc_init:	
  1274                           ; 1 bytes @ 0x0
  1275                           
  1276  0020                     ??_tmr2_init:	
  1277                           ; 1 bytes @ 0x0
  1278                           
  1279  0020                     ??_tmr2_start:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0020                     ??_tmr2_isr_enable:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0020                     ??_led_update_state:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0020                     ?_getADC:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0020                     ?___wmul:	
  1292                           ; 2 bytes @ 0x0
  1293                           
  1294  0020                     ?___lwdiv:	
  1295                           ; 2 bytes @ 0x0
  1296                           
  1297  0020                     tmr2_set_handler@handler:	
  1298                           ; 2 bytes @ 0x0
  1299                           
  1300  0020                     ___wmul@multiplier:	
  1301                           ; 2 bytes @ 0x0
  1302                           
  1303  0020                     ___lwdiv@divisor:	
  1304                           ; 2 bytes @ 0x0
  1305                           
  1306                           
  1307                           ; 2 bytes @ 0x0
  1308  0020                     	ds	2
  1309  0022                     ??_getADC:	
  1310  0022                     ??_tmr2_set_handler:	
  1311                           ; 1 bytes @ 0x2
  1312                           
  1313  0022                     ??_set_interrupt_handle:	
  1314                           ; 1 bytes @ 0x2
  1315                           
  1316  0022                     ___wmul@multiplicand:	
  1317                           ; 1 bytes @ 0x2
  1318                           
  1319  0022                     ___lwdiv@dividend:	
  1320                           ; 2 bytes @ 0x2
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0x2
  1324  0022                     	ds	2
  1325  0024                     ??_adc_gather_init:	
  1326  0024                     ??_adc_gather:	
  1327                           ; 1 bytes @ 0x4
  1328                           
  1329  0024                     ??___wmul:	
  1330                           ; 1 bytes @ 0x4
  1331                           
  1332  0024                     ??___lwdiv:	
  1333                           ; 1 bytes @ 0x4
  1334                           
  1335  0024                     ___wmul@product:	
  1336                           ; 1 bytes @ 0x4
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0x4
  1340  0024                     	ds	1
  1341  0025                     ___lwdiv@counter:	
  1342                           
  1343                           ; 1 bytes @ 0x5
  1344  0025                     	ds	1
  1345  0026                     ??_pwm_update_duty:	
  1346  0026                     ___lwdiv@quotient:	
  1347                           ; 1 bytes @ 0x6
  1348                           
  1349                           
  1350                           ; 2 bytes @ 0x6
  1351  0026                     	ds	2
  1352  0028                     ??_adc_filter:	
  1353  0028                     adc_gather_init@value_buf:	
  1354                           ; 1 bytes @ 0x8
  1355                           
  1356  0028                     adc_gather@value_buf:	
  1357                           ; 20 bytes @ 0x8
  1358                           
  1359                           
  1360                           ; 20 bytes @ 0x8
  1361  0028                     	ds	2
  1362  002A                     adc_filter@sum:	
  1363                           
  1364                           ; 2 bytes @ 0xA
  1365  002A                     	ds	2
  1366  002C                     adc_filter@i:	
  1367                           
  1368                           ; 2 bytes @ 0xC
  1369  002C                     	ds	16
  1370  003C                     adc_gather_init@temp:	
  1371  003C                     adc_gather@temp:	
  1372                           ; 2 bytes @ 0x1C
  1373                           
  1374                           
  1375                           ; 2 bytes @ 0x1C
  1376  003C                     	ds	2
  1377  003E                     adc_gather_init@sum:	
  1378  003E                     adc_gather@sum:	
  1379                           ; 2 bytes @ 0x1E
  1380                           
  1381                           
  1382                           ; 2 bytes @ 0x1E
  1383  003E                     	ds	2
  1384  0040                     adc_gather_init@j:	
  1385  0040                     adc_gather@j:	
  1386                           ; 1 bytes @ 0x20
  1387                           
  1388                           
  1389                           ; 1 bytes @ 0x20
  1390  0040                     	ds	1
  1391  0041                     adc_gather_init@i:	
  1392  0041                     adc_gather@i:	
  1393                           ; 1 bytes @ 0x21
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x21
  1397  0041                     	ds	1
  1398  0042                     ??_main:	
  1399                           
  1400                           ; 1 bytes @ 0x22
  1401  0042                     	ds	2
  1402  0044                     main@i:	
  1403                           
  1404                           ; 1 bytes @ 0x24
  1405  0044                     	ds	1
  1406                           
  1407                           	psect	maintext
  1408  01F2                     __pmaintext:	
  1409 ;;
  1410 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1411 ;;
  1412 ;; *************** function _main *****************
  1413 ;; Defined at:
  1414 ;;		line 181 in file "src/main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  i               1   36[BANK0 ] unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : B1F/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1428 ;;      Params:         0       0       0       0
  1429 ;;      Locals:         0       1       0       0
  1430 ;;      Temps:          0       2       0       0
  1431 ;;      Totals:         0       3       0       0
  1432 ;;Total ram usage:        3 bytes
  1433 ;; Hardware stack levels required when called:    6
  1434 ;; This function calls:
  1435 ;;		_adc_filter
  1436 ;;		_adc_gather
  1437 ;;		_adc_gather_init
  1438 ;;		_adc_init
  1439 ;;		_gpio_init
  1440 ;;		_led_update_state
  1441 ;;		_osc_init
  1442 ;;		_pwm_init
  1443 ;;		_pwm_update_duty
  1444 ;;		_set_interrupt_handle
  1445 ;;		_tmr2_init
  1446 ;;		_tmr2_isr_enable
  1447 ;;		_tmr2_start
  1448 ;; This function is called by:
  1449 ;;		Startup code after reset
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _main
  1455  01F2                     _main:	
  1456                           
  1457                           ;main.c: 183: osc_init();
  1458                           
  1459                           ;incstack = 0
  1460                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1461  01F2  2358               	fcall	_osc_init
  1462                           
  1463                           ;main.c: 185: gpio_init();
  1464  01F3  233F               	fcall	_gpio_init
  1465                           
  1466                           ;main.c: 187: pwm_init();
  1467  01F4  2300               	fcall	_pwm_init
  1468                           
  1469                           ;main.c: 189: adc_init();
  1470  01F5  2331               	fcall	_adc_init
  1471                           
  1472                           ;main.c: 191: tmr2_init();
  1473  01F6  2363               	fcall	_tmr2_init
  1474                           
  1475                           ;main.c: 192: tmr2_start();
  1476  01F7  2386               	fcall	_tmr2_start
  1477                           
  1478                           ;main.c: 194: _delay((unsigned long)((500)*(16000000/4000.0)));
  1479  01F8  300B               	movlw	11
  1480  01F9  0020               	movlb	0	; select bank0
  1481  01FA  00C3               	movwf	??_main+1
  1482  01FB  3026               	movlw	38
  1483  01FC  00C2               	movwf	??_main
  1484  01FD  305D               	movlw	93
  1485  01FE                     u1437:	
  1486  01FE  0B89               	decfsz	9,f
  1487  01FF  29FE               	goto	u1437
  1488  0200  0BC2               	decfsz	??_main,f
  1489  0201  29FE               	goto	u1437
  1490  0202  0BC3               	decfsz	??_main+1,f
  1491  0203  29FE               	goto	u1437
  1492  0204  3200               	nop2
  1493                           
  1494                           ;main.c: 196: adc_gather_init();
  1495  0205  202A               	fcall	_adc_gather_init
  1496                           
  1497                           ;main.c: 198: for(uint8_t i = 0; i < 10; i++) {
  1498  0206  0020               	movlb	0	; select bank0
  1499  0207  01C4               	clrf	main@i
  1500  0208  300A               	movlw	10
  1501  0209  0244               	subwf	main@i,w
  1502  020A  1803               	btfsc	3,0
  1503  020B  2A1C               	goto	l122
  1504  020C                     l1569:	
  1505                           
  1506                           ;main.c: 199: adc_filter_buf[i] = adc_gather_value;
  1507  020C  3544               	lslf	main@i,w
  1508  020D  3E45               	addlw	(low (_adc_filter_buf| 0))& (0+255)
  1509  020E  0086               	movwf	6
  1510  020F  0187               	clrf	7
  1511  0210  085D               	movf	_adc_gather_value,w	;volatile
  1512  0211  3FC0               	movwi [0]fsr1
  1513  0212  085E               	movf	_adc_gather_value+1,w	;volatile
  1514  0213  3FC1               	movwi [1]fsr1
  1515  0214  3001               	movlw	1
  1516  0215  00C2               	movwf	??_main
  1517  0216  0842               	movf	??_main,w
  1518  0217  07C4               	addwf	main@i,f
  1519  0218  300A               	movlw	10
  1520  0219  0244               	subwf	main@i,w
  1521  021A  1C03               	skipc
  1522  021B  2A0C               	goto	l1569
  1523  021C                     l122:	
  1524                           
  1525                           ;main.c: 200: }
  1526                           ;main.c: 201: PIR1bits.TMR2IF = 0;
  1527  021C  1091               	bcf	17,1	;volatile
  1528                           
  1529                           ;main.c: 203: set_interrupt_handle();
  1530  021D  236D               	fcall	_set_interrupt_handle
  1531                           
  1532                           ;main.c: 205: INTCONbits.GIE = 1;
  1533  021E  178B               	bsf	11,7	;volatile
  1534                           
  1535                           ;main.c: 207: INTCONbits.PEIE = 1;
  1536  021F  170B               	bsf	11,6	;volatile
  1537                           
  1538                           ;main.c: 209: tmr2_isr_enable();
  1539  0220  2389               	fcall	_tmr2_isr_enable
  1540  0221                     l123:	
  1541                           ;main.c: 211: while(1) {
  1542                           
  1543  0221  0064               	clrwdt	;# 
  1544                           
  1545                           ;main.c: 215: adc_gather();
  1546  0222  20F2               	fcall	_adc_gather
  1547                           
  1548                           ;main.c: 217: adc_filter();
  1549  0223  21B0               	fcall	_adc_filter
  1550                           
  1551                           ;main.c: 219: led_update_state();
  1552  0224  225C               	fcall	_led_update_state
  1553                           
  1554                           ;main.c: 221: pwm_update_duty();
  1555  0225  22C0               	fcall	_pwm_update_duty
  1556  0226  2A21               	goto	l123
  1557  0227                     __end_of_main:	
  1558                           
  1559                           	psect	text1
  1560  0386                     __ptext1:	
  1561 ;; *************** function _tmr2_start *****************
  1562 ;; Defined at:
  1563 ;;		line 13 in file "src/drv_trm2.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		None
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1577 ;;      Params:         0       0       0       0
  1578 ;;      Locals:         0       0       0       0
  1579 ;;      Temps:          0       0       0       0
  1580 ;;      Totals:         0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    4
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function _tmr2_start
  1593  0386                     _tmr2_start:	
  1594                           
  1595                           ;drv_trm2.c: 14: T2CONbits.TMR2ON = 1;
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _tmr2_start: []
  1599  0386  0020               	movlb	0	; select bank0
  1600  0387  151C               	bsf	28,2	;volatile
  1601  0388  0008               	return
  1602  0389                     __end_of_tmr2_start:	
  1603                           
  1604                           	psect	text2
  1605  0389                     __ptext2:	
  1606 ;; *************** function _tmr2_isr_enable *****************
  1607 ;; Defined at:
  1608 ;;		line 21 in file "src/drv_trm2.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		None
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1622 ;;      Params:         0       0       0       0
  1623 ;;      Locals:         0       0       0       0
  1624 ;;      Temps:          0       0       0       0
  1625 ;;      Totals:         0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used:    1
  1628 ;; Hardware stack levels required when called:    4
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _tmr2_isr_enable
  1638  0389                     _tmr2_isr_enable:	
  1639                           
  1640                           ;drv_trm2.c: 22: PIE1bits.TMR2IE = 1;
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _tmr2_isr_enable: []
  1644  0389  0021               	movlb	1	; select bank1
  1645  038A  1491               	bsf	17,1	;volatile
  1646  038B  0008               	return
  1647  038C                     __end_of_tmr2_isr_enable:	
  1648                           
  1649                           	psect	text3
  1650  0363                     __ptext3:	
  1651 ;; *************** function _tmr2_init *****************
  1652 ;; Defined at:
  1653 ;;		line 5 in file "src/drv_trm2.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1667 ;;      Params:         0       0       0       0
  1668 ;;      Locals:         0       0       0       0
  1669 ;;      Temps:          0       0       0       0
  1670 ;;      Totals:         0       0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    4
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _tmr2_init
  1683  0363                     _tmr2_init:	
  1684                           
  1685                           ;drv_trm2.c: 7: T2CONbits.T2OUTPS = 0x0F;
  1686                           
  1687                           ;incstack = 0
  1688                           ; Regs used in _tmr2_init: [wreg+status,2+status,0]
  1689  0363  3078               	movlw	120
  1690  0364  0020               	movlb	0	; select bank0
  1691  0365  049C               	iorwf	28,f	;volatile
  1692                           
  1693                           ;drv_trm2.c: 8: T2CONbits.T2CKPS = 0x01;
  1694  0366  081C               	movf	28,w	;volatile
  1695  0367  39FC               	andlw	-4
  1696  0368  3801               	iorlw	1
  1697  0369  009C               	movwf	28	;volatile
  1698                           
  1699                           ;drv_trm2.c: 10: PR2 = 249;
  1700  036A  30F9               	movlw	249
  1701  036B  009B               	movwf	27	;volatile
  1702  036C  0008               	return
  1703  036D                     __end_of_tmr2_init:	
  1704                           
  1705                           	psect	text4
  1706  036D                     __ptext4:	
  1707 ;; *************** function _set_interrupt_handle *****************
  1708 ;; Defined at:
  1709 ;;		line 177 in file "src/main.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1723 ;;      Params:         0       0       0       0
  1724 ;;      Locals:         0       0       0       0
  1725 ;;      Temps:          0       0       0       0
  1726 ;;      Totals:         0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    5
  1730 ;; This function calls:
  1731 ;;		_tmr2_set_handler
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _set_interrupt_handle
  1739  036D                     _set_interrupt_handle:	
  1740                           
  1741                           ;main.c: 178: tmr2_set_handler(pwm_run);
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _set_interrupt_handle: [wreg+status,2+status,0+pclath+cstack]
  1745  036D  308E               	movlw	low _pwm_run
  1746  036E  0020               	movlb	0	; select bank0
  1747  036F  00A0               	movwf	tmr2_set_handler@handler
  1748  0370  3002               	movlw	high _pwm_run
  1749  0371  00A1               	movwf	tmr2_set_handler@handler+1
  1750  0372  237A               	fcall	_tmr2_set_handler
  1751  0373  0008               	return
  1752  0374                     __end_of_set_interrupt_handle:	
  1753                           
  1754                           	psect	text5
  1755  037A                     __ptext5:	
  1756 ;; *************** function _tmr2_set_handler *****************
  1757 ;; Defined at:
  1758 ;;		line 36 in file "src/drv_trm2.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  1761 ;;		 -> pwm_run(1), 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1773 ;;      Params:         0       2       0       0
  1774 ;;      Locals:         0       0       0       0
  1775 ;;      Temps:          0       0       0       0
  1776 ;;      Totals:         0       2       0       0
  1777 ;;Total ram usage:        2 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    4
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		_set_interrupt_handle
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           
  1788                           ;psect for function _tmr2_set_handler
  1789  037A                     _tmr2_set_handler:	
  1790                           
  1791                           ;drv_trm2.c: 37: tmr2_isr_handler = handler;
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _tmr2_set_handler: [wreg]
  1795  037A  0020               	movlb	0	; select bank0
  1796  037B  0821               	movf	tmr2_set_handler@handler+1,w
  1797  037C  00DA               	movwf	_tmr2_isr_handler+1
  1798  037D  0820               	movf	tmr2_set_handler@handler,w
  1799  037E  00D9               	movwf	_tmr2_isr_handler
  1800  037F  0008               	return
  1801  0380                     __end_of_tmr2_set_handler:	
  1802                           
  1803                           	psect	text6
  1804  02C0                     __ptext6:	
  1805 ;; *************** function _pwm_update_duty *****************
  1806 ;; Defined at:
  1807 ;;		line 153 in file "src/main.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1821 ;;      Params:         0       0       0       0
  1822 ;;      Locals:         0       0       0       0
  1823 ;;      Temps:          0       0       0       0
  1824 ;;      Totals:         0       0       0       0
  1825 ;;Total ram usage:        0 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    5
  1828 ;; This function calls:
  1829 ;;		___wmul
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _pwm_update_duty
  1837  02C0                     _pwm_update_duty:	
  1838                           
  1839                           ;main.c: 154: if(on) {
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _pwm_update_duty: [wreg+status,2+status,0+pclath+cstack]
  1843  02C0  0874               	movf	_on,w	;volatile
  1844  02C1  1903               	btfsc	3,2
  1845  02C2  2AE1               	goto	l1503
  1846                           
  1847                           ;main.c: 155: if(adc_filter_value > 1010) {
  1848  02C3  3003               	movlw	3
  1849  02C4  0273               	subwf	_adc_filter_value+1,w	;volatile
  1850  02C5  30F3               	movlw	243
  1851  02C6  1903               	skipnz
  1852  02C7  0272               	subwf	_adc_filter_value,w	;volatile
  1853  02C8  1C03               	skipc
  1854  02C9  2ACF               	goto	l1501
  1855                           
  1856                           ;main.c: 156: target_value = 10000;
  1857  02CA  3010               	movlw	16
  1858  02CB  00F0               	movwf	_target_value	;volatile
  1859  02CC  3027               	movlw	39
  1860  02CD  00F1               	movwf	_target_value+1	;volatile
  1861                           
  1862                           ;main.c: 157: } else {
  1863  02CE  0008               	return
  1864  02CF                     l1501:	
  1865                           
  1866                           ;main.c: 158: target_value = (adc_filter_value - 10) * 10;
  1867  02CF  0872               	movf	_adc_filter_value,w	;volatile
  1868  02D0  3EF6               	addlw	246
  1869  02D1  0020               	movlb	0	; select bank0
  1870  02D2  00A0               	movwf	___wmul@multiplier
  1871  02D3  30FF               	movlw	255
  1872  02D4  3D73               	addwfc	_adc_filter_value+1,w	;volatile
  1873  02D5  00A1               	movwf	___wmul@multiplier+1
  1874  02D6  300A               	movlw	10
  1875  02D7  00A2               	movwf	___wmul@multiplicand
  1876  02D8  3000               	movlw	0
  1877  02D9  00A3               	movwf	___wmul@multiplicand+1
  1878  02DA  22E4               	fcall	___wmul
  1879  02DB  0020               	movlb	0	; select bank0
  1880  02DC  0821               	movf	?___wmul+1,w
  1881  02DD  00F1               	movwf	_target_value+1	;volatile
  1882  02DE  0820               	movf	?___wmul,w
  1883  02DF  00F0               	movwf	_target_value	;volatile
  1884                           
  1885                           ;main.c: 159: }
  1886                           ;main.c: 160: } else {
  1887  02E0  0008               	return
  1888  02E1                     l1503:	
  1889                           
  1890                           ;main.c: 161: target_value = 0;
  1891  02E1  01F0               	clrf	_target_value	;volatile
  1892  02E2  01F1               	clrf	_target_value+1	;volatile
  1893  02E3  0008               	return
  1894  02E4                     __end_of_pwm_update_duty:	
  1895                           
  1896                           	psect	text7
  1897  02E4                     __ptext7:	
  1898 ;; *************** function ___wmul *****************
  1899 ;; Defined at:
  1900 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1903 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  product         2    4[BANK0 ] unsigned int 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  2    0[BANK0 ] unsigned int 
  1908 ;; Registers used:
  1909 ;;		wreg, status,2, status,0
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1915 ;;      Params:         0       4       0       0
  1916 ;;      Locals:         0       2       0       0
  1917 ;;      Temps:          0       0       0       0
  1918 ;;      Totals:         0       6       0       0
  1919 ;;Total ram usage:        6 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    4
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_pwm_update_duty
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function ___wmul
  1931  02E4                     ___wmul:	
  1932                           
  1933                           ;incstack = 0
  1934                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1935  02E4  0020               	movlb	0	; select bank0
  1936  02E5  01A4               	clrf	___wmul@product
  1937  02E6  01A5               	clrf	___wmul@product+1
  1938  02E7                     l1295:	
  1939  02E7  1C20               	btfss	___wmul@multiplier,0
  1940  02E8  2AED               	goto	l237
  1941  02E9  0822               	movf	___wmul@multiplicand,w
  1942  02EA  07A4               	addwf	___wmul@product,f
  1943  02EB  0823               	movf	___wmul@multiplicand+1,w
  1944  02EC  3DA5               	addwfc	___wmul@product+1,f
  1945  02ED                     l237:	
  1946  02ED  3001               	movlw	1
  1947  02EE                     u1015:	
  1948  02EE  35A2               	lslf	___wmul@multiplicand,f
  1949  02EF  0DA3               	rlf	___wmul@multiplicand+1,f
  1950  02F0  0B89               	decfsz	9,f
  1951  02F1  2AEE               	goto	u1015
  1952  02F2  3001               	movlw	1
  1953  02F3                     u1025:	
  1954  02F3  36A1               	lsrf	___wmul@multiplier+1,f
  1955  02F4  0CA0               	rrf	___wmul@multiplier,f
  1956  02F5  0B89               	decfsz	9,f
  1957  02F6  2AF3               	goto	u1025
  1958  02F7  0820               	movf	___wmul@multiplier,w
  1959  02F8  0421               	iorwf	___wmul@multiplier+1,w
  1960  02F9  1D03               	btfss	3,2
  1961  02FA  2AE7               	goto	l1295
  1962  02FB  0825               	movf	___wmul@product+1,w
  1963  02FC  00A1               	movwf	?___wmul+1
  1964  02FD  0824               	movf	___wmul@product,w
  1965  02FE  00A0               	movwf	?___wmul
  1966  02FF  0008               	return
  1967  0300                     __end_of___wmul:	
  1968                           
  1969                           	psect	text8
  1970  0300                     __ptext8:	
  1971 ;; *************** function _pwm_init *****************
  1972 ;; Defined at:
  1973 ;;		line 3 in file "src/drv_pwm.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1987 ;;      Params:         0       0       0       0
  1988 ;;      Locals:         0       0       0       0
  1989 ;;      Temps:          0       0       0       0
  1990 ;;      Totals:         0       0       0       0
  1991 ;;Total ram usage:        0 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    4
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _pwm_init
  2003  0300                     _pwm_init:	
  2004                           
  2005                           ;drv_pwm.c: 5: PWM3CONbits.OE = 1;
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _pwm_init: [wreg+status,2+status,0]
  2009  0300  003B               	movlb	27	; select bank27
  2010  0301  173B               	bsf	59,6	;volatile
  2011                           
  2012                           ;drv_pwm.c: 7: PWM3CONbits.POL = 0;
  2013  0302  123B               	bcf	59,4	;volatile
  2014                           
  2015                           ;drv_pwm.c: 9: PWM3CONbits.MODE = 0x00;
  2016  0303  30F3               	movlw	-13
  2017  0304  05BB               	andwf	59,f	;volatile
  2018                           
  2019                           ;drv_pwm.c: 11: PWM3INTE = 0x00;
  2020  0305  01BC               	clrf	60	;volatile
  2021                           
  2022                           ;drv_pwm.c: 13: PWM3INTF = 0x00;
  2023  0306  01BD               	clrf	61	;volatile
  2024                           
  2025                           ;drv_pwm.c: 15: PWM3CLKCONbits.PS = 0x00;
  2026  0307  308F               	movlw	-113
  2027  0308  05BE               	andwf	62,f	;volatile
  2028                           
  2029                           ;drv_pwm.c: 16: PWM3CLKCONbits.CS = 0x00;
  2030  0309  30FC               	movlw	-4
  2031  030A  05BE               	andwf	62,f	;volatile
  2032                           
  2033                           ;drv_pwm.c: 18: PWM3LDCONbits.LDA = 1;
  2034  030B  17BF               	bsf	63,7	;volatile
  2035                           
  2036                           ;drv_pwm.c: 20: PWM3OFCONbits.OFM = 0x00;
  2037  030C  309F               	movlw	-97
  2038  030D  05C0               	andwf	64,f	;volatile
  2039                           
  2040                           ;drv_pwm.c: 22: PWM3PH = 0x00;
  2041  030E  01B1               	clrf	49	;volatile
  2042  030F  01B2               	clrf	50	;volatile
  2043                           
  2044                           ;drv_pwm.c: 24: PWM3DC = 0x00;
  2045  0310  01B3               	clrf	51	;volatile
  2046  0311  01B4               	clrf	52	;volatile
  2047                           
  2048                           ;drv_pwm.c: 26: PWM3PR = 0x270F;
  2049  0312  3027               	movlw	39
  2050  0313  00B6               	movwf	54	;volatile
  2051  0314  300F               	movlw	15
  2052  0315  00B5               	movwf	53	;volatile
  2053                           
  2054                           ;drv_pwm.c: 28: PWM3OF = 0x00;
  2055  0316  01B7               	clrf	55	;volatile
  2056  0317  01B8               	clrf	56	;volatile
  2057                           
  2058                           ;drv_pwm.c: 30: PWM3TMR = 0x00;
  2059  0318  01B9               	clrf	57	;volatile
  2060  0319  01BA               	clrf	58	;volatile
  2061                           
  2062                           ;drv_pwm.c: 32: PWM3CONbits.EN = 1;
  2063  031A  17BB               	bsf	59,7	;volatile
  2064  031B  0008               	return
  2065  031C                     __end_of_pwm_init:	
  2066                           
  2067                           	psect	text9
  2068  0358                     __ptext9:	
  2069 ;; *************** function _osc_init *****************
  2070 ;; Defined at:
  2071 ;;		line 3 in file "src/drv_osc.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2085 ;;      Params:         0       0       0       0
  2086 ;;      Locals:         0       0       0       0
  2087 ;;      Temps:          0       0       0       0
  2088 ;;      Totals:         0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    4
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           
  2100                           ;psect for function _osc_init
  2101  0358                     _osc_init:	
  2102                           
  2103                           ;drv_osc.c: 5: OSCCONbits.SPLLEN = 0x00;
  2104                           
  2105                           ;incstack = 0
  2106                           ; Regs used in _osc_init: [wreg+status,2+status,0]
  2107  0358  0021               	movlb	1	; select bank1
  2108  0359  1399               	bcf	25,7	;volatile
  2109                           
  2110                           ;drv_osc.c: 7: OSCCONbits.IRCF = 0x0F;
  2111  035A  3078               	movlw	120
  2112  035B  0499               	iorwf	25,f	;volatile
  2113                           
  2114                           ;drv_osc.c: 9: OSCCONbits.SCS = 0x00;
  2115  035C  30FC               	movlw	-4
  2116  035D  0599               	andwf	25,f	;volatile
  2117                           
  2118                           ;drv_osc.c: 11: OSCTUNEbits.TUN = 0x00;
  2119  035E  30C0               	movlw	-64
  2120  035F  0598               	andwf	24,f	;volatile
  2121  0360                     l141:	
  2122                           ;drv_osc.c: 13: while(!OSCSTATbits.HFIOFR);
  2123                           
  2124  0360  1A1A               	btfsc	26,4	;volatile
  2125  0361  0008               	return
  2126  0362  2B60               	goto	l141
  2127  0363                     __end_of_osc_init:	
  2128                           
  2129                           	psect	text10
  2130  025C                     __ptext10:	
  2131 ;; *************** function _led_update_state *****************
  2132 ;; Defined at:
  2133 ;;		line 127 in file "src/main.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2147 ;;      Params:         0       0       0       0
  2148 ;;      Locals:         0       0       0       0
  2149 ;;      Temps:          0       1       0       0
  2150 ;;      Totals:         0       1       0       0
  2151 ;;Total ram usage:        1 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    4
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function _led_update_state
  2163  025C                     _led_update_state:	
  2164                           
  2165                           ;main.c: 128: static uint8_t cnt_on = 0;
  2166                           ;main.c: 129: static uint8_t cnt_off = 0;
  2167                           ;main.c: 130: if(on) {
  2168                           
  2169                           ;incstack = 0
  2170                           ; Regs used in _led_update_state: [wreg+status,2+status,0]
  2171  025C  0874               	movf	_on,w	;volatile
  2172  025D  1903               	btfsc	3,2
  2173  025E  2A75               	goto	l1483
  2174                           
  2175                           ;main.c: 131: if(adc_filter_value < 100) {
  2176  025F  3000               	movlw	0
  2177  0260  0273               	subwf	_adc_filter_value+1,w	;volatile
  2178  0261  3064               	movlw	100
  2179  0262  1903               	skipnz
  2180  0263  0272               	subwf	_adc_filter_value,w	;volatile
  2181  0264  1803               	skipnc
  2182  0265  2A72               	goto	l1481
  2183                           
  2184                           ;main.c: 132: cnt_off++;
  2185  0266  3001               	movlw	1
  2186  0267  0020               	movlb	0	; select bank0
  2187  0268  00A0               	movwf	??_led_update_state
  2188  0269  0820               	movf	??_led_update_state,w
  2189  026A  07DF               	addwf	led_update_state@cnt_off,f
  2190                           
  2191                           ;main.c: 133: if(cnt_off >= 30) {
  2192  026B  301E               	movlw	30
  2193  026C  025F               	subwf	led_update_state@cnt_off,w
  2194  026D  1C03               	skipc
  2195  026E  0008               	return
  2196                           
  2197                           ;main.c: 134: cnt_off = 0;
  2198  026F  01DF               	clrf	led_update_state@cnt_off
  2199                           
  2200                           ;main.c: 135: on = 0;
  2201  0270  01F4               	clrf	_on	;volatile
  2202                           
  2203                           ;main.c: 136: }
  2204                           ;main.c: 137: } else {
  2205  0271  0008               	return
  2206  0272                     l1481:	
  2207                           
  2208                           ;main.c: 138: cnt_off = 0;
  2209  0272  0020               	movlb	0	; select bank0
  2210  0273  01DF               	clrf	led_update_state@cnt_off
  2211                           
  2212                           ;main.c: 139: }
  2213                           ;main.c: 140: } else {
  2214  0274  0008               	return
  2215  0275                     l1483:	
  2216                           
  2217                           ;main.c: 141: if(adc_filter_value > 100) {
  2218  0275  3000               	movlw	0
  2219  0276  0273               	subwf	_adc_filter_value+1,w	;volatile
  2220  0277  3065               	movlw	101
  2221  0278  1903               	skipnz
  2222  0279  0272               	subwf	_adc_filter_value,w	;volatile
  2223  027A  1C03               	skipc
  2224  027B  2A8B               	goto	l1493
  2225                           
  2226                           ;main.c: 142: cnt_on++;
  2227  027C  3001               	movlw	1
  2228  027D  0020               	movlb	0	; select bank0
  2229  027E  00A0               	movwf	??_led_update_state
  2230  027F  0820               	movf	??_led_update_state,w
  2231  0280  07E0               	addwf	led_update_state@cnt_on,f
  2232                           
  2233                           ;main.c: 143: if(cnt_on >= 30) {
  2234  0281  301E               	movlw	30
  2235  0282  0260               	subwf	led_update_state@cnt_on,w
  2236  0283  1C03               	skipc
  2237  0284  0008               	return
  2238                           
  2239                           ;main.c: 144: cnt_on = 0;
  2240  0285  01E0               	clrf	led_update_state@cnt_on
  2241                           
  2242                           ;main.c: 145: on = 1;
  2243  0286  3001               	movlw	1
  2244  0287  00A0               	movwf	??_led_update_state
  2245  0288  0820               	movf	??_led_update_state,w
  2246  0289  00F4               	movwf	_on	;volatile
  2247                           
  2248                           ;main.c: 146: }
  2249                           ;main.c: 147: } else {
  2250  028A  0008               	return
  2251  028B                     l1493:	
  2252                           
  2253                           ;main.c: 148: cnt_on = 0;
  2254  028B  0020               	movlb	0	; select bank0
  2255  028C  01E0               	clrf	led_update_state@cnt_on
  2256  028D  0008               	return
  2257  028E                     __end_of_led_update_state:	
  2258                           
  2259                           	psect	text11
  2260  033F                     __ptext11:	
  2261 ;; *************** function _gpio_init *****************
  2262 ;; Defined at:
  2263 ;;		line 3 in file "src/drv_gpio.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		None
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2277 ;;      Params:         0       0       0       0
  2278 ;;      Locals:         0       0       0       0
  2279 ;;      Temps:          0       0       0       0
  2280 ;;      Totals:         0       0       0       0
  2281 ;;Total ram usage:        0 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    4
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _gpio_init
  2293  033F                     _gpio_init:	
  2294                           
  2295                           ;drv_gpio.c: 6: TRISAbits.TRISA4 = 1;
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _gpio_init: []
  2299  033F  0021               	movlb	1	; select bank1
  2300  0340  160C               	bsf	12,4	;volatile
  2301                           
  2302                           ;drv_gpio.c: 7: ANSELAbits.ANSA4 = 1;
  2303  0341  0023               	movlb	3	; select bank3
  2304  0342  160C               	bsf	12,4	;volatile
  2305                           
  2306                           ;drv_gpio.c: 8: LATAbits.LATA4 = 0;
  2307  0343  0022               	movlb	2	; select bank2
  2308  0344  120C               	bcf	12,4	;volatile
  2309                           
  2310                           ;drv_gpio.c: 10: ANSELAbits.ANSA2 = 0;
  2311  0345  0023               	movlb	3	; select bank3
  2312  0346  110C               	bcf	12,2	;volatile
  2313                           
  2314                           ;drv_gpio.c: 11: LATAbits.LATA2 = 0;
  2315  0347  0022               	movlb	2	; select bank2
  2316  0348  110C               	bcf	12,2	;volatile
  2317                           
  2318                           ;drv_gpio.c: 12: TRISAbits.TRISA2 = 0;
  2319  0349  0021               	movlb	1	; select bank1
  2320  034A  110C               	bcf	12,2	;volatile
  2321  034B  0008               	return
  2322  034C                     __end_of_gpio_init:	
  2323                           
  2324                           	psect	text12
  2325  0331                     __ptext12:	
  2326 ;; *************** function _adc_init *****************
  2327 ;; Defined at:
  2328 ;;		line 3 in file "src/drv_adc.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;		None
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;		None
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      void 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2342 ;;      Params:         0       0       0       0
  2343 ;;      Locals:         0       0       0       0
  2344 ;;      Temps:          0       0       0       0
  2345 ;;      Totals:         0       0       0       0
  2346 ;;Total ram usage:        0 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    4
  2349 ;; This function calls:
  2350 ;;		Nothing
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _adc_init
  2358  0331                     _adc_init:	
  2359                           
  2360                           ;drv_adc.c: 5: ADCON0bits.CHS = 0x03;
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  2364  0331  0021               	movlb	1	; select bank1
  2365  0332  081D               	movf	29,w	;volatile
  2366  0333  3983               	andlw	-125
  2367  0334  380C               	iorlw	12
  2368  0335  009D               	movwf	29	;volatile
  2369                           
  2370                           ;drv_adc.c: 7: ADCON0bits.ADON = 1;
  2371  0336  141D               	bsf	29,0	;volatile
  2372                           
  2373                           ;drv_adc.c: 9: ADCON1bits.ADFM = 1;
  2374  0337  179E               	bsf	30,7	;volatile
  2375                           
  2376                           ;drv_adc.c: 11: ADCON1bits.ADCS = 0x02;
  2377  0338  081E               	movf	30,w	;volatile
  2378  0339  398F               	andlw	-113
  2379  033A  3820               	iorlw	32
  2380  033B  009E               	movwf	30	;volatile
  2381                           
  2382                           ;drv_adc.c: 13: ADCON1bits.ADPREF = 0x00;
  2383  033C  30FC               	movlw	-4
  2384  033D  059E               	andwf	30,f	;volatile
  2385  033E  0008               	return
  2386  033F                     __end_of_adc_init:	
  2387                           
  2388                           	psect	text13
  2389  002A                     __ptext13:	
  2390 ;; *************** function _adc_gather_init *****************
  2391 ;; Defined at:
  2392 ;;		line 62 in file "src/main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  value_buf      20    8[BANK0 ] unsigned int [10]
  2397 ;;  sum             2   30[BANK0 ] unsigned int 
  2398 ;;  temp            2   28[BANK0 ] unsigned int 
  2399 ;;  i               1   33[BANK0 ] unsigned char 
  2400 ;;  j               1   32[BANK0 ] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2410 ;;      Params:         0       0       0       0
  2411 ;;      Locals:         0      26       0       0
  2412 ;;      Temps:          0       4       0       0
  2413 ;;      Totals:         0      30       0       0
  2414 ;;Total ram usage:       30 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    5
  2417 ;; This function calls:
  2418 ;;		_getADC
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _adc_gather_init
  2426  002A                     _adc_gather_init:	
  2427                           
  2428                           ;main.c: 63: uint8_t i,j;
  2429                           ;main.c: 64: uint16_t temp,sum = 0;
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in _adc_gather_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2433  002A  0020               	movlb	0	; select bank0
  2434  002B  01BE               	clrf	adc_gather_init@sum
  2435  002C  01BF               	clrf	adc_gather_init@sum+1
  2436                           
  2437                           ;main.c: 65: uint16_t value_buf[10] = {0};
  2438  002D  30B4               	movlw	low adc_gather_init@F3551
  2439  002E  0086               	movwf	6
  2440  002F  3000               	movlw	high adc_gather_init@F3551
  2441  0030  0087               	movwf	7
  2442  0031  3028               	movlw	low adc_gather_init@value_buf
  2443  0032  0084               	movwf	4
  2444  0033  3000               	movlw	high adc_gather_init@value_buf
  2445  0034  0085               	movwf	5
  2446  0035  3014               	movlw	20
  2447  0036  00A4               	movwf	??_adc_gather_init
  2448  0037                     u1110:	
  2449  0037  0016               	moviw fsr1++
  2450  0038  001A               	movwi fsr0++
  2451  0039  0BA4               	decfsz	??_adc_gather_init,f
  2452  003A  2837               	goto	u1110
  2453                           
  2454                           ;main.c: 66: for(i = 0; i < 10; i++) {
  2455  003B  01C1               	clrf	adc_gather_init@i
  2456  003C  300A               	movlw	10
  2457  003D  0241               	subwf	adc_gather_init@i,w
  2458  003E  1803               	btfsc	3,0
  2459  003F  2857               	goto	l1351
  2460  0040                     l1343:	
  2461                           
  2462                           ;main.c: 67: value_buf[i] = getADC();
  2463  0040  231C               	fcall	_getADC
  2464  0041  0020               	movlb	0	; select bank0
  2465  0042  3541               	lslf	adc_gather_init@i,w
  2466  0043  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2467  0044  0086               	movwf	6
  2468  0045  0187               	clrf	7
  2469  0046  0820               	movf	?_getADC,w
  2470  0047  3FC0               	movwi [0]fsr1
  2471  0048  0821               	movf	?_getADC+1,w
  2472  0049  3FC1               	movwi [1]fsr1
  2473                           
  2474                           ;main.c: 68: _delay((unsigned long)((100)*(16000000/4000000.0)));
  2475  004A  3085               	movlw	133
  2476  004B                     u1447:	
  2477  004B  0B89               	decfsz	9,f
  2478  004C  284B               	goto	u1447
  2479  004D  0000               	nop
  2480  004E  3001               	movlw	1
  2481  004F  0020               	movlb	0	; select bank0
  2482  0050  00A4               	movwf	??_adc_gather_init
  2483  0051  0824               	movf	??_adc_gather_init,w
  2484  0052  07C1               	addwf	adc_gather_init@i,f
  2485  0053  300A               	movlw	10
  2486  0054  0241               	subwf	adc_gather_init@i,w
  2487  0055  1C03               	skipc
  2488  0056  2840               	goto	l1343
  2489  0057                     l1351:	
  2490                           
  2491                           ;main.c: 69: }
  2492                           ;main.c: 70: for(j = 0; j < 10 - 1; j++) {
  2493  0057  01C0               	clrf	adc_gather_init@j
  2494  0058  3009               	movlw	9
  2495  0059  0240               	subwf	adc_gather_init@j,w
  2496  005A  1803               	btfsc	3,0
  2497  005B  28BA               	goto	l52
  2498  005C                     l1357:	
  2499                           
  2500                           ;main.c: 71: for(i = 0;i < 10 - j; i++) {
  2501  005C  01C1               	clrf	adc_gather_init@i
  2502  005D                     l1369:	
  2503  005D  0840               	movf	adc_gather_init@j,w
  2504  005E  00A4               	movwf	??_adc_gather_init
  2505  005F  01A5               	clrf	??_adc_gather_init+1
  2506  0060  09A4               	comf	??_adc_gather_init,f
  2507  0061  09A5               	comf	??_adc_gather_init+1,f
  2508  0062  0AA4               	incf	??_adc_gather_init,f
  2509  0063  1903               	skipnz
  2510  0064  0AA5               	incf	??_adc_gather_init+1,f
  2511  0065  0824               	movf	??_adc_gather_init,w
  2512  0066  3E0A               	addlw	10
  2513  0067  00A6               	movwf	??_adc_gather_init+2
  2514  0068  3000               	movlw	0
  2515  0069  3D25               	addwfc	??_adc_gather_init+1,w
  2516  006A  00A7               	movwf	??_adc_gather_init+3
  2517  006B  0827               	movf	??_adc_gather_init+3,w
  2518  006C  3A80               	xorlw	128
  2519  006D  3C80               	sublw	128
  2520  006E  1D03               	skipz
  2521  006F  2872               	goto	u1165
  2522  0070  0826               	movf	??_adc_gather_init+2,w
  2523  0071  0241               	subwf	adc_gather_init@i,w
  2524  0072                     u1165:	
  2525  0072  1803               	btfsc	3,0
  2526  0073  28B1               	goto	l1371
  2527                           
  2528                           ;main.c: 72: if(value_buf[i] > value_buf[i + 1]) {
  2529  0074  0020               	movlb	0	; select bank0
  2530  0075  3541               	lslf	adc_gather_init@i,w
  2531  0076  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2532  0077  0086               	movwf	6
  2533  0078  0187               	clrf	7
  2534  0079  3F40               	moviw [0]fsr1
  2535  007A  00A4               	movwf	??_adc_gather_init
  2536  007B  3F41               	moviw [1]fsr1
  2537  007C  00A5               	movwf	??_adc_gather_init+1
  2538  007D  3541               	lslf	adc_gather_init@i,w
  2539  007E  3E02               	addlw	2
  2540  007F  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2541  0080  0086               	movwf	6
  2542  0081  0187               	clrf	7
  2543  0082  3F40               	moviw [0]fsr1
  2544  0083  00A6               	movwf	??_adc_gather_init+2
  2545  0084  3F41               	moviw [1]fsr1
  2546  0085  00A7               	movwf	??_adc_gather_init+3
  2547  0086  0825               	movf	??_adc_gather_init+1,w
  2548  0087  0227               	subwf	??_adc_gather_init+3,w
  2549  0088  1D03               	skipz
  2550  0089  288C               	goto	u1155
  2551  008A  0824               	movf	??_adc_gather_init,w
  2552  008B  0226               	subwf	??_adc_gather_init+2,w
  2553  008C                     u1155:	
  2554  008C  1803               	skipnc
  2555  008D  28AC               	goto	l1367
  2556                           
  2557                           ;main.c: 73: temp = value_buf[i];
  2558  008E  3541               	lslf	adc_gather_init@i,w
  2559  008F  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2560  0090  0086               	movwf	6
  2561  0091  0187               	clrf	7
  2562  0092  3F40               	moviw [0]fsr1
  2563  0093  00BC               	movwf	adc_gather_init@temp
  2564  0094  3F41               	moviw [1]fsr1
  2565  0095  00BD               	movwf	adc_gather_init@temp+1
  2566                           
  2567                           ;main.c: 74: value_buf[i] = value_buf[i + 1];
  2568  0096  3541               	lslf	adc_gather_init@i,w
  2569  0097  3E02               	addlw	2
  2570  0098  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2571  0099  0086               	movwf	6
  2572  009A  0187               	clrf	7
  2573  009B  3541               	lslf	adc_gather_init@i,w
  2574  009C  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2575  009D  0084               	movwf	4
  2576  009E  0185               	clrf	5
  2577  009F  3F40               	moviw [0]fsr1
  2578  00A0  3F80               	movwi [0]fsr0
  2579  00A1  3F41               	moviw [1]fsr1
  2580  00A2  3F81               	movwi [1]fsr0
  2581                           
  2582                           ;main.c: 75: value_buf[i + 1] = temp;
  2583  00A3  3541               	lslf	adc_gather_init@i,w
  2584  00A4  3E02               	addlw	2
  2585  00A5  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2586  00A6  0086               	movwf	6
  2587  00A7  0187               	clrf	7
  2588  00A8  083C               	movf	adc_gather_init@temp,w
  2589  00A9  3FC0               	movwi [0]fsr1
  2590  00AA  083D               	movf	adc_gather_init@temp+1,w
  2591  00AB  3FC1               	movwi [1]fsr1
  2592  00AC                     l1367:	
  2593  00AC  3001               	movlw	1
  2594  00AD  00A4               	movwf	??_adc_gather_init
  2595  00AE  0824               	movf	??_adc_gather_init,w
  2596  00AF  07C1               	addwf	adc_gather_init@i,f
  2597  00B0  285D               	goto	l1369
  2598  00B1                     l1371:	
  2599  00B1  3001               	movlw	1
  2600  00B2  0020               	movlb	0	; select bank0
  2601  00B3  00A4               	movwf	??_adc_gather_init
  2602  00B4  0824               	movf	??_adc_gather_init,w
  2603  00B5  07C0               	addwf	adc_gather_init@j,f
  2604  00B6  3009               	movlw	9
  2605  00B7  0240               	subwf	adc_gather_init@j,w
  2606  00B8  1C03               	skipc
  2607  00B9  285C               	goto	l1357
  2608  00BA                     l52:	
  2609                           
  2610                           ;main.c: 76: }
  2611                           ;main.c: 77: }
  2612                           ;main.c: 78: }
  2613                           ;main.c: 79: for(i = 1; i < 10 - 1; i++) {
  2614  00BA  01C1               	clrf	adc_gather_init@i
  2615  00BB  0AC1               	incf	adc_gather_init@i,f
  2616  00BC  3009               	movlw	9
  2617  00BD  0241               	subwf	adc_gather_init@i,w
  2618  00BE  1803               	btfsc	3,0
  2619  00BF  28D4               	goto	l1385
  2620  00C0                     l1379:	
  2621                           
  2622                           ;main.c: 80: sum += value_buf[i];
  2623  00C0  3541               	lslf	adc_gather_init@i,w
  2624  00C1  3E28               	addlw	(low (adc_gather_init@value_buf| 0))& (0+255)
  2625  00C2  0086               	movwf	6
  2626  00C3  0187               	clrf	7
  2627  00C4  3F40               	moviw [0]fsr1
  2628  00C5  00A4               	movwf	??_adc_gather_init
  2629  00C6  3F41               	moviw [1]fsr1
  2630  00C7  00A5               	movwf	??_adc_gather_init+1
  2631  00C8  0824               	movf	??_adc_gather_init,w
  2632  00C9  07BE               	addwf	adc_gather_init@sum,f
  2633  00CA  0825               	movf	??_adc_gather_init+1,w
  2634  00CB  3DBF               	addwfc	adc_gather_init@sum+1,f
  2635  00CC  3001               	movlw	1
  2636  00CD  00A4               	movwf	??_adc_gather_init
  2637  00CE  0824               	movf	??_adc_gather_init,w
  2638  00CF  07C1               	addwf	adc_gather_init@i,f
  2639  00D0  3009               	movlw	9
  2640  00D1  0241               	subwf	adc_gather_init@i,w
  2641  00D2  1C03               	skipc
  2642  00D3  28C0               	goto	l1379
  2643  00D4                     l1385:	
  2644                           
  2645                           ;main.c: 81: }
  2646                           ;main.c: 82: adc_gather_value = sum / (10 - 2);
  2647  00D4  083F               	movf	adc_gather_init@sum+1,w
  2648  00D5  00A5               	movwf	??_adc_gather_init+1
  2649  00D6  083E               	movf	adc_gather_init@sum,w
  2650  00D7  00A4               	movwf	??_adc_gather_init
  2651  00D8  36A5               	lsrf	??_adc_gather_init+1,f
  2652  00D9  0CA4               	rrf	??_adc_gather_init,f
  2653  00DA  36A5               	lsrf	??_adc_gather_init+1,f
  2654  00DB  0CA4               	rrf	??_adc_gather_init,f
  2655  00DC  36A5               	lsrf	??_adc_gather_init+1,f
  2656  00DD  0CA4               	rrf	??_adc_gather_init,f
  2657  00DE  0824               	movf	??_adc_gather_init,w
  2658  00DF  00DD               	movwf	_adc_gather_value	;volatile
  2659  00E0  0825               	movf	??_adc_gather_init+1,w
  2660  00E1  00DE               	movwf	_adc_gather_value+1	;volatile
  2661                           
  2662                           ;main.c: 83: if(adc_gather_value < 150) {
  2663  00E2  3000               	movlw	0
  2664  00E3  025E               	subwf	_adc_gather_value+1,w	;volatile
  2665  00E4  3096               	movlw	150
  2666  00E5  1903               	skipnz
  2667  00E6  025D               	subwf	_adc_gather_value,w	;volatile
  2668  00E7  1803               	skipnc
  2669  00E8  28ED               	goto	l1391
  2670                           
  2671                           ;main.c: 84: on = 0;
  2672  00E9  01F4               	clrf	_on	;volatile
  2673                           
  2674                           ;main.c: 85: adc_gather_value = 0;
  2675  00EA  01DD               	clrf	_adc_gather_value	;volatile
  2676  00EB  01DE               	clrf	_adc_gather_value+1	;volatile
  2677                           
  2678                           ;main.c: 86: } else {
  2679  00EC  0008               	return
  2680  00ED                     l1391:	
  2681                           
  2682                           ;main.c: 87: on = 1;
  2683  00ED  3001               	movlw	1
  2684  00EE  00A4               	movwf	??_adc_gather_init
  2685  00EF  0824               	movf	??_adc_gather_init,w
  2686  00F0  00F4               	movwf	_on	;volatile
  2687  00F1  0008               	return
  2688  00F2                     __end_of_adc_gather_init:	
  2689                           
  2690                           	psect	text14
  2691  00F2                     __ptext14:	
  2692 ;; *************** function _adc_gather *****************
  2693 ;; Defined at:
  2694 ;;		line 91 in file "src/main.c"
  2695 ;; Parameters:    Size  Location     Type
  2696 ;;		None
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  value_buf      20    8[BANK0 ] unsigned int [10]
  2699 ;;  sum             2   30[BANK0 ] unsigned int 
  2700 ;;  temp            2   28[BANK0 ] unsigned int 
  2701 ;;  i               1   33[BANK0 ] unsigned char 
  2702 ;;  j               1   32[BANK0 ] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2712 ;;      Params:         0       0       0       0
  2713 ;;      Locals:         0      26       0       0
  2714 ;;      Temps:          0       4       0       0
  2715 ;;      Totals:         0      30       0       0
  2716 ;;Total ram usage:       30 bytes
  2717 ;; Hardware stack levels used:    1
  2718 ;; Hardware stack levels required when called:    5
  2719 ;; This function calls:
  2720 ;;		_getADC
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           
  2727                           ;psect for function _adc_gather
  2728  00F2                     _adc_gather:	
  2729                           
  2730                           ;main.c: 92: uint8_t i,j;
  2731                           ;main.c: 93: uint16_t temp,sum = 0;
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in _adc_gather: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2735  00F2  0020               	movlb	0	; select bank0
  2736  00F3  01BE               	clrf	adc_gather@sum
  2737  00F4  01BF               	clrf	adc_gather@sum+1
  2738                           
  2739                           ;main.c: 94: uint16_t value_buf[10] = {0};
  2740  00F5  30A0               	movlw	low adc_gather@F3559
  2741  00F6  0086               	movwf	6
  2742  00F7  3000               	movlw	high adc_gather@F3559
  2743  00F8  0087               	movwf	7
  2744  00F9  3028               	movlw	low adc_gather@value_buf
  2745  00FA  0084               	movwf	4
  2746  00FB  3000               	movlw	high adc_gather@value_buf
  2747  00FC  0085               	movwf	5
  2748  00FD  3014               	movlw	20
  2749  00FE  00A4               	movwf	??_adc_gather
  2750  00FF                     u1210:	
  2751  00FF  0016               	moviw fsr1++
  2752  0100  001A               	movwi fsr0++
  2753  0101  0BA4               	decfsz	??_adc_gather,f
  2754  0102  28FF               	goto	u1210
  2755                           
  2756                           ;main.c: 95: for(i = 0; i < 10; i++) {
  2757  0103  01C1               	clrf	adc_gather@i
  2758  0104  300A               	movlw	10
  2759  0105  0241               	subwf	adc_gather@i,w
  2760  0106  1803               	btfsc	3,0
  2761  0107  2924               	goto	l1411
  2762  0108                     l1403:	
  2763                           
  2764                           ;main.c: 96: value_buf[i] = getADC();
  2765  0108  231C               	fcall	_getADC
  2766  0109  0020               	movlb	0	; select bank0
  2767  010A  3541               	lslf	adc_gather@i,w
  2768  010B  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2769  010C  0086               	movwf	6
  2770  010D  0187               	clrf	7
  2771  010E  0820               	movf	?_getADC,w
  2772  010F  3FC0               	movwi [0]fsr1
  2773  0110  0821               	movf	?_getADC+1,w
  2774  0111  3FC1               	movwi [1]fsr1
  2775                           
  2776                           ;main.c: 97: _delay((unsigned long)((5)*(16000000/4000.0)));
  2777  0112  301A               	movlw	26
  2778  0113  0020               	movlb	0	; select bank0
  2779  0114  00A4               	movwf	??_adc_gather
  2780  0115  30F8               	movlw	248
  2781  0116                     u1457:	
  2782  0116  0B89               	decfsz	9,f
  2783  0117  2916               	goto	u1457
  2784  0118  0BA4               	decfsz	??_adc_gather,f
  2785  0119  2916               	goto	u1457
  2786  011A  0000               	nop
  2787  011B  3001               	movlw	1
  2788  011C  0020               	movlb	0	; select bank0
  2789  011D  00A4               	movwf	??_adc_gather
  2790  011E  0824               	movf	??_adc_gather,w
  2791  011F  07C1               	addwf	adc_gather@i,f
  2792  0120  300A               	movlw	10
  2793  0121  0241               	subwf	adc_gather@i,w
  2794  0122  1C03               	skipc
  2795  0123  2908               	goto	l1403
  2796  0124                     l1411:	
  2797                           
  2798                           ;main.c: 98: }
  2799                           ;main.c: 99: for(j = 0; j < 10 - 1; j++) {
  2800  0124  01C0               	clrf	adc_gather@j
  2801  0125  3009               	movlw	9
  2802  0126  0240               	subwf	adc_gather@j,w
  2803  0127  1803               	btfsc	3,0
  2804  0128  2987               	goto	l69
  2805  0129                     l1417:	
  2806                           
  2807                           ;main.c: 100: for(i = 0;i < 10 - j; i++) {
  2808  0129  01C1               	clrf	adc_gather@i
  2809  012A                     l1429:	
  2810  012A  0840               	movf	adc_gather@j,w
  2811  012B  00A4               	movwf	??_adc_gather
  2812  012C  01A5               	clrf	??_adc_gather+1
  2813  012D  09A4               	comf	??_adc_gather,f
  2814  012E  09A5               	comf	??_adc_gather+1,f
  2815  012F  0AA4               	incf	??_adc_gather,f
  2816  0130  1903               	skipnz
  2817  0131  0AA5               	incf	??_adc_gather+1,f
  2818  0132  0824               	movf	??_adc_gather,w
  2819  0133  3E0A               	addlw	10
  2820  0134  00A6               	movwf	??_adc_gather+2
  2821  0135  3000               	movlw	0
  2822  0136  3D25               	addwfc	??_adc_gather+1,w
  2823  0137  00A7               	movwf	??_adc_gather+3
  2824  0138  0827               	movf	??_adc_gather+3,w
  2825  0139  3A80               	xorlw	128
  2826  013A  3C80               	sublw	128
  2827  013B  1D03               	skipz
  2828  013C  293F               	goto	u1265
  2829  013D  0826               	movf	??_adc_gather+2,w
  2830  013E  0241               	subwf	adc_gather@i,w
  2831  013F                     u1265:	
  2832  013F  1803               	btfsc	3,0
  2833  0140  297E               	goto	l1431
  2834                           
  2835                           ;main.c: 101: if(value_buf[i] > value_buf[i + 1]) {
  2836  0141  0020               	movlb	0	; select bank0
  2837  0142  3541               	lslf	adc_gather@i,w
  2838  0143  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2839  0144  0086               	movwf	6
  2840  0145  0187               	clrf	7
  2841  0146  3F40               	moviw [0]fsr1
  2842  0147  00A4               	movwf	??_adc_gather
  2843  0148  3F41               	moviw [1]fsr1
  2844  0149  00A5               	movwf	??_adc_gather+1
  2845  014A  3541               	lslf	adc_gather@i,w
  2846  014B  3E02               	addlw	2
  2847  014C  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2848  014D  0086               	movwf	6
  2849  014E  0187               	clrf	7
  2850  014F  3F40               	moviw [0]fsr1
  2851  0150  00A6               	movwf	??_adc_gather+2
  2852  0151  3F41               	moviw [1]fsr1
  2853  0152  00A7               	movwf	??_adc_gather+3
  2854  0153  0825               	movf	??_adc_gather+1,w
  2855  0154  0227               	subwf	??_adc_gather+3,w
  2856  0155  1D03               	skipz
  2857  0156  2959               	goto	u1255
  2858  0157  0824               	movf	??_adc_gather,w
  2859  0158  0226               	subwf	??_adc_gather+2,w
  2860  0159                     u1255:	
  2861  0159  1803               	skipnc
  2862  015A  2979               	goto	l1427
  2863                           
  2864                           ;main.c: 102: temp = value_buf[i];
  2865  015B  3541               	lslf	adc_gather@i,w
  2866  015C  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2867  015D  0086               	movwf	6
  2868  015E  0187               	clrf	7
  2869  015F  3F40               	moviw [0]fsr1
  2870  0160  00BC               	movwf	adc_gather@temp
  2871  0161  3F41               	moviw [1]fsr1
  2872  0162  00BD               	movwf	adc_gather@temp+1
  2873                           
  2874                           ;main.c: 103: value_buf[i] = value_buf[i + 1];
  2875  0163  3541               	lslf	adc_gather@i,w
  2876  0164  3E02               	addlw	2
  2877  0165  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2878  0166  0086               	movwf	6
  2879  0167  0187               	clrf	7
  2880  0168  3541               	lslf	adc_gather@i,w
  2881  0169  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2882  016A  0084               	movwf	4
  2883  016B  0185               	clrf	5
  2884  016C  3F40               	moviw [0]fsr1
  2885  016D  3F80               	movwi [0]fsr0
  2886  016E  3F41               	moviw [1]fsr1
  2887  016F  3F81               	movwi [1]fsr0
  2888                           
  2889                           ;main.c: 104: value_buf[i + 1] = temp;
  2890  0170  3541               	lslf	adc_gather@i,w
  2891  0171  3E02               	addlw	2
  2892  0172  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2893  0173  0086               	movwf	6
  2894  0174  0187               	clrf	7
  2895  0175  083C               	movf	adc_gather@temp,w
  2896  0176  3FC0               	movwi [0]fsr1
  2897  0177  083D               	movf	adc_gather@temp+1,w
  2898  0178  3FC1               	movwi [1]fsr1
  2899  0179                     l1427:	
  2900  0179  3001               	movlw	1
  2901  017A  00A4               	movwf	??_adc_gather
  2902  017B  0824               	movf	??_adc_gather,w
  2903  017C  07C1               	addwf	adc_gather@i,f
  2904  017D  292A               	goto	l1429
  2905  017E                     l1431:	
  2906  017E  3001               	movlw	1
  2907  017F  0020               	movlb	0	; select bank0
  2908  0180  00A4               	movwf	??_adc_gather
  2909  0181  0824               	movf	??_adc_gather,w
  2910  0182  07C0               	addwf	adc_gather@j,f
  2911  0183  3009               	movlw	9
  2912  0184  0240               	subwf	adc_gather@j,w
  2913  0185  1C03               	skipc
  2914  0186  2929               	goto	l1417
  2915  0187                     l69:	
  2916                           
  2917                           ;main.c: 105: }
  2918                           ;main.c: 106: }
  2919                           ;main.c: 107: }
  2920                           ;main.c: 108: for(i = 1; i < 10 - 1; i++) {
  2921  0187  01C1               	clrf	adc_gather@i
  2922  0188  0AC1               	incf	adc_gather@i,f
  2923  0189  3009               	movlw	9
  2924  018A  0241               	subwf	adc_gather@i,w
  2925  018B  1803               	btfsc	3,0
  2926  018C  29A1               	goto	l1445
  2927  018D                     l1439:	
  2928                           
  2929                           ;main.c: 109: sum += value_buf[i];
  2930  018D  3541               	lslf	adc_gather@i,w
  2931  018E  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2932  018F  0086               	movwf	6
  2933  0190  0187               	clrf	7
  2934  0191  3F40               	moviw [0]fsr1
  2935  0192  00A4               	movwf	??_adc_gather
  2936  0193  3F41               	moviw [1]fsr1
  2937  0194  00A5               	movwf	??_adc_gather+1
  2938  0195  0824               	movf	??_adc_gather,w
  2939  0196  07BE               	addwf	adc_gather@sum,f
  2940  0197  0825               	movf	??_adc_gather+1,w
  2941  0198  3DBF               	addwfc	adc_gather@sum+1,f
  2942  0199  3001               	movlw	1
  2943  019A  00A4               	movwf	??_adc_gather
  2944  019B  0824               	movf	??_adc_gather,w
  2945  019C  07C1               	addwf	adc_gather@i,f
  2946  019D  3009               	movlw	9
  2947  019E  0241               	subwf	adc_gather@i,w
  2948  019F  1C03               	skipc
  2949  01A0  298D               	goto	l1439
  2950  01A1                     l1445:	
  2951                           
  2952                           ;main.c: 110: }
  2953                           ;main.c: 111: adc_gather_value = sum / (10 - 2);
  2954  01A1  083F               	movf	adc_gather@sum+1,w
  2955  01A2  00A5               	movwf	??_adc_gather+1
  2956  01A3  083E               	movf	adc_gather@sum,w
  2957  01A4  00A4               	movwf	??_adc_gather
  2958  01A5  36A5               	lsrf	??_adc_gather+1,f
  2959  01A6  0CA4               	rrf	??_adc_gather,f
  2960  01A7  36A5               	lsrf	??_adc_gather+1,f
  2961  01A8  0CA4               	rrf	??_adc_gather,f
  2962  01A9  36A5               	lsrf	??_adc_gather+1,f
  2963  01AA  0CA4               	rrf	??_adc_gather,f
  2964  01AB  0824               	movf	??_adc_gather,w
  2965  01AC  00DD               	movwf	_adc_gather_value	;volatile
  2966  01AD  0825               	movf	??_adc_gather+1,w
  2967  01AE  00DE               	movwf	_adc_gather_value+1	;volatile
  2968  01AF  0008               	return
  2969  01B0                     __end_of_adc_gather:	
  2970                           
  2971                           	psect	text15
  2972  031C                     __ptext15:	
  2973 ;; *************** function _getADC *****************
  2974 ;; Defined at:
  2975 ;;		line 16 in file "src/drv_adc.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  2    0[BANK0 ] unsigned int 
  2982 ;; Registers used:
  2983 ;;		wreg
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2989 ;;      Params:         0       2       0       0
  2990 ;;      Locals:         0       0       0       0
  2991 ;;      Temps:          0       2       0       0
  2992 ;;      Totals:         0       4       0       0
  2993 ;;Total ram usage:        4 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    4
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_adc_gather_init
  3000 ;;		_adc_gather
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           
  3005                           ;psect for function _getADC
  3006  031C                     _getADC:	
  3007                           
  3008                           ;drv_adc.c: 17: ADCON0bits.GO_nDONE = 1;
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in _getADC: [wreg]
  3012  031C  0021               	movlb	1	; select bank1
  3013  031D  149D               	bsf	29,1	;volatile
  3014  031E                     l167:	
  3015                           ;drv_adc.c: 18: while(!PIR1bits.ADIF);
  3016                           
  3017  031E  0020               	movlb	0	; select bank0
  3018  031F  1F11               	btfss	17,6	;volatile
  3019  0320  2B1E               	goto	l167
  3020                           
  3021                           ;drv_adc.c: 19: PIR1bits.ADIF = 0;
  3022  0321  1311               	bcf	17,6	;volatile
  3023                           
  3024                           ;drv_adc.c: 20: return (ADRES & 0x3FF);
  3025  0322  30FF               	movlw	255
  3026  0323  0021               	movlb	1	; select bank1
  3027  0324  051B               	andwf	27,w	;volatile
  3028  0325  0020               	movlb	0	; select bank0
  3029  0326  00A2               	movwf	??_getADC
  3030  0327  3003               	movlw	3
  3031  0328  0021               	movlb	1	; select bank1
  3032  0329  051C               	andwf	28,w	;volatile
  3033  032A  0020               	movlb	0	; select bank0
  3034  032B  00A3               	movwf	??_getADC+1
  3035  032C  0822               	movf	??_getADC,w
  3036  032D  00A0               	movwf	?_getADC
  3037  032E  0823               	movf	??_getADC+1,w
  3038  032F  00A1               	movwf	?_getADC+1
  3039  0330  0008               	return
  3040  0331                     __end_of_getADC:	
  3041                           
  3042                           	psect	text16
  3043  01B0                     __ptext16:	
  3044 ;; *************** function _adc_filter *****************
  3045 ;; Defined at:
  3046 ;;		line 114 in file "src/main.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  i               2   12[BANK0 ] unsigned int 
  3051 ;;  sum             2   10[BANK0 ] unsigned int 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3061 ;;      Params:         0       0       0       0
  3062 ;;      Locals:         0       4       0       0
  3063 ;;      Temps:          0       2       0       0
  3064 ;;      Totals:         0       6       0       0
  3065 ;;Total ram usage:        6 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    5
  3068 ;; This function calls:
  3069 ;;		___lwdiv
  3070 ;; This function is called by:
  3071 ;;		_main
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           
  3076                           ;psect for function _adc_filter
  3077  01B0                     _adc_filter:	
  3078                           
  3079                           ;main.c: 115: uint16_t sum = 0;
  3080                           
  3081                           ;incstack = 0
  3082                           ; Regs used in _adc_filter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3083  01B0  0020               	movlb	0	; select bank0
  3084  01B1  01AA               	clrf	adc_filter@sum
  3085  01B2  01AB               	clrf	adc_filter@sum+1
  3086                           
  3087                           ;main.c: 116: static uint8_t index = 0;
  3088                           ;main.c: 117: if(index >= 10) {
  3089  01B3  300A               	movlw	10
  3090  01B4  0261               	subwf	adc_filter@index,w
  3091  01B5  1803               	btfsc	3,0
  3092                           
  3093                           ;main.c: 118: index = 0;
  3094  01B6  01E1               	clrf	adc_filter@index
  3095                           
  3096                           ;main.c: 119: }
  3097                           ;main.c: 120: adc_filter_buf[index++] = adc_gather_value;
  3098  01B7  3561               	lslf	adc_filter@index,w
  3099  01B8  3E45               	addlw	(low (_adc_filter_buf| 0))& (0+255)
  3100  01B9  0086               	movwf	6
  3101  01BA  0187               	clrf	7
  3102  01BB  085D               	movf	_adc_gather_value,w	;volatile
  3103  01BC  3FC0               	movwi [0]fsr1
  3104  01BD  085E               	movf	_adc_gather_value+1,w	;volatile
  3105  01BE  3FC1               	movwi [1]fsr1
  3106  01BF  3001               	movlw	1
  3107  01C0  00A8               	movwf	??_adc_filter
  3108  01C1  0828               	movf	??_adc_filter,w
  3109  01C2  07E1               	addwf	adc_filter@index,f
  3110                           
  3111                           ;main.c: 121: for(unsigned int i = 0; i < 10; i++) {
  3112  01C3  01AC               	clrf	adc_filter@i
  3113  01C4  01AD               	clrf	adc_filter@i+1
  3114  01C5  3000               	movlw	0
  3115  01C6  022D               	subwf	adc_filter@i+1,w
  3116  01C7  300A               	movlw	10
  3117  01C8  1903               	skipnz
  3118  01C9  022C               	subwf	adc_filter@i,w
  3119  01CA  1803               	btfsc	3,0
  3120  01CB  29E3               	goto	l1469
  3121  01CC                     l1463:	
  3122                           
  3123                           ;main.c: 122: sum += adc_filter_buf[i];
  3124  01CC  352C               	lslf	adc_filter@i,w
  3125  01CD  3E45               	addlw	(low (_adc_filter_buf| 0))& (0+255)
  3126  01CE  0086               	movwf	6
  3127  01CF  0187               	clrf	7
  3128  01D0  3F40               	moviw [0]fsr1
  3129  01D1  00A8               	movwf	??_adc_filter
  3130  01D2  3F41               	moviw [1]fsr1
  3131  01D3  00A9               	movwf	??_adc_filter+1
  3132  01D4  0828               	movf	??_adc_filter,w
  3133  01D5  07AA               	addwf	adc_filter@sum,f
  3134  01D6  0829               	movf	??_adc_filter+1,w
  3135  01D7  3DAB               	addwfc	adc_filter@sum+1,f
  3136  01D8  3001               	movlw	1
  3137  01D9  07AC               	addwf	adc_filter@i,f
  3138  01DA  3000               	movlw	0
  3139  01DB  3DAD               	addwfc	adc_filter@i+1,f
  3140  01DC  3000               	movlw	0
  3141  01DD  022D               	subwf	adc_filter@i+1,w
  3142  01DE  300A               	movlw	10
  3143  01DF  1903               	skipnz
  3144  01E0  022C               	subwf	adc_filter@i,w
  3145  01E1  1C03               	skipc
  3146  01E2  29CC               	goto	l1463
  3147  01E3                     l1469:	
  3148                           
  3149                           ;main.c: 123: }
  3150                           ;main.c: 124: adc_filter_value = sum / 10;
  3151  01E3  300A               	movlw	10
  3152  01E4  00A0               	movwf	___lwdiv@divisor
  3153  01E5  3000               	movlw	0
  3154  01E6  00A1               	movwf	___lwdiv@divisor+1
  3155  01E7  082B               	movf	adc_filter@sum+1,w
  3156  01E8  00A3               	movwf	___lwdiv@dividend+1
  3157  01E9  082A               	movf	adc_filter@sum,w
  3158  01EA  00A2               	movwf	___lwdiv@dividend
  3159  01EB  2227               	fcall	___lwdiv
  3160  01EC  0020               	movlb	0	; select bank0
  3161  01ED  0821               	movf	?___lwdiv+1,w
  3162  01EE  00F3               	movwf	_adc_filter_value+1	;volatile
  3163  01EF  0820               	movf	?___lwdiv,w
  3164  01F0  00F2               	movwf	_adc_filter_value	;volatile
  3165  01F1  0008               	return
  3166  01F2                     __end_of_adc_filter:	
  3167                           
  3168                           	psect	text17
  3169  0227                     __ptext17:	
  3170 ;; *************** function ___lwdiv *****************
  3171 ;; Defined at:
  3172 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  divisor         2    0[BANK0 ] unsigned int 
  3175 ;;  dividend        2    2[BANK0 ] unsigned int 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  quotient        2    6[BANK0 ] unsigned int 
  3178 ;;  counter         1    5[BANK0 ] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  2    0[BANK0 ] unsigned int 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3188 ;;      Params:         0       4       0       0
  3189 ;;      Locals:         0       3       0       0
  3190 ;;      Temps:          0       1       0       0
  3191 ;;      Totals:         0       8       0       0
  3192 ;;Total ram usage:        8 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    4
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_adc_filter
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function ___lwdiv
  3204  0227                     ___lwdiv:	
  3205                           
  3206                           ;incstack = 0
  3207                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3208  0227  0020               	movlb	0	; select bank0
  3209  0228  01A6               	clrf	___lwdiv@quotient
  3210  0229  01A7               	clrf	___lwdiv@quotient+1
  3211  022A  0820               	movf	___lwdiv@divisor,w
  3212  022B  0421               	iorwf	___lwdiv@divisor+1,w
  3213  022C  1903               	btfsc	3,2
  3214  022D  2A57               	goto	l1329
  3215  022E  01A5               	clrf	___lwdiv@counter
  3216  022F  0AA5               	incf	___lwdiv@counter,f
  3217  0230                     l1317:	
  3218  0230  1BA1               	btfsc	___lwdiv@divisor+1,7
  3219  0231  2A3C               	goto	l1319
  3220  0232  3001               	movlw	1
  3221  0233                     u1055:	
  3222  0233  35A0               	lslf	___lwdiv@divisor,f
  3223  0234  0DA1               	rlf	___lwdiv@divisor+1,f
  3224  0235  0B89               	decfsz	9,f
  3225  0236  2A33               	goto	u1055
  3226  0237  3001               	movlw	1
  3227  0238  00A4               	movwf	??___lwdiv
  3228  0239  0824               	movf	??___lwdiv,w
  3229  023A  07A5               	addwf	___lwdiv@counter,f
  3230  023B  2A30               	goto	l1317
  3231  023C                     l1319:	
  3232  023C  3001               	movlw	1
  3233  023D                     u1075:	
  3234  023D  35A6               	lslf	___lwdiv@quotient,f
  3235  023E  0DA7               	rlf	___lwdiv@quotient+1,f
  3236  023F  0B89               	decfsz	9,f
  3237  0240  2A3D               	goto	u1075
  3238  0241  0821               	movf	___lwdiv@divisor+1,w
  3239  0242  0223               	subwf	___lwdiv@dividend+1,w
  3240  0243  1D03               	skipz
  3241  0244  2A47               	goto	u1085
  3242  0245  0820               	movf	___lwdiv@divisor,w
  3243  0246  0222               	subwf	___lwdiv@dividend,w
  3244  0247                     u1085:	
  3245  0247  1C03               	skipc
  3246  0248  2A4E               	goto	l1325
  3247  0249  0820               	movf	___lwdiv@divisor,w
  3248  024A  02A2               	subwf	___lwdiv@dividend,f
  3249  024B  0821               	movf	___lwdiv@divisor+1,w
  3250  024C  3BA3               	subwfb	___lwdiv@dividend+1,f
  3251  024D  1426               	bsf	___lwdiv@quotient,0
  3252  024E                     l1325:	
  3253  024E  3001               	movlw	1
  3254  024F                     u1095:	
  3255  024F  36A1               	lsrf	___lwdiv@divisor+1,f
  3256  0250  0CA0               	rrf	___lwdiv@divisor,f
  3257  0251  0B89               	decfsz	9,f
  3258  0252  2A4F               	goto	u1095
  3259  0253  3001               	movlw	1
  3260  0254  02A5               	subwf	___lwdiv@counter,f
  3261  0255  1D03               	btfss	3,2
  3262  0256  2A3C               	goto	l1319
  3263  0257                     l1329:	
  3264  0257  0827               	movf	___lwdiv@quotient+1,w
  3265  0258  00A1               	movwf	?___lwdiv+1
  3266  0259  0826               	movf	___lwdiv@quotient,w
  3267  025A  00A0               	movwf	?___lwdiv
  3268  025B  0008               	return
  3269  025C                     __end_of___lwdiv:	
  3270                           
  3271                           	psect	intentry
  3272  0004                     __pintentry:	
  3273 ;; *************** function _ISR *****************
  3274 ;; Defined at:
  3275 ;;		line 225 in file "src/main.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0, pclath, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3289 ;;      Params:         0       0       0       0
  3290 ;;      Locals:         0       0       0       0
  3291 ;;      Temps:          1       0       0       0
  3292 ;;      Totals:         1       0       0       0
  3293 ;;Total ram usage:        1 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    3
  3296 ;; This function calls:
  3297 ;;		_tmr2_isr
  3298 ;; This function is called by:
  3299 ;;		Interrupt level 1
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303  0004                     _ISR:	
  3304                           
  3305                           ;incstack = 0
  3306  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3307                           
  3308                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3309  0005  3180               	pagesel	$
  3310  0006  0020               	movlb	0	; select bank0
  3311  0007  087F               	movf	127,w
  3312  0008  00F9               	movwf	??_ISR
  3313                           
  3314                           ;main.c: 226: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  3315  0009  0021               	movlb	1	; select bank1
  3316  000A  1C91               	btfss	17,1	;volatile
  3317  000B  2810               	goto	i1l132
  3318  000C  0020               	movlb	0	; select bank0
  3319  000D  1C91               	btfss	17,1	;volatile
  3320  000E  2810               	goto	i1l132
  3321                           
  3322                           ;main.c: 227: tmr2_isr();
  3323  000F  234C               	fcall	_tmr2_isr
  3324  0010                     i1l132:	
  3325  0010  0879               	movf	??_ISR,w
  3326  0011  0020               	movlb	0	; select bank0
  3327  0012  00FF               	movwf	127
  3328  0013  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3329  0014  0009               	retfie
  3330  0015                     __end_of_ISR:	
  3331                           
  3332                           	psect	text19
  3333  034C                     __ptext19:	
  3334 ;; *************** function _tmr2_isr *****************
  3335 ;; Defined at:
  3336 ;;		line 29 in file "src/drv_trm2.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0, pclath, cstack
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3350 ;;      Params:         0       0       0       0
  3351 ;;      Locals:         0       0       0       0
  3352 ;;      Temps:          0       0       0       0
  3353 ;;      Totals:         0       0       0       0
  3354 ;;Total ram usage:        0 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    2
  3357 ;; This function calls:
  3358 ;;		Absolute function
  3359 ;;		_pwm_run
  3360 ;; This function is called by:
  3361 ;;		_ISR
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           
  3366                           ;psect for function _tmr2_isr
  3367  034C                     _tmr2_isr:	
  3368                           
  3369                           ;drv_trm2.c: 30: PIR1bits.TMR2IF = 0;
  3370                           
  3371                           ;incstack = 0
  3372                           ; Regs used in _tmr2_isr: [wreg+status,2+status,0+pclath+cstack]
  3373  034C  0020               	movlb	0	; select bank0
  3374  034D  1091               	bcf	17,1	;volatile
  3375                           
  3376                           ;drv_trm2.c: 31: if(tmr2_isr_handler) {
  3377  034E  0859               	movf	_tmr2_isr_handler,w
  3378  034F  045A               	iorwf	_tmr2_isr_handler+1,w
  3379  0350  1903               	btfsc	3,2
  3380  0351  0008               	return
  3381                           
  3382                           ;drv_trm2.c: 32: tmr2_isr_handler();
  3383  0352  085A               	movf	_tmr2_isr_handler+1,w
  3384  0353  008A               	movwf	10
  3385  0354  0859               	movf	_tmr2_isr_handler,w
  3386  0355  000A               	callw
  3387  0356  3183               	pagesel	$
  3388  0357  0008               	return
  3389  0358                     __end_of_tmr2_isr:	
  3390                           
  3391                           	psect	text20
  3392  028E                     __ptext20:	
  3393 ;; *************** function _pwm_run *****************
  3394 ;; Defined at:
  3395 ;;		line 165 in file "src/main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3409 ;;      Params:         0       0       0       0
  3410 ;;      Locals:         0       0       0       0
  3411 ;;      Temps:          2       0       0       0
  3412 ;;      Totals:         2       0       0       0
  3413 ;;Total ram usage:        2 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    1
  3416 ;; This function calls:
  3417 ;;		_pwm_dutyCycle_set
  3418 ;;		_pwm_loadBuffer_set
  3419 ;; This function is called by:
  3420 ;;		_set_interrupt_handle
  3421 ;;		_tmr2_isr
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _pwm_run
  3427  028E                     _pwm_run:	
  3428                           
  3429                           ;main.c: 166: if(current_value + 10 < target_value) {
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _pwm_run: [wreg+status,2+status,0+pclath+cstack]
  3433  028E  0020               	movlb	0	; select bank0
  3434  028F  085B               	movf	_current_value,w	;volatile
  3435  0290  3E0A               	addlw	10
  3436  0291  00F7               	movwf	??_pwm_run
  3437  0292  3000               	movlw	0
  3438  0293  3D5C               	addwfc	_current_value+1,w	;volatile
  3439  0294  00F8               	movwf	??_pwm_run+1
  3440  0295  0871               	movf	_target_value+1,w	;volatile
  3441  0296  0278               	subwf	??_pwm_run+1,w
  3442  0297  1D03               	skipz
  3443  0298  2A9B               	goto	u51_25
  3444  0299  0870               	movf	_target_value,w	;volatile
  3445  029A  0277               	subwf	??_pwm_run,w
  3446  029B                     u51_25:	
  3447  029B  1803               	skipnc
  3448  029C  2AA2               	goto	i1l965
  3449                           
  3450                           ;main.c: 167: current_value += 10;
  3451  029D  300A               	movlw	10
  3452  029E  07DB               	addwf	_current_value,f	;volatile
  3453  029F  3000               	movlw	0
  3454  02A0  3DDC               	addwfc	_current_value+1,f	;volatile
  3455                           
  3456                           ;main.c: 168: } else if (current_value > target_value + 10) {
  3457  02A1  2AB9               	goto	i1l971
  3458  02A2                     i1l965:	
  3459  02A2  0870               	movf	_target_value,w	;volatile
  3460  02A3  3E0A               	addlw	10
  3461  02A4  00F7               	movwf	??_pwm_run
  3462  02A5  3000               	movlw	0
  3463  02A6  3D71               	addwfc	_target_value+1,w	;volatile
  3464  02A7  00F8               	movwf	??_pwm_run+1
  3465  02A8  085C               	movf	_current_value+1,w	;volatile
  3466  02A9  0278               	subwf	??_pwm_run+1,w
  3467  02AA  1D03               	skipz
  3468  02AB  2AAE               	goto	u52_25
  3469  02AC  085B               	movf	_current_value,w	;volatile
  3470  02AD  0277               	subwf	??_pwm_run,w
  3471  02AE                     u52_25:	
  3472  02AE  1803               	skipnc
  3473  02AF  2AB5               	goto	i1l969
  3474                           
  3475                           ;main.c: 169: current_value -= 10;
  3476  02B0  300A               	movlw	10
  3477  02B1  02DB               	subwf	_current_value,f	;volatile
  3478  02B2  3000               	movlw	0
  3479  02B3  3BDC               	subwfb	_current_value+1,f	;volatile
  3480                           
  3481                           ;main.c: 170: } else {
  3482  02B4  2AB9               	goto	i1l971
  3483  02B5                     i1l969:	
  3484                           
  3485                           ;main.c: 171: current_value = target_value;
  3486  02B5  0871               	movf	_target_value+1,w	;volatile
  3487  02B6  00DC               	movwf	_current_value+1	;volatile
  3488  02B7  0870               	movf	_target_value,w	;volatile
  3489  02B8  00DB               	movwf	_current_value	;volatile
  3490  02B9                     i1l971:	
  3491                           
  3492                           ;main.c: 172: }
  3493                           ;main.c: 173: pwm_dutyCycle_set(current_value);
  3494  02B9  085C               	movf	_current_value+1,w	;volatile
  3495  02BA  00F6               	movwf	pwm_dutyCycle_set@duty+1
  3496  02BB  085B               	movf	_current_value,w	;volatile
  3497  02BC  00F5               	movwf	pwm_dutyCycle_set@duty
  3498  02BD  2380               	fcall	_pwm_dutyCycle_set
  3499                           
  3500                           ;main.c: 174: pwm_loadBuffer_set();
  3501  02BE  238C               	fcall	_pwm_loadBuffer_set
  3502  02BF  0008               	return
  3503  02C0                     __end_of_pwm_run:	
  3504                           
  3505                           	psect	text21
  3506  038C                     __ptext21:	
  3507 ;; *************** function _pwm_loadBuffer_set *****************
  3508 ;; Defined at:
  3509 ;;		line 39 in file "src/drv_pwm.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		None
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3523 ;;      Params:         0       0       0       0
  3524 ;;      Locals:         0       0       0       0
  3525 ;;      Temps:          0       0       0       0
  3526 ;;      Totals:         0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_pwm_run
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function _pwm_loadBuffer_set
  3538  038C                     _pwm_loadBuffer_set:	
  3539                           
  3540                           ;drv_pwm.c: 40: PWM3LDCONbits.LDA = 1;
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _pwm_loadBuffer_set: []
  3544  038C  003B               	movlb	27	; select bank27
  3545  038D  17BF               	bsf	63,7	;volatile
  3546  038E  0008               	return
  3547  038F                     __end_of_pwm_loadBuffer_set:	
  3548                           
  3549                           	psect	text22
  3550  0380                     __ptext22:	
  3551 ;; *************** function _pwm_dutyCycle_set *****************
  3552 ;; Defined at:
  3553 ;;		line 35 in file "src/drv_pwm.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  duty            2    0[COMMON] unsigned int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3567 ;;      Params:         2       0       0       0
  3568 ;;      Locals:         0       0       0       0
  3569 ;;      Temps:          0       0       0       0
  3570 ;;      Totals:         2       0       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_pwm_run
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _pwm_dutyCycle_set
  3582  0380                     _pwm_dutyCycle_set:	
  3583                           
  3584                           ;drv_pwm.c: 36: PWM3DC = duty;
  3585                           
  3586                           ;incstack = 0
  3587                           ; Regs used in _pwm_dutyCycle_set: [wreg]
  3588  0380  0876               	movf	pwm_dutyCycle_set@duty+1,w
  3589  0381  003B               	movlb	27	; select bank27
  3590  0382  00B4               	movwf	52	;volatile
  3591  0383  0875               	movf	pwm_dutyCycle_set@duty,w
  3592  0384  00B3               	movwf	51	;volatile
  3593  0385  0008               	return
  3594  0386                     __end_of_pwm_dutyCycle_set:	
  3595  007E                     btemp	set	126	;btemp
  3596  007E                     int$flags	set	126
  3597  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     37      66
    BANK1            80      0      40
    BANK2            80      0       0

Pointer List with Targets:

    tmr2_set_handler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> pwm_run(), 

    tmr2_isr_handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), pwm_run(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _tmr2_isr->_pwm_run
    _pwm_run->_pwm_dutyCycle_set

Critical Paths under _main in BANK0

    _main->_adc_gather
    _main->_adc_gather_init
    _set_interrupt_handle->_tmr2_set_handler
    _pwm_update_duty->___wmul
    _adc_gather_init->_getADC
    _adc_gather->_getADC
    _adc_filter->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2718
                                             34 BANK0      3     3      0
                         _adc_filter
                         _adc_gather
                    _adc_gather_init
                           _adc_init
                          _gpio_init
                   _led_update_state
                           _osc_init
                           _pwm_init
                    _pwm_update_duty
               _set_interrupt_handle
                          _tmr2_init
                    _tmr2_isr_enable
                         _tmr2_start
 ---------------------------------------------------------------------------------
 (1) _tmr2_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr2_isr_enable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_interrupt_handle                                 0     0      0      96
                   _tmr2_set_handler
 ---------------------------------------------------------------------------------
 (2) _tmr2_set_handler                                     2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _pwm_update_duty                                      0     0      0     266
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_update_state                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_gather_init                                     30    30      0     875
                                              4 BANK0     30    30      0
                             _getADC
 ---------------------------------------------------------------------------------
 (1) _adc_gather                                          30    30      0     875
                                              4 BANK0     30    30      0
                             _getADC
 ---------------------------------------------------------------------------------
 (2) _getADC                                               4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _adc_filter                                           6     6      0     507
                                              8 BANK0      6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  1     1      0      75
                                              4 COMMON     1     1      0
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (4) _tmr2_isr                                             0     0      0      75
                   Absolute function *
                            _pwm_run *
 ---------------------------------------------------------------------------------
 (5) _pwm_run                                              2     2      0      75
                                              2 COMMON     2     2      0
                  _pwm_dutyCycle_set
                 _pwm_loadBuffer_set
 ---------------------------------------------------------------------------------
 (6) _pwm_loadBuffer_set                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pwm_dutyCycle_set                                    2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_filter
     ___lwdiv
   _adc_gather
     _getADC
   _adc_gather_init
     _getADC
   _adc_init
   _gpio_init
   _led_update_state
   _osc_init
   _pwm_init
   _pwm_update_duty
     ___wmul
   _set_interrupt_handle
     _tmr2_set_handler
   _tmr2_init
   _tmr2_isr_enable
   _tmr2_start

 _ISR (ROOT)
   _tmr2_isr
     Absolute function(Fake) *
     _pwm_run *
       _pwm_dutyCycle_set
       _pwm_loadBuffer_set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      74       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     25      42       6       82.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      28       8       50.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      74      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed May 22 09:59:06 2019

                  __CFG_CP$OFF 0000                             l52 00BA                             l69 0187  
                           _on 0074            ___wmul@multiplicand 0022                    __CFG_LVP$ON 0000  
                          l122 021C                            l123 0221                            l141 0360  
                          l237 02ED                            l167 031E                            _PR2 001B  
                          _ISR 0004               _tmr2_set_handler 037A                   __CFG_BORV$LO 0000  
                          wreg 0009    __size_of_pwm_loadBuffer_set 0003                           ?_ISR 0075  
                         l1411 0124                           l1403 0108                           l1325 024E  
                         l1317 0230                           l1501 02CF                           l1319 023C  
                         l1431 017E                           l1351 0057                           l1343 0040  
                         l1503 02E1                           l1329 0257                           l1417 0129  
                         l1427 0179                           l1371 00B1                           l1445 01A1  
                         l1429 012A                           l1357 005C                           l1463 01CC  
                         l1439 018D                           l1391 00ED                           l1367 00AC  
                         l1295 02E7                           l1385 00D4                           l1369 005D  
                         l1481 0272                           l1379 00C0                           l1483 0275  
                         l1469 01E3                           l1493 028B                           l1569 020C  
                 __CFG_WDTE$ON 0000                           u1110 0037                           u1015 02EE  
                         u1025 02F3                           u1210 00FF                           u1055 0233  
                         u1075 023D                           u1155 008C                           u1085 0247  
                         u1165 0072                           u1095 024F                           u1255 0159  
                         u1265 013F                           u1437 01FE                           u1447 004B  
                         u1457 0116              ??_pwm_update_duty 0026                   __CFG_WRT$OFF 0000  
       led_update_state@cnt_on 0060                           _main 01F2                           fsr0h 0005  
                         fsr1h 0007                           indf0 0000                           fsr0l 0004  
                         fsr1l 0006                           btemp 007E                           start 0015  
                __CFG_MCLRE$ON 0000                          ??_ISR 0079          pwm_dutyCycle_set@duty 0075  
                        ?_main 0075                          _ADRES 009B       __size_of_tmr2_isr_enable 0003  
              __end_of___lwdiv 025C                          i1l132 0010                          i1l971 02B9  
                        i1l965 02A2                          i1l969 02B5                          u51_25 029B  
                        u52_25 02AE                  __CFG_PWRTE$ON 0000            adc_gather@value_buf 0028  
 __end_of_set_interrupt_handle 0374        led_update_state@cnt_off 005F                          main@i 0044  
               __CFG_BOREN$OFF 0000                          pclath 000A                __end_of_pwm_run 02C0  
                        status 0003                          wtemp0 007E      __size_of_led_update_state 0032  
               _PWM3CLKCONbits 0DBE                __initialization 0016                   __end_of_main 0227  
                       ??_main 0042                 __CFG_PLLEN$OFF 0000               __end_of_adc_init 033F  
                       _PWM3DC 0DB3                         _PWM3OF 0DB7                         _PWM3PH 0DB1  
                       _PWM3PR 0DB5                         ___wmul 02E4                         _getADC 031C  
               __CFG_STVREN$ON 0000                      ??___lwdiv 0024                 adc_gather@temp 003C  
             __end_of_tmr2_isr 0358               __end_of_osc_init 0363               __end_of_pwm_init 031C  
                    ??_pwm_run 0077              ??_tmr2_isr_enable 0020        __end_of__initialization 0027  
     __end_of_tmr2_set_handler 0380                 __pcstackCOMMON 0075                     _adc_gather 00F2  
                   _adc_filter 01B0           _set_interrupt_handle 036D                _pwm_update_duty 02C0  
     __size_of_adc_gather_init 00C8                     __pbssBANK0 0045                     __pbssBANK1 00A0  
                _current_value 005B             __size_of_gpio_init 000D               _led_update_state 025C  
          adc_gather_init@temp 003C                     __pmaintext 01F2          ?_set_interrupt_handle 0075  
                      ?___wmul 0020                        ?_getADC 0020                     __pintentry 0004  
           __size_of_tmr2_init 000A                      ?_adc_init 0075     __end_of_pwm_loadBuffer_set 038F  
               _adc_filter_buf 0045                        _PWM3TMR 0DB9               _adc_gather_value 005D  
                    ?_tmr2_isr 0075                      ?_osc_init 0075                    ?_adc_gather 0075  
                  ?_adc_filter 0075                __size_of___wmul 001C                __size_of_getADC 0015  
                    ?_pwm_init 0075        __end_of_pwm_update_duty 02E4                        ___lwdiv 0227  
                   ??_adc_init 0020                adc_gather@F3559 00A0                        __ptext1 0386  
                      __ptext2 0389                        __ptext3 0363                        __ptext4 036D  
                      __ptext5 037A                        __ptext6 02C0                        __ptext7 02E4  
                      __ptext8 0300                        __ptext9 0358              __end_of_gpio_init 034C  
                 __size_of_ISR 0011                      _T2CONbits 001C                        _pwm_run 028E  
                      clrloop0 0375           end_of_initialization 0027              ??_adc_gather_init 0024  
            __end_of_tmr2_init 036D                     _tmr2_start 0386                     ??_tmr2_isr 0079  
                   ??_osc_init 0020               _adc_filter_value 0072         ??_set_interrupt_handle 0022  
                   ??_pwm_init 0020       adc_gather_init@value_buf 0028                _tmr2_isr_enable 0389  
             __CFG_FOSC$INTOSC 0000        tmr2_set_handler@handler 0020              _pwm_dutyCycle_set 0380  
                    _TRISAbits 008C             ?_pwm_dutyCycle_set 0075            __size_of_adc_gather 00BE  
          __size_of_adc_filter 0042            ??_pwm_dutyCycle_set 0077                adc_filter@index 0061  
            ?_tmr2_set_handler 0020             ??_tmr2_set_handler 0022               ?_pwm_update_duty 0075  
               __end_of___wmul 0300                 __end_of_getADC 0331      __end_of_pwm_dutyCycle_set 0386  
     __end_of_led_update_state 028E            start_initialization 0016                    __end_of_ISR 0015  
                  ?_tmr2_start 0075                  _PWM3LDCONbits 0DBF               __CFG_LPBOREN$OFF 0000  
      __end_of_tmr2_isr_enable 038C                  _PWM3OFCONbits 0DC0                       ??___wmul 0024  
                     ??_getADC 0022                  adc_gather@sum 003E              __size_of_adc_init 000E  
                  __pbssCOMMON 0070           adc_gather_init@F3551 00B4                      ___latbits 0000  
                __pcstackBANK0 0020                  adc_filter@sum 002A             _pwm_loadBuffer_set 038C  
                  adc_gather@i 0041                    adc_gather@j 0040                    adc_filter@i 002C  
           adc_gather_init@sum 003E               ___lwdiv@dividend 0022            ?_pwm_loadBuffer_set 0075  
                 ??_adc_gather 0024                   ??_adc_filter 0028              __size_of_tmr2_isr 000C  
            __size_of_osc_init 000B                       ?___lwdiv 0020              __size_of_pwm_init 001C  
              _adc_gather_init 002A     __size_of_pwm_dutyCycle_set 0006            __size_of_tmr2_start 0003  
                    _gpio_init 033F           ??_pwm_loadBuffer_set 0075               ___lwdiv@quotient 0026  
                     ?_pwm_run 0075             __end_of_adc_gather 01B0             __end_of_adc_filter 01F2  
               ___wmul@product 0024                       _LATAbits 010C                      clear_ram0 0374  
                     _PIE1bits 0091                      _tmr2_init 0363                       _PIR1bits 0011  
             ?_tmr2_isr_enable 0075                       _PWM3INTE 0DBC                       _PWM3INTF 0DBD  
                   _ADCON0bits 009D                     _ADCON1bits 009E              ___wmul@multiplier 0020  
                   ?_gpio_init 0075                     ?_tmr2_init 0075        __end_of_adc_gather_init 00F2  
__size_of_set_interrupt_handle 0007               __size_of___lwdiv 0035                       _adc_init 0331  
                   _ANSELAbits 018C      __size_of_tmr2_set_handler 0006              ?_led_update_state 0075  
              ___lwdiv@divisor 0020                ___lwdiv@counter 0025                       __ptext10 025C  
                     __ptext11 033F                       __ptext20 028E                       __ptext12 0331  
                     __ptext21 038C                       __ptext13 002A                       __ptext22 0380  
                     __ptext14 00F2                       __ptext15 031C                       __ptext16 01B0  
                     __ptext17 0227                       __ptext19 034C             ??_led_update_state 0020  
             __size_of_pwm_run 0032                   _target_value 0070                  __size_of_main 0035  
                 ??_tmr2_start 0020                       _tmr2_isr 034C                       _osc_init 0358  
                     int$flags 007E                       _pwm_init 0300                    _OSCSTATbits 009A  
                  _OSCTUNEbits 0098                     _INTCONbits 000B             __end_of_tmr2_start 0389  
     __size_of_pwm_update_duty 0024                    ??_gpio_init 0020                    _PWM3CONbits 0DBB  
                     intlevel1 0000               adc_gather_init@i 0041               adc_gather_init@j 0040  
            __CFG_CLKOUTEN$OFF 0000                    ??_tmr2_init 0020                     _OSCCONbits 0099  
             ?_adc_gather_init 0075               _tmr2_isr_handler 0059  
