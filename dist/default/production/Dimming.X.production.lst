

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Mon Apr 22 11:09:24 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.44
    37                           ; Generated 14/09/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F1572 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  008C                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  0111                     	;# 
   113  0112                     	;# 
   114  0115                     	;# 
   115  0116                     	;# 
   116  0117                     	;# 
   117  0118                     	;# 
   118  0119                     	;# 
   119  011D                     	;# 
   120  011D                     	;# 
   121  018C                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0197                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  028C                     	;# 
   141  030C                     	;# 
   142  038C                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  0691                     	;# 
   147  0692                     	;# 
   148  0693                     	;# 
   149  0694                     	;# 
   150  0695                     	;# 
   151  0D8E                     	;# 
   152  0D8F                     	;# 
   153  0D90                     	;# 
   154  0D91                     	;# 
   155  0D91                     	;# 
   156  0D92                     	;# 
   157  0D93                     	;# 
   158  0D93                     	;# 
   159  0D94                     	;# 
   160  0D95                     	;# 
   161  0D95                     	;# 
   162  0D96                     	;# 
   163  0D97                     	;# 
   164  0D97                     	;# 
   165  0D98                     	;# 
   166  0D99                     	;# 
   167  0D99                     	;# 
   168  0D9A                     	;# 
   169  0D9B                     	;# 
   170  0D9C                     	;# 
   171  0D9C                     	;# 
   172  0D9D                     	;# 
   173  0D9D                     	;# 
   174  0D9E                     	;# 
   175  0D9F                     	;# 
   176  0DA0                     	;# 
   177  0DA1                     	;# 
   178  0DA1                     	;# 
   179  0DA2                     	;# 
   180  0DA3                     	;# 
   181  0DA3                     	;# 
   182  0DA4                     	;# 
   183  0DA5                     	;# 
   184  0DA5                     	;# 
   185  0DA6                     	;# 
   186  0DA7                     	;# 
   187  0DA7                     	;# 
   188  0DA8                     	;# 
   189  0DA9                     	;# 
   190  0DA9                     	;# 
   191  0DAA                     	;# 
   192  0DAB                     	;# 
   193  0DAC                     	;# 
   194  0DAC                     	;# 
   195  0DAD                     	;# 
   196  0DAD                     	;# 
   197  0DAE                     	;# 
   198  0DAF                     	;# 
   199  0DB0                     	;# 
   200  0DB1                     	;# 
   201  0DB1                     	;# 
   202  0DB2                     	;# 
   203  0DB3                     	;# 
   204  0DB3                     	;# 
   205  0DB4                     	;# 
   206  0DB5                     	;# 
   207  0DB5                     	;# 
   208  0DB6                     	;# 
   209  0DB7                     	;# 
   210  0DB7                     	;# 
   211  0DB8                     	;# 
   212  0DB9                     	;# 
   213  0DB9                     	;# 
   214  0DBA                     	;# 
   215  0DBB                     	;# 
   216  0DBC                     	;# 
   217  0DBC                     	;# 
   218  0DBD                     	;# 
   219  0DBD                     	;# 
   220  0DBE                     	;# 
   221  0DBF                     	;# 
   222  0DC0                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE8                     	;# 
   229  0FE9                     	;# 
   230  0FEA                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  008C                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  010C                     	;# 
   279  0111                     	;# 
   280  0112                     	;# 
   281  0115                     	;# 
   282  0116                     	;# 
   283  0117                     	;# 
   284  0118                     	;# 
   285  0119                     	;# 
   286  011D                     	;# 
   287  011D                     	;# 
   288  018C                     	;# 
   289  0191                     	;# 
   290  0191                     	;# 
   291  0192                     	;# 
   292  0193                     	;# 
   293  0193                     	;# 
   294  0194                     	;# 
   295  0195                     	;# 
   296  0196                     	;# 
   297  0197                     	;# 
   298  0199                     	;# 
   299  019A                     	;# 
   300  019B                     	;# 
   301  019B                     	;# 
   302  019C                     	;# 
   303  019D                     	;# 
   304  019E                     	;# 
   305  019F                     	;# 
   306  020C                     	;# 
   307  028C                     	;# 
   308  030C                     	;# 
   309  038C                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  0691                     	;# 
   314  0692                     	;# 
   315  0693                     	;# 
   316  0694                     	;# 
   317  0695                     	;# 
   318  0D8E                     	;# 
   319  0D8F                     	;# 
   320  0D90                     	;# 
   321  0D91                     	;# 
   322  0D91                     	;# 
   323  0D92                     	;# 
   324  0D93                     	;# 
   325  0D93                     	;# 
   326  0D94                     	;# 
   327  0D95                     	;# 
   328  0D95                     	;# 
   329  0D96                     	;# 
   330  0D97                     	;# 
   331  0D97                     	;# 
   332  0D98                     	;# 
   333  0D99                     	;# 
   334  0D99                     	;# 
   335  0D9A                     	;# 
   336  0D9B                     	;# 
   337  0D9C                     	;# 
   338  0D9C                     	;# 
   339  0D9D                     	;# 
   340  0D9D                     	;# 
   341  0D9E                     	;# 
   342  0D9F                     	;# 
   343  0DA0                     	;# 
   344  0DA1                     	;# 
   345  0DA1                     	;# 
   346  0DA2                     	;# 
   347  0DA3                     	;# 
   348  0DA3                     	;# 
   349  0DA4                     	;# 
   350  0DA5                     	;# 
   351  0DA5                     	;# 
   352  0DA6                     	;# 
   353  0DA7                     	;# 
   354  0DA7                     	;# 
   355  0DA8                     	;# 
   356  0DA9                     	;# 
   357  0DA9                     	;# 
   358  0DAA                     	;# 
   359  0DAB                     	;# 
   360  0DAC                     	;# 
   361  0DAC                     	;# 
   362  0DAD                     	;# 
   363  0DAD                     	;# 
   364  0DAE                     	;# 
   365  0DAF                     	;# 
   366  0DB0                     	;# 
   367  0DB1                     	;# 
   368  0DB1                     	;# 
   369  0DB2                     	;# 
   370  0DB3                     	;# 
   371  0DB3                     	;# 
   372  0DB4                     	;# 
   373  0DB5                     	;# 
   374  0DB5                     	;# 
   375  0DB6                     	;# 
   376  0DB7                     	;# 
   377  0DB7                     	;# 
   378  0DB8                     	;# 
   379  0DB9                     	;# 
   380  0DB9                     	;# 
   381  0DBA                     	;# 
   382  0DBB                     	;# 
   383  0DBC                     	;# 
   384  0DBC                     	;# 
   385  0DBD                     	;# 
   386  0DBD                     	;# 
   387  0DBE                     	;# 
   388  0DBF                     	;# 
   389  0DC0                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE8                     	;# 
   396  0FE9                     	;# 
   397  0FEA                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEE                     	;# 
   403  0FEF                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  008C                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  010C                     	;# 
   446  0111                     	;# 
   447  0112                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011D                     	;# 
   454  011D                     	;# 
   455  018C                     	;# 
   456  0191                     	;# 
   457  0191                     	;# 
   458  0192                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0197                     	;# 
   465  0199                     	;# 
   466  019A                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  028C                     	;# 
   475  030C                     	;# 
   476  038C                     	;# 
   477  0391                     	;# 
   478  0392                     	;# 
   479  0393                     	;# 
   480  0691                     	;# 
   481  0692                     	;# 
   482  0693                     	;# 
   483  0694                     	;# 
   484  0695                     	;# 
   485  0D8E                     	;# 
   486  0D8F                     	;# 
   487  0D90                     	;# 
   488  0D91                     	;# 
   489  0D91                     	;# 
   490  0D92                     	;# 
   491  0D93                     	;# 
   492  0D93                     	;# 
   493  0D94                     	;# 
   494  0D95                     	;# 
   495  0D95                     	;# 
   496  0D96                     	;# 
   497  0D97                     	;# 
   498  0D97                     	;# 
   499  0D98                     	;# 
   500  0D99                     	;# 
   501  0D99                     	;# 
   502  0D9A                     	;# 
   503  0D9B                     	;# 
   504  0D9C                     	;# 
   505  0D9C                     	;# 
   506  0D9D                     	;# 
   507  0D9D                     	;# 
   508  0D9E                     	;# 
   509  0D9F                     	;# 
   510  0DA0                     	;# 
   511  0DA1                     	;# 
   512  0DA1                     	;# 
   513  0DA2                     	;# 
   514  0DA3                     	;# 
   515  0DA3                     	;# 
   516  0DA4                     	;# 
   517  0DA5                     	;# 
   518  0DA5                     	;# 
   519  0DA6                     	;# 
   520  0DA7                     	;# 
   521  0DA7                     	;# 
   522  0DA8                     	;# 
   523  0DA9                     	;# 
   524  0DA9                     	;# 
   525  0DAA                     	;# 
   526  0DAB                     	;# 
   527  0DAC                     	;# 
   528  0DAC                     	;# 
   529  0DAD                     	;# 
   530  0DAD                     	;# 
   531  0DAE                     	;# 
   532  0DAF                     	;# 
   533  0DB0                     	;# 
   534  0DB1                     	;# 
   535  0DB1                     	;# 
   536  0DB2                     	;# 
   537  0DB3                     	;# 
   538  0DB3                     	;# 
   539  0DB4                     	;# 
   540  0DB5                     	;# 
   541  0DB5                     	;# 
   542  0DB6                     	;# 
   543  0DB7                     	;# 
   544  0DB7                     	;# 
   545  0DB8                     	;# 
   546  0DB9                     	;# 
   547  0DB9                     	;# 
   548  0DBA                     	;# 
   549  0DBB                     	;# 
   550  0DBC                     	;# 
   551  0DBC                     	;# 
   552  0DBD                     	;# 
   553  0DBD                     	;# 
   554  0DBE                     	;# 
   555  0DBF                     	;# 
   556  0DC0                     	;# 
   557  0FE4                     	;# 
   558  0FE5                     	;# 
   559  0FE6                     	;# 
   560  0FE7                     	;# 
   561  0FE8                     	;# 
   562  0FE8                     	;# 
   563  0FE9                     	;# 
   564  0FEA                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEE                     	;# 
   570  0FEF                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0008                     	;# 
   580  0009                     	;# 
   581  000A                     	;# 
   582  000B                     	;# 
   583  000C                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0015                     	;# 
   588  0016                     	;# 
   589  0016                     	;# 
   590  0017                     	;# 
   591  0018                     	;# 
   592  0019                     	;# 
   593  001A                     	;# 
   594  001B                     	;# 
   595  001C                     	;# 
   596  008C                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0095                     	;# 
   601  0096                     	;# 
   602  0097                     	;# 
   603  0098                     	;# 
   604  0099                     	;# 
   605  009A                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  010C                     	;# 
   613  0111                     	;# 
   614  0112                     	;# 
   615  0115                     	;# 
   616  0116                     	;# 
   617  0117                     	;# 
   618  0118                     	;# 
   619  0119                     	;# 
   620  011D                     	;# 
   621  011D                     	;# 
   622  018C                     	;# 
   623  0191                     	;# 
   624  0191                     	;# 
   625  0192                     	;# 
   626  0193                     	;# 
   627  0193                     	;# 
   628  0194                     	;# 
   629  0195                     	;# 
   630  0196                     	;# 
   631  0197                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019D                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  020C                     	;# 
   641  028C                     	;# 
   642  030C                     	;# 
   643  038C                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0691                     	;# 
   648  0692                     	;# 
   649  0693                     	;# 
   650  0694                     	;# 
   651  0695                     	;# 
   652  0D8E                     	;# 
   653  0D8F                     	;# 
   654  0D90                     	;# 
   655  0D91                     	;# 
   656  0D91                     	;# 
   657  0D92                     	;# 
   658  0D93                     	;# 
   659  0D93                     	;# 
   660  0D94                     	;# 
   661  0D95                     	;# 
   662  0D95                     	;# 
   663  0D96                     	;# 
   664  0D97                     	;# 
   665  0D97                     	;# 
   666  0D98                     	;# 
   667  0D99                     	;# 
   668  0D99                     	;# 
   669  0D9A                     	;# 
   670  0D9B                     	;# 
   671  0D9C                     	;# 
   672  0D9C                     	;# 
   673  0D9D                     	;# 
   674  0D9D                     	;# 
   675  0D9E                     	;# 
   676  0D9F                     	;# 
   677  0DA0                     	;# 
   678  0DA1                     	;# 
   679  0DA1                     	;# 
   680  0DA2                     	;# 
   681  0DA3                     	;# 
   682  0DA3                     	;# 
   683  0DA4                     	;# 
   684  0DA5                     	;# 
   685  0DA5                     	;# 
   686  0DA6                     	;# 
   687  0DA7                     	;# 
   688  0DA7                     	;# 
   689  0DA8                     	;# 
   690  0DA9                     	;# 
   691  0DA9                     	;# 
   692  0DAA                     	;# 
   693  0DAB                     	;# 
   694  0DAC                     	;# 
   695  0DAC                     	;# 
   696  0DAD                     	;# 
   697  0DAD                     	;# 
   698  0DAE                     	;# 
   699  0DAF                     	;# 
   700  0DB0                     	;# 
   701  0DB1                     	;# 
   702  0DB1                     	;# 
   703  0DB2                     	;# 
   704  0DB3                     	;# 
   705  0DB3                     	;# 
   706  0DB4                     	;# 
   707  0DB5                     	;# 
   708  0DB5                     	;# 
   709  0DB6                     	;# 
   710  0DB7                     	;# 
   711  0DB7                     	;# 
   712  0DB8                     	;# 
   713  0DB9                     	;# 
   714  0DB9                     	;# 
   715  0DBA                     	;# 
   716  0DBB                     	;# 
   717  0DBC                     	;# 
   718  0DBC                     	;# 
   719  0DBD                     	;# 
   720  0DBD                     	;# 
   721  0DBE                     	;# 
   722  0DBF                     	;# 
   723  0DC0                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE8                     	;# 
   730  0FE9                     	;# 
   731  0FEA                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  008C                     	;# 
   764  0091                     	;# 
   765  0092                     	;# 
   766  0093                     	;# 
   767  0095                     	;# 
   768  0096                     	;# 
   769  0097                     	;# 
   770  0098                     	;# 
   771  0099                     	;# 
   772  009A                     	;# 
   773  009B                     	;# 
   774  009B                     	;# 
   775  009C                     	;# 
   776  009D                     	;# 
   777  009E                     	;# 
   778  009F                     	;# 
   779  010C                     	;# 
   780  0111                     	;# 
   781  0112                     	;# 
   782  0115                     	;# 
   783  0116                     	;# 
   784  0117                     	;# 
   785  0118                     	;# 
   786  0119                     	;# 
   787  011D                     	;# 
   788  011D                     	;# 
   789  018C                     	;# 
   790  0191                     	;# 
   791  0191                     	;# 
   792  0192                     	;# 
   793  0193                     	;# 
   794  0193                     	;# 
   795  0194                     	;# 
   796  0195                     	;# 
   797  0196                     	;# 
   798  0197                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019F                     	;# 
   807  020C                     	;# 
   808  028C                     	;# 
   809  030C                     	;# 
   810  038C                     	;# 
   811  0391                     	;# 
   812  0392                     	;# 
   813  0393                     	;# 
   814  0691                     	;# 
   815  0692                     	;# 
   816  0693                     	;# 
   817  0694                     	;# 
   818  0695                     	;# 
   819  0D8E                     	;# 
   820  0D8F                     	;# 
   821  0D90                     	;# 
   822  0D91                     	;# 
   823  0D91                     	;# 
   824  0D92                     	;# 
   825  0D93                     	;# 
   826  0D93                     	;# 
   827  0D94                     	;# 
   828  0D95                     	;# 
   829  0D95                     	;# 
   830  0D96                     	;# 
   831  0D97                     	;# 
   832  0D97                     	;# 
   833  0D98                     	;# 
   834  0D99                     	;# 
   835  0D99                     	;# 
   836  0D9A                     	;# 
   837  0D9B                     	;# 
   838  0D9C                     	;# 
   839  0D9C                     	;# 
   840  0D9D                     	;# 
   841  0D9D                     	;# 
   842  0D9E                     	;# 
   843  0D9F                     	;# 
   844  0DA0                     	;# 
   845  0DA1                     	;# 
   846  0DA1                     	;# 
   847  0DA2                     	;# 
   848  0DA3                     	;# 
   849  0DA3                     	;# 
   850  0DA4                     	;# 
   851  0DA5                     	;# 
   852  0DA5                     	;# 
   853  0DA6                     	;# 
   854  0DA7                     	;# 
   855  0DA7                     	;# 
   856  0DA8                     	;# 
   857  0DA9                     	;# 
   858  0DA9                     	;# 
   859  0DAA                     	;# 
   860  0DAB                     	;# 
   861  0DAC                     	;# 
   862  0DAC                     	;# 
   863  0DAD                     	;# 
   864  0DAD                     	;# 
   865  0DAE                     	;# 
   866  0DAF                     	;# 
   867  0DB0                     	;# 
   868  0DB1                     	;# 
   869  0DB1                     	;# 
   870  0DB2                     	;# 
   871  0DB3                     	;# 
   872  0DB3                     	;# 
   873  0DB4                     	;# 
   874  0DB5                     	;# 
   875  0DB5                     	;# 
   876  0DB6                     	;# 
   877  0DB7                     	;# 
   878  0DB7                     	;# 
   879  0DB8                     	;# 
   880  0DB9                     	;# 
   881  0DB9                     	;# 
   882  0DBA                     	;# 
   883  0DBB                     	;# 
   884  0DBC                     	;# 
   885  0DBC                     	;# 
   886  0DBD                     	;# 
   887  0DBD                     	;# 
   888  0DBE                     	;# 
   889  0DBF                     	;# 
   890  0DC0                     	;# 
   891  0FE4                     	;# 
   892  0FE5                     	;# 
   893  0FE6                     	;# 
   894  0FE7                     	;# 
   895  0FE8                     	;# 
   896  0FE8                     	;# 
   897  0FE9                     	;# 
   898  0FEA                     	;# 
   899  0FEA                     	;# 
   900  0FEB                     	;# 
   901  0FED                     	;# 
   902  0FEE                     	;# 
   903  0FEE                     	;# 
   904  0FEF                     	;# 
   905  0000                     	;# 
   906  0001                     	;# 
   907  0002                     	;# 
   908  0003                     	;# 
   909  0004                     	;# 
   910  0005                     	;# 
   911  0006                     	;# 
   912  0007                     	;# 
   913  0008                     	;# 
   914  0009                     	;# 
   915  000A                     	;# 
   916  000B                     	;# 
   917  000C                     	;# 
   918  0011                     	;# 
   919  0012                     	;# 
   920  0013                     	;# 
   921  0015                     	;# 
   922  0016                     	;# 
   923  0016                     	;# 
   924  0017                     	;# 
   925  0018                     	;# 
   926  0019                     	;# 
   927  001A                     	;# 
   928  001B                     	;# 
   929  001C                     	;# 
   930  008C                     	;# 
   931  0091                     	;# 
   932  0092                     	;# 
   933  0093                     	;# 
   934  0095                     	;# 
   935  0096                     	;# 
   936  0097                     	;# 
   937  0098                     	;# 
   938  0099                     	;# 
   939  009A                     	;# 
   940  009B                     	;# 
   941  009B                     	;# 
   942  009C                     	;# 
   943  009D                     	;# 
   944  009E                     	;# 
   945  009F                     	;# 
   946  010C                     	;# 
   947  0111                     	;# 
   948  0112                     	;# 
   949  0115                     	;# 
   950  0116                     	;# 
   951  0117                     	;# 
   952  0118                     	;# 
   953  0119                     	;# 
   954  011D                     	;# 
   955  011D                     	;# 
   956  018C                     	;# 
   957  0191                     	;# 
   958  0191                     	;# 
   959  0192                     	;# 
   960  0193                     	;# 
   961  0193                     	;# 
   962  0194                     	;# 
   963  0195                     	;# 
   964  0196                     	;# 
   965  0197                     	;# 
   966  0199                     	;# 
   967  019A                     	;# 
   968  019B                     	;# 
   969  019B                     	;# 
   970  019C                     	;# 
   971  019D                     	;# 
   972  019E                     	;# 
   973  019F                     	;# 
   974  020C                     	;# 
   975  028C                     	;# 
   976  030C                     	;# 
   977  038C                     	;# 
   978  0391                     	;# 
   979  0392                     	;# 
   980  0393                     	;# 
   981  0691                     	;# 
   982  0692                     	;# 
   983  0693                     	;# 
   984  0694                     	;# 
   985  0695                     	;# 
   986  0D8E                     	;# 
   987  0D8F                     	;# 
   988  0D90                     	;# 
   989  0D91                     	;# 
   990  0D91                     	;# 
   991  0D92                     	;# 
   992  0D93                     	;# 
   993  0D93                     	;# 
   994  0D94                     	;# 
   995  0D95                     	;# 
   996  0D95                     	;# 
   997  0D96                     	;# 
   998  0D97                     	;# 
   999  0D97                     	;# 
  1000  0D98                     	;# 
  1001  0D99                     	;# 
  1002  0D99                     	;# 
  1003  0D9A                     	;# 
  1004  0D9B                     	;# 
  1005  0D9C                     	;# 
  1006  0D9C                     	;# 
  1007  0D9D                     	;# 
  1008  0D9D                     	;# 
  1009  0D9E                     	;# 
  1010  0D9F                     	;# 
  1011  0DA0                     	;# 
  1012  0DA1                     	;# 
  1013  0DA1                     	;# 
  1014  0DA2                     	;# 
  1015  0DA3                     	;# 
  1016  0DA3                     	;# 
  1017  0DA4                     	;# 
  1018  0DA5                     	;# 
  1019  0DA5                     	;# 
  1020  0DA6                     	;# 
  1021  0DA7                     	;# 
  1022  0DA7                     	;# 
  1023  0DA8                     	;# 
  1024  0DA9                     	;# 
  1025  0DA9                     	;# 
  1026  0DAA                     	;# 
  1027  0DAB                     	;# 
  1028  0DAC                     	;# 
  1029  0DAC                     	;# 
  1030  0DAD                     	;# 
  1031  0DAD                     	;# 
  1032  0DAE                     	;# 
  1033  0DAF                     	;# 
  1034  0DB0                     	;# 
  1035  0DB1                     	;# 
  1036  0DB1                     	;# 
  1037  0DB2                     	;# 
  1038  0DB3                     	;# 
  1039  0DB3                     	;# 
  1040  0DB4                     	;# 
  1041  0DB5                     	;# 
  1042  0DB5                     	;# 
  1043  0DB6                     	;# 
  1044  0DB7                     	;# 
  1045  0DB7                     	;# 
  1046  0DB8                     	;# 
  1047  0DB9                     	;# 
  1048  0DB9                     	;# 
  1049  0DBA                     	;# 
  1050  0DBB                     	;# 
  1051  0DBC                     	;# 
  1052  0DBC                     	;# 
  1053  0DBD                     	;# 
  1054  0DBD                     	;# 
  1055  0DBE                     	;# 
  1056  0DBF                     	;# 
  1057  0DC0                     	;# 
  1058  0FE4                     	;# 
  1059  0FE5                     	;# 
  1060  0FE6                     	;# 
  1061  0FE7                     	;# 
  1062  0FE8                     	;# 
  1063  0FE8                     	;# 
  1064  0FE9                     	;# 
  1065  0FEA                     	;# 
  1066  0FEA                     	;# 
  1067  0FEB                     	;# 
  1068  0FED                     	;# 
  1069  0FEE                     	;# 
  1070  0FEE                     	;# 
  1071  0FEF                     	;# 
  1072                           
  1073                           	psect	nvBANK0
  1074  005D                     __pnvBANK0:	
  1075  005D                     _tmr2_isr_handler:	
  1076  005D                     	ds	2
  1077  001B                     _PR2	set	27
  1078  001C                     _T2CONbits	set	28
  1079  0011                     _PIR1bits	set	17
  1080  000B                     _INTCONbits	set	11
  1081  009B                     _ADRES	set	155
  1082  009E                     _ADCON1bits	set	158
  1083  009D                     _ADCON0bits	set	157
  1084  008C                     _TRISAbits	set	140
  1085  009A                     _OSCSTATbits	set	154
  1086  0098                     _OSCTUNEbits	set	152
  1087  0099                     _OSCCONbits	set	153
  1088  0091                     _PIE1bits	set	145
  1089  010C                     _LATAbits	set	268
  1090  018C                     _ANSELAbits	set	396
  1091  0DB9                     _PWM3TMR	set	3513
  1092  0DB7                     _PWM3OF	set	3511
  1093  0DB5                     _PWM3PR	set	3509
  1094  0DB3                     _PWM3DC	set	3507
  1095  0DB1                     _PWM3PH	set	3505
  1096  0DC0                     _PWM3OFCONbits	set	3520
  1097  0DBF                     _PWM3LDCONbits	set	3519
  1098  0DBE                     _PWM3CLKCONbits	set	3518
  1099  0DBD                     _PWM3INTF	set	3517
  1100  0DBC                     _PWM3INTE	set	3516
  1101  0DBB                     _PWM3CONbits	set	3515
  1102                           
  1103                           ; #config settings
  1104  0000                     
  1105                           	psect	cinit
  1106  0016                     start_initialization:	
  1107  0016                     __initialization:	
  1108                           
  1109                           ; Clear objects allocated to COMMON
  1110  0016  01F0               	clrf	__pbssCOMMON& (0+127)
  1111  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1112  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1113  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1114  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1115                           
  1116                           ; Clear objects allocated to BANK0
  1117  001B  3020               	movlw	low __pbssBANK0
  1118  001C  0084               	movwf	4
  1119  001D  3000               	movlw	high __pbssBANK0
  1120  001E  0085               	movwf	5
  1121  001F  302F               	movlw	47
  1122  0020  2297               	fcall	clear_ram0
  1123  0021                     end_of_initialization:	
  1124                           ;End of C runtime variable initialization code
  1125                           
  1126  0021                     __end_of__initialization:	
  1127  0021  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1128  0022  0020               	movlb	0
  1129  0023  2A44               	ljmp	_main	;jump to C main() function
  1130                           
  1131                           	psect	bssCOMMON
  1132  0070                     __pbssCOMMON:	
  1133  0070                     _target_value:	
  1134  0070                     	ds	2
  1135  0072                     _adc_filter_value:	
  1136  0072                     	ds	2
  1137  0074                     _on:	
  1138  0074                     	ds	1
  1139                           
  1140                           	psect	bssBANK0
  1141  0020                     __pbssBANK0:	
  1142  0020                     adc_filter@value_buf:	
  1143  0020                     	ds	20
  1144  0034                     adc_gather@F3550:	
  1145  0034                     	ds	20
  1146  0048                     _current_value:	
  1147  0048                     	ds	2
  1148  004A                     _adc_gather_value:	
  1149  004A                     	ds	2
  1150  004C                     led_update_state@cnt_off:	
  1151  004C                     	ds	1
  1152  004D                     led_update_state@cnt_on:	
  1153  004D                     	ds	1
  1154  004E                     adc_filter@index:	
  1155  004E                     	ds	1
  1156                           
  1157                           	psect	clrtext
  1158  0297                     clear_ram0:	
  1159                           ;	Called with FSR0 containing the base address, and
  1160                           ;	WREG with the size to clear
  1161                           
  1162  0297  0064               	clrwdt	;clear the watchdog before getting into this loop
  1163  0298                     clrloop0:	
  1164  0298  0180               	clrf	0	;clear RAM location pointed to by FSR
  1165  0299  3101               	addfsr 0,1
  1166  029A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1167  029B  2A98               	goto	clrloop0	;have we reached the end yet?
  1168  029C  3400               	retlw	0	;all done for this memory range, return
  1169                           
  1170                           	psect	cstackBANK1
  1171  00A0                     __pcstackBANK1:	
  1172  00A0                     adc_gather@value_buf:	
  1173                           
  1174                           ; 20 bytes @ 0x0
  1175  00A0                     	ds	20
  1176  00B4                     adc_gather@temp:	
  1177                           
  1178                           ; 2 bytes @ 0x14
  1179  00B4                     	ds	2
  1180  00B6                     adc_gather@sum:	
  1181                           
  1182                           ; 2 bytes @ 0x16
  1183  00B6                     	ds	2
  1184  00B8                     adc_gather@j:	
  1185                           
  1186                           ; 1 bytes @ 0x18
  1187  00B8                     	ds	1
  1188  00B9                     adc_gather@i:	
  1189                           
  1190                           ; 1 bytes @ 0x19
  1191  00B9                     	ds	1
  1192                           
  1193                           	psect	cstackCOMMON
  1194  0075                     __pcstackCOMMON:	
  1195  0075                     ?_pwm_dutyCycle_set:	
  1196  0075                     ?_pwm_loadBuffer_set:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0075                     ??_pwm_loadBuffer_set:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0075                     ?_osc_init:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0075                     ?_gpio_init:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0075                     ?_tmr2_init:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0075                     ?_tmr2_start:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0075                     ?_tmr2_isr_enable:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0075                     ?_pwm_init:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0075                     ?_adc_init:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0075                     ?_tmr2_isr:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0075                     ?_adc_gather:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0075                     ?_adc_filter:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0075                     ?_led_update_state:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0075                     ?_pwm_update_duty:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0075                     ?_pwm_run:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0075                     ?_set_interrupt_handle:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0075                     ?_main:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0075                     ?_ISR:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0075                     pwm_dutyCycle_set@duty:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253                           
  1254                           ; 2 bytes @ 0x0
  1255  0075                     	ds	2
  1256  0077                     ??_pwm_dutyCycle_set:	
  1257  0077                     ??_pwm_run:	
  1258                           ; 1 bytes @ 0x2
  1259                           
  1260                           
  1261                           ; 1 bytes @ 0x2
  1262  0077                     	ds	2
  1263  0079                     ??_tmr2_isr:	
  1264  0079                     ??_ISR:	
  1265                           ; 1 bytes @ 0x4
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x4
  1269  0079                     	ds	1
  1270                           
  1271                           	psect	cstackBANK0
  1272  004F                     __pcstackBANK0:	
  1273  004F                     ?_tmr2_set_handler:	
  1274  004F                     ??_osc_init:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  004F                     ??_gpio_init:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  004F                     ??_tmr2_init:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  004F                     ??_tmr2_start:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  004F                     ??_tmr2_isr_enable:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  004F                     ??_pwm_init:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  004F                     ??_adc_init:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  004F                     ??_led_update_state:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  004F                     ?_getADC:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  004F                     ?___wmul:	
  1302                           ; 2 bytes @ 0x0
  1303                           
  1304  004F                     ?___lwdiv:	
  1305                           ; 2 bytes @ 0x0
  1306                           
  1307  004F                     tmr2_set_handler@handler:	
  1308                           ; 2 bytes @ 0x0
  1309                           
  1310  004F                     ___wmul@multiplier:	
  1311                           ; 2 bytes @ 0x0
  1312                           
  1313  004F                     ___lwdiv@divisor:	
  1314                           ; 2 bytes @ 0x0
  1315                           
  1316                           
  1317                           ; 2 bytes @ 0x0
  1318  004F                     	ds	2
  1319  0051                     ??_getADC:	
  1320  0051                     ??_tmr2_set_handler:	
  1321                           ; 1 bytes @ 0x2
  1322                           
  1323  0051                     ??_set_interrupt_handle:	
  1324                           ; 1 bytes @ 0x2
  1325                           
  1326  0051                     ___wmul@multiplicand:	
  1327                           ; 1 bytes @ 0x2
  1328                           
  1329  0051                     ___lwdiv@dividend:	
  1330                           ; 2 bytes @ 0x2
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x2
  1334  0051                     	ds	2
  1335  0053                     ??_adc_gather:	
  1336  0053                     ??___wmul:	
  1337                           ; 1 bytes @ 0x4
  1338                           
  1339  0053                     ??___lwdiv:	
  1340                           ; 1 bytes @ 0x4
  1341                           
  1342  0053                     ___wmul@product:	
  1343                           ; 1 bytes @ 0x4
  1344                           
  1345                           
  1346                           ; 2 bytes @ 0x4
  1347  0053                     	ds	1
  1348  0054                     ___lwdiv@counter:	
  1349                           
  1350                           ; 1 bytes @ 0x5
  1351  0054                     	ds	1
  1352  0055                     ??_pwm_update_duty:	
  1353  0055                     ___lwdiv@quotient:	
  1354                           ; 1 bytes @ 0x6
  1355                           
  1356                           
  1357                           ; 2 bytes @ 0x6
  1358  0055                     	ds	2
  1359  0057                     ??_adc_filter:	
  1360                           
  1361                           ; 1 bytes @ 0x8
  1362  0057                     	ds	2
  1363  0059                     adc_filter@sum:	
  1364                           
  1365                           ; 2 bytes @ 0xA
  1366  0059                     	ds	2
  1367  005B                     adc_filter@i:	
  1368                           
  1369                           ; 2 bytes @ 0xC
  1370  005B                     	ds	2
  1371  005D                     ??_main:	
  1372                           
  1373                           	psect	maintext
  1374  0244                     __pmaintext:	
  1375                           ; 1 bytes @ 0xE
  1376 ;;
  1377 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1378 ;;
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 151 in file "src/main.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : B1F/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1395 ;;      Params:         0       0       0       0
  1396 ;;      Locals:         0       0       0       0
  1397 ;;      Temps:          0       0       0       0
  1398 ;;      Totals:         0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels required when called:    6
  1401 ;; This function calls:
  1402 ;;		_adc_filter
  1403 ;;		_adc_gather
  1404 ;;		_adc_init
  1405 ;;		_gpio_init
  1406 ;;		_led_update_state
  1407 ;;		_osc_init
  1408 ;;		_pwm_init
  1409 ;;		_pwm_update_duty
  1410 ;;		_set_interrupt_handle
  1411 ;;		_tmr2_init
  1412 ;;		_tmr2_isr_enable
  1413 ;;		_tmr2_start
  1414 ;; This function is called by:
  1415 ;;		Startup code after reset
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _main
  1421  0244                     _main:	
  1422                           
  1423                           ;main.c: 153: INTCONbits.GIE = 1;
  1424                           
  1425                           ;incstack = 0
  1426                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1427  0244  178B               	bsf	11,7	;volatile
  1428                           
  1429                           ;main.c: 155: INTCONbits.PEIE = 1;
  1430  0245  170B               	bsf	11,6	;volatile
  1431                           
  1432                           ;main.c: 157: set_interrupt_handle();
  1433  0246  2290               	fcall	_set_interrupt_handle
  1434                           
  1435                           ;main.c: 159: osc_init();
  1436  0247  227B               	fcall	_osc_init
  1437                           
  1438                           ;main.c: 161: gpio_init();
  1439  0248  2262               	fcall	_gpio_init
  1440                           
  1441                           ;main.c: 163: tmr2_init();
  1442  0249  2286               	fcall	_tmr2_init
  1443                           
  1444                           ;main.c: 164: tmr2_start();
  1445  024A  22A9               	fcall	_tmr2_start
  1446                           
  1447                           ;main.c: 165: tmr2_isr_enable();
  1448  024B  22AC               	fcall	_tmr2_isr_enable
  1449                           
  1450                           ;main.c: 167: pwm_init();
  1451  024C  2213               	fcall	_pwm_init
  1452                           
  1453                           ;main.c: 169: adc_init();
  1454  024D  2254               	fcall	_adc_init
  1455  024E                     l104:	
  1456                           ;main.c: 171: while(1) {
  1457                           
  1458  024E  0064               	clrwdt	;# 
  1459                           
  1460                           ;main.c: 175: adc_gather();
  1461  024F  2024               	fcall	_adc_gather
  1462                           
  1463                           ;main.c: 177: adc_filter();
  1464  0250  20F8               	fcall	_adc_filter
  1465                           
  1466                           ;main.c: 179: led_update_state();
  1467  0251  216F               	fcall	_led_update_state
  1468                           
  1469                           ;main.c: 181: pwm_update_duty();
  1470  0252  21D3               	fcall	_pwm_update_duty
  1471  0253  2A4E               	goto	l104
  1472  0254                     __end_of_main:	
  1473                           
  1474                           	psect	text1
  1475  02A9                     __ptext1:	
  1476 ;; *************** function _tmr2_start *****************
  1477 ;; Defined at:
  1478 ;;		line 13 in file "src/drv_trm2.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		None
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1492 ;;      Params:         0       0       0       0
  1493 ;;      Locals:         0       0       0       0
  1494 ;;      Temps:          0       0       0       0
  1495 ;;      Totals:         0       0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    4
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _tmr2_start
  1508  02A9                     _tmr2_start:	
  1509                           
  1510                           ;drv_trm2.c: 14: T2CONbits.TMR2ON = 1;
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _tmr2_start: []
  1514  02A9  0020               	movlb	0	; select bank0
  1515  02AA  151C               	bsf	28,2	;volatile
  1516  02AB  0008               	return
  1517  02AC                     __end_of_tmr2_start:	
  1518                           
  1519                           	psect	text2
  1520  02AC                     __ptext2:	
  1521 ;; *************** function _tmr2_isr_enable *****************
  1522 ;; Defined at:
  1523 ;;		line 21 in file "src/drv_trm2.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		None
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1537 ;;      Params:         0       0       0       0
  1538 ;;      Locals:         0       0       0       0
  1539 ;;      Temps:          0       0       0       0
  1540 ;;      Totals:         0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    4
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           
  1552                           ;psect for function _tmr2_isr_enable
  1553  02AC                     _tmr2_isr_enable:	
  1554                           
  1555                           ;drv_trm2.c: 22: PIE1bits.TMR2IE = 1;
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _tmr2_isr_enable: []
  1559  02AC  0021               	movlb	1	; select bank1
  1560  02AD  1491               	bsf	17,1	;volatile
  1561  02AE  0008               	return
  1562  02AF                     __end_of_tmr2_isr_enable:	
  1563                           
  1564                           	psect	text3
  1565  0286                     __ptext3:	
  1566 ;; *************** function _tmr2_init *****************
  1567 ;; Defined at:
  1568 ;;		line 5 in file "src/drv_trm2.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1582 ;;      Params:         0       0       0       0
  1583 ;;      Locals:         0       0       0       0
  1584 ;;      Temps:          0       0       0       0
  1585 ;;      Totals:         0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    4
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _tmr2_init
  1598  0286                     _tmr2_init:	
  1599                           
  1600                           ;drv_trm2.c: 7: T2CONbits.T2OUTPS = 0x0F;
  1601                           
  1602                           ;incstack = 0
  1603                           ; Regs used in _tmr2_init: [wreg+status,2+status,0]
  1604  0286  3078               	movlw	120
  1605  0287  0020               	movlb	0	; select bank0
  1606  0288  049C               	iorwf	28,f	;volatile
  1607                           
  1608                           ;drv_trm2.c: 8: T2CONbits.T2CKPS = 0x01;
  1609  0289  081C               	movf	28,w	;volatile
  1610  028A  39FC               	andlw	-4
  1611  028B  3801               	iorlw	1
  1612  028C  009C               	movwf	28	;volatile
  1613                           
  1614                           ;drv_trm2.c: 10: PR2 = 249;
  1615  028D  30F9               	movlw	249
  1616  028E  009B               	movwf	27	;volatile
  1617  028F  0008               	return
  1618  0290                     __end_of_tmr2_init:	
  1619                           
  1620                           	psect	text4
  1621  0290                     __ptext4:	
  1622 ;; *************** function _set_interrupt_handle *****************
  1623 ;; Defined at:
  1624 ;;		line 147 in file "src/main.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1638 ;;      Params:         0       0       0       0
  1639 ;;      Locals:         0       0       0       0
  1640 ;;      Temps:          0       0       0       0
  1641 ;;      Totals:         0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    5
  1645 ;; This function calls:
  1646 ;;		_tmr2_set_handler
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function _set_interrupt_handle
  1654  0290                     _set_interrupt_handle:	
  1655                           
  1656                           ;main.c: 148: tmr2_set_handler(pwm_run);
  1657                           
  1658                           ;incstack = 0
  1659                           ; Regs used in _set_interrupt_handle: [wreg+status,2+status,0+pclath+cstack]
  1660  0290  30A1               	movlw	low _pwm_run
  1661  0291  0020               	movlb	0	; select bank0
  1662  0292  00CF               	movwf	tmr2_set_handler@handler
  1663  0293  3001               	movlw	high _pwm_run
  1664  0294  00D0               	movwf	tmr2_set_handler@handler+1
  1665  0295  229D               	fcall	_tmr2_set_handler
  1666  0296  0008               	return
  1667  0297                     __end_of_set_interrupt_handle:	
  1668                           
  1669                           	psect	text5
  1670  029D                     __ptext5:	
  1671 ;; *************** function _tmr2_set_handler *****************
  1672 ;; Defined at:
  1673 ;;		line 36 in file "src/drv_trm2.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  1676 ;;		 -> pwm_run(1), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1688 ;;      Params:         0       2       0       0
  1689 ;;      Locals:         0       0       0       0
  1690 ;;      Temps:          0       0       0       0
  1691 ;;      Totals:         0       2       0       0
  1692 ;;Total ram usage:        2 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    4
  1695 ;; This function calls:
  1696 ;;		Nothing
  1697 ;; This function is called by:
  1698 ;;		_set_interrupt_handle
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           
  1703                           ;psect for function _tmr2_set_handler
  1704  029D                     _tmr2_set_handler:	
  1705                           
  1706                           ;drv_trm2.c: 37: tmr2_isr_handler = handler;
  1707                           
  1708                           ;incstack = 0
  1709                           ; Regs used in _tmr2_set_handler: [wreg]
  1710  029D  0020               	movlb	0	; select bank0
  1711  029E  0850               	movf	tmr2_set_handler@handler+1,w
  1712  029F  00DE               	movwf	_tmr2_isr_handler+1
  1713  02A0  084F               	movf	tmr2_set_handler@handler,w
  1714  02A1  00DD               	movwf	_tmr2_isr_handler
  1715  02A2  0008               	return
  1716  02A3                     __end_of_tmr2_set_handler:	
  1717                           
  1718                           	psect	text6
  1719  01D3                     __ptext6:	
  1720 ;; *************** function _pwm_update_duty *****************
  1721 ;; Defined at:
  1722 ;;		line 123 in file "src/main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1736 ;;      Params:         0       0       0       0
  1737 ;;      Locals:         0       0       0       0
  1738 ;;      Temps:          0       0       0       0
  1739 ;;      Totals:         0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    5
  1743 ;; This function calls:
  1744 ;;		___wmul
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _pwm_update_duty
  1752  01D3                     _pwm_update_duty:	
  1753                           
  1754                           ;main.c: 124: if(on) {
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _pwm_update_duty: [wreg+status,2+status,0+pclath+cstack]
  1758  01D3  0874               	movf	_on,w	;volatile
  1759  01D4  1903               	btfsc	3,2
  1760  01D5  29F4               	goto	l1216
  1761                           
  1762                           ;main.c: 125: if(adc_filter_value > 1010) {
  1763  01D6  3003               	movlw	3
  1764  01D7  0273               	subwf	_adc_filter_value+1,w	;volatile
  1765  01D8  30F3               	movlw	243
  1766  01D9  1903               	skipnz
  1767  01DA  0272               	subwf	_adc_filter_value,w	;volatile
  1768  01DB  1C03               	skipc
  1769  01DC  29E2               	goto	l1214
  1770                           
  1771                           ;main.c: 126: target_value = 10000;
  1772  01DD  3010               	movlw	16
  1773  01DE  00F0               	movwf	_target_value	;volatile
  1774  01DF  3027               	movlw	39
  1775  01E0  00F1               	movwf	_target_value+1	;volatile
  1776                           
  1777                           ;main.c: 127: } else {
  1778  01E1  0008               	return
  1779  01E2                     l1214:	
  1780                           
  1781                           ;main.c: 128: target_value = (adc_filter_value - 10) * 10;
  1782  01E2  0872               	movf	_adc_filter_value,w	;volatile
  1783  01E3  3EF6               	addlw	246
  1784  01E4  0020               	movlb	0	; select bank0
  1785  01E5  00CF               	movwf	___wmul@multiplier
  1786  01E6  30FF               	movlw	255
  1787  01E7  3D73               	addwfc	_adc_filter_value+1,w	;volatile
  1788  01E8  00D0               	movwf	___wmul@multiplier+1
  1789  01E9  300A               	movlw	10
  1790  01EA  00D1               	movwf	___wmul@multiplicand
  1791  01EB  3000               	movlw	0
  1792  01EC  00D2               	movwf	___wmul@multiplicand+1
  1793  01ED  21F7               	fcall	___wmul
  1794  01EE  0020               	movlb	0	; select bank0
  1795  01EF  0850               	movf	?___wmul+1,w
  1796  01F0  00F1               	movwf	_target_value+1	;volatile
  1797  01F1  084F               	movf	?___wmul,w
  1798  01F2  00F0               	movwf	_target_value	;volatile
  1799                           
  1800                           ;main.c: 129: }
  1801                           ;main.c: 130: } else {
  1802  01F3  0008               	return
  1803  01F4                     l1216:	
  1804                           
  1805                           ;main.c: 131: target_value = 0;
  1806  01F4  01F0               	clrf	_target_value	;volatile
  1807  01F5  01F1               	clrf	_target_value+1	;volatile
  1808  01F6  0008               	return
  1809  01F7                     __end_of_pwm_update_duty:	
  1810                           
  1811                           	psect	text7
  1812  01F7                     __ptext7:	
  1813 ;; *************** function ___wmul *****************
  1814 ;; Defined at:
  1815 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1818 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  product         2    4[BANK0 ] unsigned int 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  2    0[BANK0 ] unsigned int 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1830 ;;      Params:         0       4       0       0
  1831 ;;      Locals:         0       2       0       0
  1832 ;;      Temps:          0       0       0       0
  1833 ;;      Totals:         0       6       0       0
  1834 ;;Total ram usage:        6 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    4
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_pwm_update_duty
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function ___wmul
  1846  01F7                     ___wmul:	
  1847                           
  1848                           ;incstack = 0
  1849                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1850  01F7  0020               	movlb	0	; select bank0
  1851  01F8  01D3               	clrf	___wmul@product
  1852  01F9  01D4               	clrf	___wmul@product+1
  1853  01FA                     l1068:	
  1854  01FA  1C4F               	btfss	___wmul@multiplier,0
  1855  01FB  2A00               	goto	l218
  1856  01FC  0851               	movf	___wmul@multiplicand,w
  1857  01FD  07D3               	addwf	___wmul@product,f
  1858  01FE  0852               	movf	___wmul@multiplicand+1,w
  1859  01FF  3DD4               	addwfc	___wmul@product+1,f
  1860  0200                     l218:	
  1861  0200  3001               	movlw	1
  1862  0201                     u765:	
  1863  0201  35D1               	lslf	___wmul@multiplicand,f
  1864  0202  0DD2               	rlf	___wmul@multiplicand+1,f
  1865  0203  0B89               	decfsz	9,f
  1866  0204  2A01               	goto	u765
  1867  0205  3001               	movlw	1
  1868  0206                     u775:	
  1869  0206  36D0               	lsrf	___wmul@multiplier+1,f
  1870  0207  0CCF               	rrf	___wmul@multiplier,f
  1871  0208  0B89               	decfsz	9,f
  1872  0209  2A06               	goto	u775
  1873  020A  084F               	movf	___wmul@multiplier,w
  1874  020B  0450               	iorwf	___wmul@multiplier+1,w
  1875  020C  1D03               	btfss	3,2
  1876  020D  29FA               	goto	l1068
  1877  020E  0854               	movf	___wmul@product+1,w
  1878  020F  00D0               	movwf	?___wmul+1
  1879  0210  0853               	movf	___wmul@product,w
  1880  0211  00CF               	movwf	?___wmul
  1881  0212  0008               	return
  1882  0213                     __end_of___wmul:	
  1883                           
  1884                           	psect	text8
  1885  0213                     __ptext8:	
  1886 ;; *************** function _pwm_init *****************
  1887 ;; Defined at:
  1888 ;;		line 3 in file "src/drv_pwm.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1902 ;;      Params:         0       0       0       0
  1903 ;;      Locals:         0       0       0       0
  1904 ;;      Temps:          0       0       0       0
  1905 ;;      Totals:         0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    4
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _pwm_init
  1918  0213                     _pwm_init:	
  1919                           
  1920                           ;drv_pwm.c: 5: PWM3CONbits.EN = 1;
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _pwm_init: [wreg+status,2+status,0]
  1924  0213  003B               	movlb	27	; select bank27
  1925  0214  17BB               	bsf	59,7	;volatile
  1926                           
  1927                           ;drv_pwm.c: 7: PWM3CONbits.OE = 1;
  1928  0215  173B               	bsf	59,6	;volatile
  1929                           
  1930                           ;drv_pwm.c: 9: PWM3CONbits.POL = 0;
  1931  0216  123B               	bcf	59,4	;volatile
  1932                           
  1933                           ;drv_pwm.c: 11: PWM3CONbits.MODE = 0x00;
  1934  0217  30F3               	movlw	-13
  1935  0218  05BB               	andwf	59,f	;volatile
  1936                           
  1937                           ;drv_pwm.c: 13: PWM3INTE = 0x00;
  1938  0219  01BC               	clrf	60	;volatile
  1939                           
  1940                           ;drv_pwm.c: 15: PWM3INTF = 0x00;
  1941  021A  01BD               	clrf	61	;volatile
  1942                           
  1943                           ;drv_pwm.c: 17: PWM3CLKCONbits.PS = 0x00;
  1944  021B  308F               	movlw	-113
  1945  021C  05BE               	andwf	62,f	;volatile
  1946                           
  1947                           ;drv_pwm.c: 18: PWM3CLKCONbits.CS = 0x00;
  1948  021D  30FC               	movlw	-4
  1949  021E  05BE               	andwf	62,f	;volatile
  1950                           
  1951                           ;drv_pwm.c: 20: PWM3LDCONbits.LDA = 1;
  1952  021F  17BF               	bsf	63,7	;volatile
  1953                           
  1954                           ;drv_pwm.c: 22: PWM3OFCONbits.OFM = 0x00;
  1955  0220  309F               	movlw	-97
  1956  0221  05C0               	andwf	64,f	;volatile
  1957                           
  1958                           ;drv_pwm.c: 24: PWM3PH = 0x00;
  1959  0222  01B1               	clrf	49	;volatile
  1960  0223  01B2               	clrf	50	;volatile
  1961                           
  1962                           ;drv_pwm.c: 26: PWM3DC = 0x00;
  1963  0224  01B3               	clrf	51	;volatile
  1964  0225  01B4               	clrf	52	;volatile
  1965                           
  1966                           ;drv_pwm.c: 28: PWM3PR = 0x270F;
  1967  0226  3027               	movlw	39
  1968  0227  00B6               	movwf	54	;volatile
  1969  0228  300F               	movlw	15
  1970  0229  00B5               	movwf	53	;volatile
  1971                           
  1972                           ;drv_pwm.c: 30: PWM3OF = 0x00;
  1973  022A  01B7               	clrf	55	;volatile
  1974  022B  01B8               	clrf	56	;volatile
  1975                           
  1976                           ;drv_pwm.c: 32: PWM3TMR = 0x00;
  1977  022C  01B9               	clrf	57	;volatile
  1978  022D  01BA               	clrf	58	;volatile
  1979  022E  0008               	return
  1980  022F                     __end_of_pwm_init:	
  1981                           
  1982                           	psect	text9
  1983  027B                     __ptext9:	
  1984 ;; *************** function _osc_init *****************
  1985 ;; Defined at:
  1986 ;;		line 3 in file "src/drv_osc.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2000 ;;      Params:         0       0       0       0
  2001 ;;      Locals:         0       0       0       0
  2002 ;;      Temps:          0       0       0       0
  2003 ;;      Totals:         0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    4
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _osc_init
  2016  027B                     _osc_init:	
  2017                           
  2018                           ;drv_osc.c: 5: OSCCONbits.SPLLEN = 0x00;
  2019                           
  2020                           ;incstack = 0
  2021                           ; Regs used in _osc_init: [wreg+status,2+status,0]
  2022  027B  0021               	movlb	1	; select bank1
  2023  027C  1399               	bcf	25,7	;volatile
  2024                           
  2025                           ;drv_osc.c: 7: OSCCONbits.IRCF = 0x0F;
  2026  027D  3078               	movlw	120
  2027  027E  0499               	iorwf	25,f	;volatile
  2028                           
  2029                           ;drv_osc.c: 9: OSCCONbits.SCS = 0x00;
  2030  027F  30FC               	movlw	-4
  2031  0280  0599               	andwf	25,f	;volatile
  2032                           
  2033                           ;drv_osc.c: 11: OSCTUNEbits.TUN = 0x00;
  2034  0281  30C0               	movlw	-64
  2035  0282  0598               	andwf	24,f	;volatile
  2036  0283                     l122:	
  2037                           ;drv_osc.c: 13: while(!OSCSTATbits.HFIOFR);
  2038                           
  2039  0283  1A1A               	btfsc	26,4	;volatile
  2040  0284  0008               	return
  2041  0285  2A83               	goto	l122
  2042  0286                     __end_of_osc_init:	
  2043                           
  2044                           	psect	text10
  2045  016F                     __ptext10:	
  2046 ;; *************** function _led_update_state *****************
  2047 ;; Defined at:
  2048 ;;		line 97 in file "src/main.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2062 ;;      Params:         0       0       0       0
  2063 ;;      Locals:         0       0       0       0
  2064 ;;      Temps:          0       1       0       0
  2065 ;;      Totals:         0       1       0       0
  2066 ;;Total ram usage:        1 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    4
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           
  2077                           ;psect for function _led_update_state
  2078  016F                     _led_update_state:	
  2079                           
  2080                           ;main.c: 98: static uint8_t cnt_on = 0;
  2081                           ;main.c: 99: static uint8_t cnt_off = 0;
  2082                           ;main.c: 100: if(on) {
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _led_update_state: [wreg+status,2+status,0]
  2086  016F  0874               	movf	_on,w	;volatile
  2087  0170  1903               	btfsc	3,2
  2088  0171  2988               	goto	l1196
  2089                           
  2090                           ;main.c: 101: if(adc_filter_value < 20) {
  2091  0172  3000               	movlw	0
  2092  0173  0273               	subwf	_adc_filter_value+1,w	;volatile
  2093  0174  3014               	movlw	20
  2094  0175  1903               	skipnz
  2095  0176  0272               	subwf	_adc_filter_value,w	;volatile
  2096  0177  1803               	skipnc
  2097  0178  2985               	goto	l1194
  2098                           
  2099                           ;main.c: 102: cnt_off++;
  2100  0179  3001               	movlw	1
  2101  017A  0020               	movlb	0	; select bank0
  2102  017B  00CF               	movwf	??_led_update_state
  2103  017C  084F               	movf	??_led_update_state,w
  2104  017D  07CC               	addwf	led_update_state@cnt_off,f
  2105                           
  2106                           ;main.c: 103: if(cnt_off >= 30) {
  2107  017E  301E               	movlw	30
  2108  017F  024C               	subwf	led_update_state@cnt_off,w
  2109  0180  1C03               	skipc
  2110  0181  0008               	return
  2111                           
  2112                           ;main.c: 104: cnt_off = 0;
  2113  0182  01CC               	clrf	led_update_state@cnt_off
  2114                           
  2115                           ;main.c: 105: on = 0;
  2116  0183  01F4               	clrf	_on	;volatile
  2117                           
  2118                           ;main.c: 106: }
  2119                           ;main.c: 107: } else {
  2120  0184  0008               	return
  2121  0185                     l1194:	
  2122                           
  2123                           ;main.c: 108: cnt_off = 0;
  2124  0185  0020               	movlb	0	; select bank0
  2125  0186  01CC               	clrf	led_update_state@cnt_off
  2126                           
  2127                           ;main.c: 109: }
  2128                           ;main.c: 110: } else {
  2129  0187  0008               	return
  2130  0188                     l1196:	
  2131                           
  2132                           ;main.c: 111: if(adc_filter_value > 20) {
  2133  0188  3000               	movlw	0
  2134  0189  0273               	subwf	_adc_filter_value+1,w	;volatile
  2135  018A  3015               	movlw	21
  2136  018B  1903               	skipnz
  2137  018C  0272               	subwf	_adc_filter_value,w	;volatile
  2138  018D  1C03               	skipc
  2139  018E  299E               	goto	l1206
  2140                           
  2141                           ;main.c: 112: cnt_on++;
  2142  018F  3001               	movlw	1
  2143  0190  0020               	movlb	0	; select bank0
  2144  0191  00CF               	movwf	??_led_update_state
  2145  0192  084F               	movf	??_led_update_state,w
  2146  0193  07CD               	addwf	led_update_state@cnt_on,f
  2147                           
  2148                           ;main.c: 113: if(cnt_on >= 30) {
  2149  0194  301E               	movlw	30
  2150  0195  024D               	subwf	led_update_state@cnt_on,w
  2151  0196  1C03               	skipc
  2152  0197  0008               	return
  2153                           
  2154                           ;main.c: 114: cnt_on = 0;
  2155  0198  01CD               	clrf	led_update_state@cnt_on
  2156                           
  2157                           ;main.c: 115: on = 1;
  2158  0199  3001               	movlw	1
  2159  019A  00CF               	movwf	??_led_update_state
  2160  019B  084F               	movf	??_led_update_state,w
  2161  019C  00F4               	movwf	_on	;volatile
  2162                           
  2163                           ;main.c: 116: }
  2164                           ;main.c: 117: } else {
  2165  019D  0008               	return
  2166  019E                     l1206:	
  2167                           
  2168                           ;main.c: 118: cnt_on = 0;
  2169  019E  0020               	movlb	0	; select bank0
  2170  019F  01CD               	clrf	led_update_state@cnt_on
  2171  01A0  0008               	return
  2172  01A1                     __end_of_led_update_state:	
  2173                           
  2174                           	psect	text11
  2175  0262                     __ptext11:	
  2176 ;; *************** function _gpio_init *****************
  2177 ;; Defined at:
  2178 ;;		line 3 in file "src/drv_gpio.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		None
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2192 ;;      Params:         0       0       0       0
  2193 ;;      Locals:         0       0       0       0
  2194 ;;      Temps:          0       0       0       0
  2195 ;;      Totals:         0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _gpio_init
  2208  0262                     _gpio_init:	
  2209                           
  2210                           ;drv_gpio.c: 6: TRISAbits.TRISA4 = 1;
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _gpio_init: []
  2214  0262  0021               	movlb	1	; select bank1
  2215  0263  160C               	bsf	12,4	;volatile
  2216                           
  2217                           ;drv_gpio.c: 7: ANSELAbits.ANSA4 = 1;
  2218  0264  0023               	movlb	3	; select bank3
  2219  0265  160C               	bsf	12,4	;volatile
  2220                           
  2221                           ;drv_gpio.c: 8: LATAbits.LATA4 = 0;
  2222  0266  0022               	movlb	2	; select bank2
  2223  0267  120C               	bcf	12,4	;volatile
  2224                           
  2225                           ;drv_gpio.c: 10: TRISAbits.TRISA2 = 0;
  2226  0268  0021               	movlb	1	; select bank1
  2227  0269  110C               	bcf	12,2	;volatile
  2228                           
  2229                           ;drv_gpio.c: 11: ANSELAbits.ANSA2 = 0;
  2230  026A  0023               	movlb	3	; select bank3
  2231  026B  110C               	bcf	12,2	;volatile
  2232                           
  2233                           ;drv_gpio.c: 12: LATAbits.LATA2 = 1;
  2234  026C  0022               	movlb	2	; select bank2
  2235  026D  150C               	bsf	12,2	;volatile
  2236  026E  0008               	return
  2237  026F                     __end_of_gpio_init:	
  2238                           
  2239                           	psect	text12
  2240  0254                     __ptext12:	
  2241 ;; *************** function _adc_init *****************
  2242 ;; Defined at:
  2243 ;;		line 3 in file "src/drv_adc.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2257 ;;      Params:         0       0       0       0
  2258 ;;      Locals:         0       0       0       0
  2259 ;;      Temps:          0       0       0       0
  2260 ;;      Totals:         0       0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    4
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           
  2272                           ;psect for function _adc_init
  2273  0254                     _adc_init:	
  2274                           
  2275                           ;drv_adc.c: 5: ADCON0bits.CHS = 0x03;
  2276                           
  2277                           ;incstack = 0
  2278                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  2279  0254  0021               	movlb	1	; select bank1
  2280  0255  081D               	movf	29,w	;volatile
  2281  0256  3983               	andlw	-125
  2282  0257  380C               	iorlw	12
  2283  0258  009D               	movwf	29	;volatile
  2284                           
  2285                           ;drv_adc.c: 7: ADCON0bits.ADON = 1;
  2286  0259  141D               	bsf	29,0	;volatile
  2287                           
  2288                           ;drv_adc.c: 9: ADCON1bits.ADFM = 1;
  2289  025A  179E               	bsf	30,7	;volatile
  2290                           
  2291                           ;drv_adc.c: 11: ADCON1bits.ADCS = 0x02;
  2292  025B  081E               	movf	30,w	;volatile
  2293  025C  398F               	andlw	-113
  2294  025D  3820               	iorlw	32
  2295  025E  009E               	movwf	30	;volatile
  2296                           
  2297                           ;drv_adc.c: 13: ADCON1bits.ADPREF = 0x00;
  2298  025F  30FC               	movlw	-4
  2299  0260  059E               	andwf	30,f	;volatile
  2300  0261  0008               	return
  2301  0262                     __end_of_adc_init:	
  2302                           
  2303                           	psect	text13
  2304  0024                     __ptext13:	
  2305 ;; *************** function _adc_gather *****************
  2306 ;; Defined at:
  2307 ;;		line 60 in file "src/main.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  value_buf      20    0[BANK1 ] unsigned int [10]
  2312 ;;  sum             2   22[BANK1 ] unsigned int 
  2313 ;;  temp            2   20[BANK1 ] unsigned int 
  2314 ;;  i               1   25[BANK1 ] unsigned char 
  2315 ;;  j               1   24[BANK1 ] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2325 ;;      Params:         0       0       0       0
  2326 ;;      Locals:         0       0      26       0
  2327 ;;      Temps:          0       4       0       0
  2328 ;;      Totals:         0       4      26       0
  2329 ;;Total ram usage:       30 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    5
  2332 ;; This function calls:
  2333 ;;		_getADC
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _adc_gather
  2341  0024                     _adc_gather:	
  2342                           
  2343                           ;main.c: 61: uint8_t i,j;
  2344                           ;main.c: 62: uint16_t temp,sum = 0;
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _adc_gather: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2348  0024  0021               	movlb	1	; select bank1
  2349  0025  01B6               	clrf	adc_gather@sum^(0+128)
  2350  0026  01B7               	clrf	(adc_gather@sum+1)^(0+128)
  2351                           
  2352                           ;main.c: 63: uint16_t value_buf[10] = {0};
  2353  0027  3034               	movlw	low adc_gather@F3550
  2354  0028  0086               	movwf	6
  2355  0029  3000               	movlw	high adc_gather@F3550
  2356  002A  0087               	movwf	7
  2357  002B  30A0               	movlw	low adc_gather@value_buf
  2358  002C  0084               	movwf	4
  2359  002D  3000               	movlw	high adc_gather@value_buf
  2360  002E  0085               	movwf	5
  2361  002F  3014               	movlw	20
  2362  0030  0020               	movlb	0	; select bank0
  2363  0031  00D3               	movwf	??_adc_gather
  2364  0032                     u860:	
  2365  0032  0016               	moviw fsr1++
  2366  0033  001A               	movwi fsr0++
  2367  0034  0BD3               	decfsz	??_adc_gather,f
  2368  0035  2832               	goto	u860
  2369                           
  2370                           ;main.c: 64: for(i = 0; i < 10; i++) {
  2371  0036  0021               	movlb	1	; select bank1
  2372  0037  01B9               	clrf	adc_gather@i^(0+128)
  2373  0038  300A               	movlw	10
  2374  0039  0239               	subwf	adc_gather@i^(0+128),w
  2375  003A  1803               	btfsc	3,0
  2376  003B  285A               	goto	l1124
  2377  003C                     l1116:	
  2378                           
  2379                           ;main.c: 65: value_buf[i] = getADC();
  2380  003C  222F               	fcall	_getADC
  2381  003D  0021               	movlb	1	; select bank1
  2382  003E  3539               	lslf	adc_gather@i^(0+128),w
  2383  003F  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2384  0040  0086               	movwf	6
  2385  0041  0187               	clrf	7
  2386  0042  0020               	movlb	0	; select bank0
  2387  0043  084F               	movf	?_getADC,w
  2388  0044  3FC0               	movwi [0]fsr1
  2389  0045  0850               	movf	?_getADC+1,w
  2390  0046  3FC1               	movwi [1]fsr1
  2391                           
  2392                           ;main.c: 66: _delay((unsigned long)((5)*(16000000/4000.0)));
  2393  0047  301A               	movlw	26
  2394  0048  0020               	movlb	0	; select bank0
  2395  0049  00D3               	movwf	??_adc_gather
  2396  004A  30F8               	movlw	248
  2397  004B                     u1067:	
  2398  004B  0B89               	decfsz	9,f
  2399  004C  284B               	goto	u1067
  2400  004D  0BD3               	decfsz	??_adc_gather,f
  2401  004E  284B               	goto	u1067
  2402  004F  0000               	nop
  2403  0050  3001               	movlw	1
  2404  0051  0020               	movlb	0	; select bank0
  2405  0052  00D3               	movwf	??_adc_gather
  2406  0053  0853               	movf	??_adc_gather,w
  2407  0054  0021               	movlb	1	; select bank1
  2408  0055  07B9               	addwf	adc_gather@i^(0+128),f
  2409  0056  300A               	movlw	10
  2410  0057  0239               	subwf	adc_gather@i^(0+128),w
  2411  0058  1C03               	skipc
  2412  0059  283C               	goto	l1116
  2413  005A                     l1124:	
  2414                           
  2415                           ;main.c: 67: }
  2416                           ;main.c: 68: for(j = 0; j < 10 - 1; j++) {
  2417  005A  01B8               	clrf	adc_gather@j^(0+128)
  2418  005B  3009               	movlw	9
  2419  005C  0238               	subwf	adc_gather@j^(0+128),w
  2420  005D  1803               	btfsc	3,0
  2421  005E  28C6               	goto	l50
  2422  005F                     l1130:	
  2423                           
  2424                           ;main.c: 69: for(i = 0;i < 10 - j; i++) {
  2425  005F  01B9               	clrf	adc_gather@i^(0+128)
  2426  0060                     l1142:	
  2427  0060  0838               	movf	adc_gather@j^(0+128),w
  2428  0061  0020               	movlb	0	; select bank0
  2429  0062  00D3               	movwf	??_adc_gather
  2430  0063  01D4               	clrf	??_adc_gather+1
  2431  0064  09D3               	comf	??_adc_gather,f
  2432  0065  09D4               	comf	??_adc_gather+1,f
  2433  0066  0AD3               	incf	??_adc_gather,f
  2434  0067  1903               	skipnz
  2435  0068  0AD4               	incf	??_adc_gather+1,f
  2436  0069  0853               	movf	??_adc_gather,w
  2437  006A  3E0A               	addlw	10
  2438  006B  00D5               	movwf	??_adc_gather+2
  2439  006C  3000               	movlw	0
  2440  006D  3D54               	addwfc	??_adc_gather+1,w
  2441  006E  00D6               	movwf	??_adc_gather+3
  2442  006F  0856               	movf	??_adc_gather+3,w
  2443  0070  3A80               	xorlw	128
  2444  0071  3C80               	sublw	128
  2445  0072  1D03               	skipz
  2446  0073  2877               	goto	u915
  2447  0074  0855               	movf	??_adc_gather+2,w
  2448  0075  0021               	movlb	1	; select bank1
  2449  0076  0239               	subwf	adc_gather@i^(0+128),w
  2450  0077                     u915:	
  2451  0077  1803               	btfsc	3,0
  2452  0078  28BC               	goto	l1144
  2453                           
  2454                           ;main.c: 70: if(value_buf[i] > value_buf[i + 1]) {
  2455  0079  0021               	movlb	1	; select bank1
  2456  007A  3539               	lslf	adc_gather@i^(0+128),w
  2457  007B  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2458  007C  0086               	movwf	6
  2459  007D  0187               	clrf	7
  2460  007E  3F40               	moviw [0]fsr1
  2461  007F  0020               	movlb	0	; select bank0
  2462  0080  00D3               	movwf	??_adc_gather
  2463  0081  3F41               	moviw [1]fsr1
  2464  0082  00D4               	movwf	??_adc_gather+1
  2465  0083  0021               	movlb	1	; select bank1
  2466  0084  3539               	lslf	adc_gather@i^(0+128),w
  2467  0085  3E02               	addlw	2
  2468  0086  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2469  0087  0086               	movwf	6
  2470  0088  0187               	clrf	7
  2471  0089  3F40               	moviw [0]fsr1
  2472  008A  0020               	movlb	0	; select bank0
  2473  008B  00D5               	movwf	??_adc_gather+2
  2474  008C  3F41               	moviw [1]fsr1
  2475  008D  00D6               	movwf	??_adc_gather+3
  2476  008E  0854               	movf	??_adc_gather+1,w
  2477  008F  0256               	subwf	??_adc_gather+3,w
  2478  0090  1D03               	skipz
  2479  0091  2894               	goto	u905
  2480  0092  0853               	movf	??_adc_gather,w
  2481  0093  0255               	subwf	??_adc_gather+2,w
  2482  0094                     u905:	
  2483  0094  1803               	skipnc
  2484  0095  28B5               	goto	l1140
  2485                           
  2486                           ;main.c: 71: temp = value_buf[i];
  2487  0096  0021               	movlb	1	; select bank1
  2488  0097  3539               	lslf	adc_gather@i^(0+128),w
  2489  0098  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2490  0099  0086               	movwf	6
  2491  009A  0187               	clrf	7
  2492  009B  3F40               	moviw [0]fsr1
  2493  009C  00B4               	movwf	adc_gather@temp^(0+128)
  2494  009D  3F41               	moviw [1]fsr1
  2495  009E  00B5               	movwf	(adc_gather@temp+1)^(0+128)
  2496                           
  2497                           ;main.c: 72: value_buf[i] = value_buf[i + 1];
  2498  009F  3539               	lslf	adc_gather@i^(0+128),w
  2499  00A0  3E02               	addlw	2
  2500  00A1  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2501  00A2  0086               	movwf	6
  2502  00A3  0187               	clrf	7
  2503  00A4  3539               	lslf	adc_gather@i^(0+128),w
  2504  00A5  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2505  00A6  0084               	movwf	4
  2506  00A7  0185               	clrf	5
  2507  00A8  3F40               	moviw [0]fsr1
  2508  00A9  3F80               	movwi [0]fsr0
  2509  00AA  3F41               	moviw [1]fsr1
  2510  00AB  3F81               	movwi [1]fsr0
  2511                           
  2512                           ;main.c: 73: value_buf[i + 1] = temp;
  2513  00AC  3539               	lslf	adc_gather@i^(0+128),w
  2514  00AD  3E02               	addlw	2
  2515  00AE  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2516  00AF  0086               	movwf	6
  2517  00B0  0187               	clrf	7
  2518  00B1  0834               	movf	adc_gather@temp^(0+128),w
  2519  00B2  3FC0               	movwi [0]fsr1
  2520  00B3  0835               	movf	(adc_gather@temp+1)^(0+128),w
  2521  00B4  3FC1               	movwi [1]fsr1
  2522  00B5                     l1140:	
  2523  00B5  3001               	movlw	1
  2524  00B6  0020               	movlb	0	; select bank0
  2525  00B7  00D3               	movwf	??_adc_gather
  2526  00B8  0853               	movf	??_adc_gather,w
  2527  00B9  0021               	movlb	1	; select bank1
  2528  00BA  07B9               	addwf	adc_gather@i^(0+128),f
  2529  00BB  2860               	goto	l1142
  2530  00BC                     l1144:	
  2531  00BC  3001               	movlw	1
  2532  00BD  0020               	movlb	0	; select bank0
  2533  00BE  00D3               	movwf	??_adc_gather
  2534  00BF  0853               	movf	??_adc_gather,w
  2535  00C0  0021               	movlb	1	; select bank1
  2536  00C1  07B8               	addwf	adc_gather@j^(0+128),f
  2537  00C2  3009               	movlw	9
  2538  00C3  0238               	subwf	adc_gather@j^(0+128),w
  2539  00C4  1C03               	skipc
  2540  00C5  285F               	goto	l1130
  2541  00C6                     l50:	
  2542                           
  2543                           ;main.c: 74: }
  2544                           ;main.c: 75: }
  2545                           ;main.c: 76: }
  2546                           ;main.c: 77: for(i = 1; i < 10 - 1; i++) {
  2547  00C6  01B9               	clrf	adc_gather@i^(0+128)
  2548  00C7  0AB9               	incf	adc_gather@i^(0+128),f
  2549  00C8  3009               	movlw	9
  2550  00C9  0239               	subwf	adc_gather@i^(0+128),w
  2551  00CA  1803               	btfsc	3,0
  2552  00CB  28E6               	goto	l1158
  2553  00CC                     l1152:	
  2554                           
  2555                           ;main.c: 78: sum += value_buf[i];
  2556  00CC  3539               	lslf	adc_gather@i^(0+128),w
  2557  00CD  3EA0               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2558  00CE  0086               	movwf	6
  2559  00CF  0187               	clrf	7
  2560  00D0  3F40               	moviw [0]fsr1
  2561  00D1  0020               	movlb	0	; select bank0
  2562  00D2  00D3               	movwf	??_adc_gather
  2563  00D3  3F41               	moviw [1]fsr1
  2564  00D4  00D4               	movwf	??_adc_gather+1
  2565  00D5  0853               	movf	??_adc_gather,w
  2566  00D6  0021               	movlb	1	; select bank1
  2567  00D7  07B6               	addwf	adc_gather@sum^(0+128),f
  2568  00D8  0020               	movlb	0	; select bank0
  2569  00D9  0854               	movf	??_adc_gather+1,w
  2570  00DA  0021               	movlb	1	; select bank1
  2571  00DB  3DB7               	addwfc	(adc_gather@sum+1)^(0+128),f
  2572  00DC  3001               	movlw	1
  2573  00DD  0020               	movlb	0	; select bank0
  2574  00DE  00D3               	movwf	??_adc_gather
  2575  00DF  0853               	movf	??_adc_gather,w
  2576  00E0  0021               	movlb	1	; select bank1
  2577  00E1  07B9               	addwf	adc_gather@i^(0+128),f
  2578  00E2  3009               	movlw	9
  2579  00E3  0239               	subwf	adc_gather@i^(0+128),w
  2580  00E4  1C03               	skipc
  2581  00E5  28CC               	goto	l1152
  2582  00E6                     l1158:	
  2583                           
  2584                           ;main.c: 79: }
  2585                           ;main.c: 80: adc_gather_value = sum / (10 - 2);
  2586  00E6  0837               	movf	(adc_gather@sum+1)^(0+128),w
  2587  00E7  0020               	movlb	0	; select bank0
  2588  00E8  00D4               	movwf	??_adc_gather+1
  2589  00E9  0021               	movlb	1	; select bank1
  2590  00EA  0836               	movf	adc_gather@sum^(0+128),w
  2591  00EB  0020               	movlb	0	; select bank0
  2592  00EC  00D3               	movwf	??_adc_gather
  2593  00ED  36D4               	lsrf	??_adc_gather+1,f
  2594  00EE  0CD3               	rrf	??_adc_gather,f
  2595  00EF  36D4               	lsrf	??_adc_gather+1,f
  2596  00F0  0CD3               	rrf	??_adc_gather,f
  2597  00F1  36D4               	lsrf	??_adc_gather+1,f
  2598  00F2  0CD3               	rrf	??_adc_gather,f
  2599  00F3  0853               	movf	??_adc_gather,w
  2600  00F4  00CA               	movwf	_adc_gather_value	;volatile
  2601  00F5  0854               	movf	??_adc_gather+1,w
  2602  00F6  00CB               	movwf	_adc_gather_value+1	;volatile
  2603  00F7  0008               	return
  2604  00F8                     __end_of_adc_gather:	
  2605                           
  2606                           	psect	text14
  2607  022F                     __ptext14:	
  2608 ;; *************** function _getADC *****************
  2609 ;; Defined at:
  2610 ;;		line 16 in file "src/drv_adc.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;		None
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;		None
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  2    0[BANK0 ] unsigned int 
  2617 ;; Registers used:
  2618 ;;		wreg
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2624 ;;      Params:         0       2       0       0
  2625 ;;      Locals:         0       0       0       0
  2626 ;;      Temps:          0       2       0       0
  2627 ;;      Totals:         0       4       0       0
  2628 ;;Total ram usage:        4 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; Hardware stack levels required when called:    4
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_adc_gather
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           
  2639                           ;psect for function _getADC
  2640  022F                     _getADC:	
  2641                           
  2642                           ;drv_adc.c: 17: ADCON0bits.GO_nDONE = 1;
  2643                           
  2644                           ;incstack = 0
  2645                           ; Regs used in _getADC: [wreg]
  2646  022F  0021               	movlb	1	; select bank1
  2647  0230  149D               	bsf	29,1	;volatile
  2648  0231                     l148:	
  2649                           ;drv_adc.c: 18: while(!PIR1bits.ADIF);
  2650                           
  2651  0231  0020               	movlb	0	; select bank0
  2652  0232  1F11               	btfss	17,6	;volatile
  2653  0233  2A31               	goto	l148
  2654                           
  2655                           ;drv_adc.c: 19: PIR1bits.ADIF = 0;
  2656  0234  1311               	bcf	17,6	;volatile
  2657                           
  2658                           ;drv_adc.c: 20: return (ADRES & 0x3FF);
  2659  0235  30FF               	movlw	255
  2660  0236  0021               	movlb	1	; select bank1
  2661  0237  051B               	andwf	27,w	;volatile
  2662  0238  0020               	movlb	0	; select bank0
  2663  0239  00D1               	movwf	??_getADC
  2664  023A  3003               	movlw	3
  2665  023B  0021               	movlb	1	; select bank1
  2666  023C  051C               	andwf	28,w	;volatile
  2667  023D  0020               	movlb	0	; select bank0
  2668  023E  00D2               	movwf	??_getADC+1
  2669  023F  0851               	movf	??_getADC,w
  2670  0240  00CF               	movwf	?_getADC
  2671  0241  0852               	movf	??_getADC+1,w
  2672  0242  00D0               	movwf	?_getADC+1
  2673  0243  0008               	return
  2674  0244                     __end_of_getADC:	
  2675                           
  2676                           	psect	text15
  2677  00F8                     __ptext15:	
  2678 ;; *************** function _adc_filter *****************
  2679 ;; Defined at:
  2680 ;;		line 83 in file "src/main.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  i               2   12[BANK0 ] unsigned int 
  2685 ;;  sum             2   10[BANK0 ] unsigned int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2695 ;;      Params:         0       0       0       0
  2696 ;;      Locals:         0       4       0       0
  2697 ;;      Temps:          0       2       0       0
  2698 ;;      Totals:         0       6       0       0
  2699 ;;Total ram usage:        6 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    5
  2702 ;; This function calls:
  2703 ;;		___lwdiv
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           
  2710                           ;psect for function _adc_filter
  2711  00F8                     _adc_filter:	
  2712                           
  2713                           ;main.c: 84: uint16_t sum = 0;
  2714                           
  2715                           ;incstack = 0
  2716                           ; Regs used in _adc_filter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2717  00F8  0020               	movlb	0	; select bank0
  2718  00F9  01D9               	clrf	adc_filter@sum
  2719  00FA  01DA               	clrf	adc_filter@sum+1
  2720                           
  2721                           ;main.c: 85: static uint8_t index = 0;
  2722                           ;main.c: 86: static uint16_t value_buf[10] = {0};
  2723                           ;main.c: 87: if(index >= 10) {
  2724  00FB  300A               	movlw	10
  2725  00FC  024E               	subwf	adc_filter@index,w
  2726  00FD  1803               	btfsc	3,0
  2727                           
  2728                           ;main.c: 88: index = 0;
  2729  00FE  01CE               	clrf	adc_filter@index
  2730                           
  2731                           ;main.c: 89: }
  2732                           ;main.c: 90: value_buf[index++] = adc_gather_value;
  2733  00FF  354E               	lslf	adc_filter@index,w
  2734  0100  3E20               	addlw	(low (adc_filter@value_buf| 0))& (0+255)
  2735  0101  0086               	movwf	6
  2736  0102  0187               	clrf	7
  2737  0103  084A               	movf	_adc_gather_value,w	;volatile
  2738  0104  3FC0               	movwi [0]fsr1
  2739  0105  084B               	movf	_adc_gather_value+1,w	;volatile
  2740  0106  3FC1               	movwi [1]fsr1
  2741  0107  3001               	movlw	1
  2742  0108  00D7               	movwf	??_adc_filter
  2743  0109  0857               	movf	??_adc_filter,w
  2744  010A  07CE               	addwf	adc_filter@index,f
  2745                           
  2746                           ;main.c: 91: for(unsigned int i = 0; i < 10; i++) {
  2747  010B  01DB               	clrf	adc_filter@i
  2748  010C  01DC               	clrf	adc_filter@i+1
  2749  010D  3000               	movlw	0
  2750  010E  025C               	subwf	adc_filter@i+1,w
  2751  010F  300A               	movlw	10
  2752  0110  1903               	skipnz
  2753  0111  025B               	subwf	adc_filter@i,w
  2754  0112  1803               	btfsc	3,0
  2755  0113  292B               	goto	l1182
  2756  0114                     l1176:	
  2757                           
  2758                           ;main.c: 92: sum += value_buf[i];
  2759  0114  355B               	lslf	adc_filter@i,w
  2760  0115  3E20               	addlw	(low (adc_filter@value_buf| 0))& (0+255)
  2761  0116  0086               	movwf	6
  2762  0117  0187               	clrf	7
  2763  0118  3F40               	moviw [0]fsr1
  2764  0119  00D7               	movwf	??_adc_filter
  2765  011A  3F41               	moviw [1]fsr1
  2766  011B  00D8               	movwf	??_adc_filter+1
  2767  011C  0857               	movf	??_adc_filter,w
  2768  011D  07D9               	addwf	adc_filter@sum,f
  2769  011E  0858               	movf	??_adc_filter+1,w
  2770  011F  3DDA               	addwfc	adc_filter@sum+1,f
  2771  0120  3001               	movlw	1
  2772  0121  07DB               	addwf	adc_filter@i,f
  2773  0122  3000               	movlw	0
  2774  0123  3DDC               	addwfc	adc_filter@i+1,f
  2775  0124  3000               	movlw	0
  2776  0125  025C               	subwf	adc_filter@i+1,w
  2777  0126  300A               	movlw	10
  2778  0127  1903               	skipnz
  2779  0128  025B               	subwf	adc_filter@i,w
  2780  0129  1C03               	skipc
  2781  012A  2914               	goto	l1176
  2782  012B                     l1182:	
  2783                           
  2784                           ;main.c: 93: }
  2785                           ;main.c: 94: adc_filter_value = sum / 10;
  2786  012B  300A               	movlw	10
  2787  012C  00CF               	movwf	___lwdiv@divisor
  2788  012D  3000               	movlw	0
  2789  012E  00D0               	movwf	___lwdiv@divisor+1
  2790  012F  085A               	movf	adc_filter@sum+1,w
  2791  0130  00D2               	movwf	___lwdiv@dividend+1
  2792  0131  0859               	movf	adc_filter@sum,w
  2793  0132  00D1               	movwf	___lwdiv@dividend
  2794  0133  213A               	fcall	___lwdiv
  2795  0134  0020               	movlb	0	; select bank0
  2796  0135  0850               	movf	?___lwdiv+1,w
  2797  0136  00F3               	movwf	_adc_filter_value+1	;volatile
  2798  0137  084F               	movf	?___lwdiv,w
  2799  0138  00F2               	movwf	_adc_filter_value	;volatile
  2800  0139  0008               	return
  2801  013A                     __end_of_adc_filter:	
  2802                           
  2803                           	psect	text16
  2804  013A                     __ptext16:	
  2805 ;; *************** function ___lwdiv *****************
  2806 ;; Defined at:
  2807 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  divisor         2    0[BANK0 ] unsigned int 
  2810 ;;  dividend        2    2[BANK0 ] unsigned int 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  quotient        2    6[BANK0 ] unsigned int 
  2813 ;;  counter         1    5[BANK0 ] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  2    0[BANK0 ] unsigned int 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2823 ;;      Params:         0       4       0       0
  2824 ;;      Locals:         0       3       0       0
  2825 ;;      Temps:          0       1       0       0
  2826 ;;      Totals:         0       8       0       0
  2827 ;;Total ram usage:        8 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    4
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_adc_filter
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function ___lwdiv
  2839  013A                     ___lwdiv:	
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2843  013A  0020               	movlb	0	; select bank0
  2844  013B  01D5               	clrf	___lwdiv@quotient
  2845  013C  01D6               	clrf	___lwdiv@quotient+1
  2846  013D  084F               	movf	___lwdiv@divisor,w
  2847  013E  0450               	iorwf	___lwdiv@divisor+1,w
  2848  013F  1903               	btfsc	3,2
  2849  0140  296A               	goto	l1102
  2850  0141  01D4               	clrf	___lwdiv@counter
  2851  0142  0AD4               	incf	___lwdiv@counter,f
  2852  0143                     l1090:	
  2853  0143  1BD0               	btfsc	___lwdiv@divisor+1,7
  2854  0144  294F               	goto	l1092
  2855  0145  3001               	movlw	1
  2856  0146                     u805:	
  2857  0146  35CF               	lslf	___lwdiv@divisor,f
  2858  0147  0DD0               	rlf	___lwdiv@divisor+1,f
  2859  0148  0B89               	decfsz	9,f
  2860  0149  2946               	goto	u805
  2861  014A  3001               	movlw	1
  2862  014B  00D3               	movwf	??___lwdiv
  2863  014C  0853               	movf	??___lwdiv,w
  2864  014D  07D4               	addwf	___lwdiv@counter,f
  2865  014E  2943               	goto	l1090
  2866  014F                     l1092:	
  2867  014F  3001               	movlw	1
  2868  0150                     u825:	
  2869  0150  35D5               	lslf	___lwdiv@quotient,f
  2870  0151  0DD6               	rlf	___lwdiv@quotient+1,f
  2871  0152  0B89               	decfsz	9,f
  2872  0153  2950               	goto	u825
  2873  0154  0850               	movf	___lwdiv@divisor+1,w
  2874  0155  0252               	subwf	___lwdiv@dividend+1,w
  2875  0156  1D03               	skipz
  2876  0157  295A               	goto	u835
  2877  0158  084F               	movf	___lwdiv@divisor,w
  2878  0159  0251               	subwf	___lwdiv@dividend,w
  2879  015A                     u835:	
  2880  015A  1C03               	skipc
  2881  015B  2961               	goto	l1098
  2882  015C  084F               	movf	___lwdiv@divisor,w
  2883  015D  02D1               	subwf	___lwdiv@dividend,f
  2884  015E  0850               	movf	___lwdiv@divisor+1,w
  2885  015F  3BD2               	subwfb	___lwdiv@dividend+1,f
  2886  0160  1455               	bsf	___lwdiv@quotient,0
  2887  0161                     l1098:	
  2888  0161  3001               	movlw	1
  2889  0162                     u845:	
  2890  0162  36D0               	lsrf	___lwdiv@divisor+1,f
  2891  0163  0CCF               	rrf	___lwdiv@divisor,f
  2892  0164  0B89               	decfsz	9,f
  2893  0165  2962               	goto	u845
  2894  0166  3001               	movlw	1
  2895  0167  02D4               	subwf	___lwdiv@counter,f
  2896  0168  1D03               	btfss	3,2
  2897  0169  294F               	goto	l1092
  2898  016A                     l1102:	
  2899  016A  0856               	movf	___lwdiv@quotient+1,w
  2900  016B  00D0               	movwf	?___lwdiv+1
  2901  016C  0855               	movf	___lwdiv@quotient,w
  2902  016D  00CF               	movwf	?___lwdiv
  2903  016E  0008               	return
  2904  016F                     __end_of___lwdiv:	
  2905                           
  2906                           	psect	intentry
  2907  0004                     __pintentry:	
  2908 ;; *************** function _ISR *****************
  2909 ;; Defined at:
  2910 ;;		line 185 in file "src/main.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, pclath, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2924 ;;      Params:         0       0       0       0
  2925 ;;      Locals:         0       0       0       0
  2926 ;;      Temps:          1       0       0       0
  2927 ;;      Totals:         1       0       0       0
  2928 ;;Total ram usage:        1 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    3
  2931 ;; This function calls:
  2932 ;;		_tmr2_isr
  2933 ;; This function is called by:
  2934 ;;		Interrupt level 1
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938  0004                     _ISR:	
  2939                           
  2940                           ;incstack = 0
  2941  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2942                           
  2943                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2944  0005  3180               	pagesel	$
  2945  0006  0020               	movlb	0	; select bank0
  2946  0007  087F               	movf	127,w
  2947  0008  00F9               	movwf	??_ISR
  2948                           
  2949                           ;main.c: 186: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  2950  0009  0021               	movlb	1	; select bank1
  2951  000A  1C91               	btfss	17,1	;volatile
  2952  000B  2810               	goto	i1l113
  2953  000C  0020               	movlb	0	; select bank0
  2954  000D  1C91               	btfss	17,1	;volatile
  2955  000E  2810               	goto	i1l113
  2956                           
  2957                           ;main.c: 187: tmr2_isr();
  2958  000F  226F               	fcall	_tmr2_isr
  2959  0010                     i1l113:	
  2960  0010  0879               	movf	??_ISR,w
  2961  0011  0020               	movlb	0	; select bank0
  2962  0012  00FF               	movwf	127
  2963  0013  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2964  0014  0009               	retfie
  2965  0015                     __end_of_ISR:	
  2966                           
  2967                           	psect	text18
  2968  026F                     __ptext18:	
  2969 ;; *************** function _tmr2_isr *****************
  2970 ;; Defined at:
  2971 ;;		line 29 in file "src/drv_trm2.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  1    wreg      void 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2985 ;;      Params:         0       0       0       0
  2986 ;;      Locals:         0       0       0       0
  2987 ;;      Temps:          0       0       0       0
  2988 ;;      Totals:         0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    2
  2992 ;; This function calls:
  2993 ;;		Absolute function
  2994 ;;		_pwm_run
  2995 ;; This function is called by:
  2996 ;;		_ISR
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function _tmr2_isr
  3002  026F                     _tmr2_isr:	
  3003                           
  3004                           ;drv_trm2.c: 30: PIR1bits.TMR2IF = 0;
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _tmr2_isr: [wreg+status,2+status,0+pclath+cstack]
  3008  026F  0020               	movlb	0	; select bank0
  3009  0270  1091               	bcf	17,1	;volatile
  3010                           
  3011                           ;drv_trm2.c: 31: if(tmr2_isr_handler) {
  3012  0271  085D               	movf	_tmr2_isr_handler,w
  3013  0272  045E               	iorwf	_tmr2_isr_handler+1,w
  3014  0273  1903               	btfsc	3,2
  3015  0274  0008               	return
  3016                           
  3017                           ;drv_trm2.c: 32: tmr2_isr_handler();
  3018  0275  085E               	movf	_tmr2_isr_handler+1,w
  3019  0276  008A               	movwf	10
  3020  0277  085D               	movf	_tmr2_isr_handler,w
  3021  0278  000A               	callw
  3022  0279  3182               	pagesel	$
  3023  027A  0008               	return
  3024  027B                     __end_of_tmr2_isr:	
  3025                           
  3026                           	psect	text19
  3027  01A1                     __ptext19:	
  3028 ;; *************** function _pwm_run *****************
  3029 ;; Defined at:
  3030 ;;		line 135 in file "src/main.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3044 ;;      Params:         0       0       0       0
  3045 ;;      Locals:         0       0       0       0
  3046 ;;      Temps:          2       0       0       0
  3047 ;;      Totals:         2       0       0       0
  3048 ;;Total ram usage:        2 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    1
  3051 ;; This function calls:
  3052 ;;		_pwm_dutyCycle_set
  3053 ;;		_pwm_loadBuffer_set
  3054 ;; This function is called by:
  3055 ;;		_set_interrupt_handle
  3056 ;;		_tmr2_isr
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _pwm_run
  3062  01A1                     _pwm_run:	
  3063                           
  3064                           ;main.c: 136: if(current_value + 10 < target_value) {
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _pwm_run: [wreg+status,2+status,0+pclath+cstack]
  3068  01A1  0020               	movlb	0	; select bank0
  3069  01A2  0848               	movf	_current_value,w	;volatile
  3070  01A3  3E0A               	addlw	10
  3071  01A4  00F7               	movwf	??_pwm_run
  3072  01A5  3000               	movlw	0
  3073  01A6  3D49               	addwfc	_current_value+1,w	;volatile
  3074  01A7  00F8               	movwf	??_pwm_run+1
  3075  01A8  0871               	movf	_target_value+1,w	;volatile
  3076  01A9  0278               	subwf	??_pwm_run+1,w
  3077  01AA  1D03               	skipz
  3078  01AB  29AE               	goto	u39_25
  3079  01AC  0870               	movf	_target_value,w	;volatile
  3080  01AD  0277               	subwf	??_pwm_run,w
  3081  01AE                     u39_25:	
  3082  01AE  1803               	skipnc
  3083  01AF  29B5               	goto	i1l862
  3084                           
  3085                           ;main.c: 137: current_value += 10;
  3086  01B0  300A               	movlw	10
  3087  01B1  07C8               	addwf	_current_value,f	;volatile
  3088  01B2  3000               	movlw	0
  3089  01B3  3DC9               	addwfc	_current_value+1,f	;volatile
  3090                           
  3091                           ;main.c: 138: } else if (current_value > target_value + 10) {
  3092  01B4  29CC               	goto	i1l868
  3093  01B5                     i1l862:	
  3094  01B5  0870               	movf	_target_value,w	;volatile
  3095  01B6  3E0A               	addlw	10
  3096  01B7  00F7               	movwf	??_pwm_run
  3097  01B8  3000               	movlw	0
  3098  01B9  3D71               	addwfc	_target_value+1,w	;volatile
  3099  01BA  00F8               	movwf	??_pwm_run+1
  3100  01BB  0849               	movf	_current_value+1,w	;volatile
  3101  01BC  0278               	subwf	??_pwm_run+1,w
  3102  01BD  1D03               	skipz
  3103  01BE  29C1               	goto	u40_25
  3104  01BF  0848               	movf	_current_value,w	;volatile
  3105  01C0  0277               	subwf	??_pwm_run,w
  3106  01C1                     u40_25:	
  3107  01C1  1803               	skipnc
  3108  01C2  29C8               	goto	i1l866
  3109                           
  3110                           ;main.c: 139: current_value -= 10;
  3111  01C3  300A               	movlw	10
  3112  01C4  02C8               	subwf	_current_value,f	;volatile
  3113  01C5  3000               	movlw	0
  3114  01C6  3BC9               	subwfb	_current_value+1,f	;volatile
  3115                           
  3116                           ;main.c: 140: } else {
  3117  01C7  29CC               	goto	i1l868
  3118  01C8                     i1l866:	
  3119                           
  3120                           ;main.c: 141: current_value = target_value;
  3121  01C8  0871               	movf	_target_value+1,w	;volatile
  3122  01C9  00C9               	movwf	_current_value+1	;volatile
  3123  01CA  0870               	movf	_target_value,w	;volatile
  3124  01CB  00C8               	movwf	_current_value	;volatile
  3125  01CC                     i1l868:	
  3126                           
  3127                           ;main.c: 142: }
  3128                           ;main.c: 143: pwm_dutyCycle_set(current_value);
  3129  01CC  0849               	movf	_current_value+1,w	;volatile
  3130  01CD  00F6               	movwf	pwm_dutyCycle_set@duty+1
  3131  01CE  0848               	movf	_current_value,w	;volatile
  3132  01CF  00F5               	movwf	pwm_dutyCycle_set@duty
  3133  01D0  22A3               	fcall	_pwm_dutyCycle_set
  3134                           
  3135                           ;main.c: 144: pwm_loadBuffer_set();
  3136  01D1  22AF               	fcall	_pwm_loadBuffer_set
  3137  01D2  0008               	return
  3138  01D3                     __end_of_pwm_run:	
  3139                           
  3140                           	psect	text20
  3141  02AF                     __ptext20:	
  3142 ;; *************** function _pwm_loadBuffer_set *****************
  3143 ;; Defined at:
  3144 ;;		line 39 in file "src/drv_pwm.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;		None
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		None
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3158 ;;      Params:         0       0       0       0
  3159 ;;      Locals:         0       0       0       0
  3160 ;;      Temps:          0       0       0       0
  3161 ;;      Totals:         0       0       0       0
  3162 ;;Total ram usage:        0 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_pwm_run
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _pwm_loadBuffer_set
  3173  02AF                     _pwm_loadBuffer_set:	
  3174                           
  3175                           ;drv_pwm.c: 40: PWM3LDCONbits.LDA = 1;
  3176                           
  3177                           ;incstack = 0
  3178                           ; Regs used in _pwm_loadBuffer_set: []
  3179  02AF  003B               	movlb	27	; select bank27
  3180  02B0  17BF               	bsf	63,7	;volatile
  3181  02B1  0008               	return
  3182  02B2                     __end_of_pwm_loadBuffer_set:	
  3183                           
  3184                           	psect	text21
  3185  02A3                     __ptext21:	
  3186 ;; *************** function _pwm_dutyCycle_set *****************
  3187 ;; Defined at:
  3188 ;;		line 35 in file "src/drv_pwm.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  duty            2    0[COMMON] unsigned int 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3202 ;;      Params:         2       0       0       0
  3203 ;;      Locals:         0       0       0       0
  3204 ;;      Temps:          0       0       0       0
  3205 ;;      Totals:         2       0       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_pwm_run
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _pwm_dutyCycle_set
  3217  02A3                     _pwm_dutyCycle_set:	
  3218                           
  3219                           ;drv_pwm.c: 36: PWM3DC = duty;
  3220                           
  3221                           ;incstack = 0
  3222                           ; Regs used in _pwm_dutyCycle_set: [wreg]
  3223  02A3  0876               	movf	pwm_dutyCycle_set@duty+1,w
  3224  02A4  003B               	movlb	27	; select bank27
  3225  02A5  00B4               	movwf	52	;volatile
  3226  02A6  0875               	movf	pwm_dutyCycle_set@duty,w
  3227  02A7  00B3               	movwf	51	;volatile
  3228  02A8  0008               	return
  3229  02A9                     __end_of_pwm_dutyCycle_set:	
  3230  007E                     btemp	set	126	;btemp
  3231  007E                     int$flags	set	126
  3232  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         52
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     14      63
    BANK1            80     26      26
    BANK2            80      0       0

Pointer List with Targets:

    tmr2_set_handler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> pwm_run(), 

    tmr2_isr_handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), pwm_run(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _tmr2_isr->_pwm_run
    _pwm_run->_pwm_dutyCycle_set

Critical Paths under _main in BANK0

    _main->_adc_filter
    _set_interrupt_handle->_tmr2_set_handler
    _pwm_update_duty->___wmul
    _adc_gather->_getADC
    _adc_filter->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_adc_gather

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1744
                         _adc_filter
                         _adc_gather
                           _adc_init
                          _gpio_init
                   _led_update_state
                           _osc_init
                           _pwm_init
                    _pwm_update_duty
               _set_interrupt_handle
                          _tmr2_init
                    _tmr2_isr_enable
                         _tmr2_start
 ---------------------------------------------------------------------------------
 (1) _tmr2_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr2_isr_enable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_interrupt_handle                                 0     0      0      96
                   _tmr2_set_handler
 ---------------------------------------------------------------------------------
 (2) _tmr2_set_handler                                     2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _pwm_update_duty                                      0     0      0     266
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_update_state                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_gather                                          30    30      0     875
                                              4 BANK0      4     4      0
                                              0 BANK1     26    26      0
                             _getADC
 ---------------------------------------------------------------------------------
 (2) _getADC                                               4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _adc_filter                                           6     6      0     507
                                              8 BANK0      6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  1     1      0      75
                                              4 COMMON     1     1      0
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (4) _tmr2_isr                                             0     0      0      75
                   Absolute function *
                            _pwm_run *
 ---------------------------------------------------------------------------------
 (5) _pwm_run                                              2     2      0      75
                                              2 COMMON     2     2      0
                  _pwm_dutyCycle_set
                 _pwm_loadBuffer_set
 ---------------------------------------------------------------------------------
 (6) _pwm_loadBuffer_set                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _pwm_dutyCycle_set                                    2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_filter
     ___lwdiv
   _adc_gather
     _getADC
   _adc_init
   _gpio_init
   _led_update_state
   _osc_init
   _pwm_init
   _pwm_update_duty
     ___wmul
   _set_interrupt_handle
     _tmr2_set_handler
   _tmr2_init
   _tmr2_isr_enable
   _tmr2_start

 _ISR (ROOT)
   _tmr2_isr
     Absolute function(Fake) *
     _pwm_run *
       _pwm_dutyCycle_set
       _pwm_loadBuffer_set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      63       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     1A      1A       8       32.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      63      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Mon Apr 22 11:09:24 2019

                  __CFG_CP$OFF 0000                             l50 00C6                             _on 0074  
          ___wmul@multiplicand 0051                    __CFG_LVP$ON 0000                            l104 024E  
                          l122 0283                            l218 0200                            l148 0231  
                          _PR2 001B                            _ISR 0004                            u805 0146  
                          u825 0150                            u905 0094                            u835 015A  
                          u915 0077                            u860 0032                            u845 0162  
                          u765 0201                            u775 0206               _tmr2_set_handler 029D  
                 __CFG_BORV$LO 0000                            wreg 0009    __size_of_pwm_loadBuffer_set 0003  
                         ?_ISR 0075                           l1102 016A                           l1130 005F  
                         l1140 00B5                           l1124 005A                           l1116 003C  
                         l1142 0060                           l1206 019E                           l1214 01E2  
                         l1152 00CC                           l1144 00BC                           l1216 01F4  
                         l1090 0143                           l1092 014F                           l1068 01FA  
                         l1182 012B                           l1158 00E6                           l1176 0114  
                         l1098 0161                           l1194 0185                           l1196 0188  
                 __CFG_WDTE$ON 0000                           u1067 004B              ??_pwm_update_duty 0055  
                 __CFG_WRT$OFF 0000         led_update_state@cnt_on 004D                           _main 0244  
                         fsr0h 0005                           fsr1h 0007                           indf0 0000  
                         fsr0l 0004                           fsr1l 0006                           btemp 007E  
                         start 0015                  __CFG_MCLRE$ON 0000                          ??_ISR 0079  
        pwm_dutyCycle_set@duty 0075                          ?_main 0075                          _ADRES 009B  
     __size_of_tmr2_isr_enable 0003                __end_of___lwdiv 016F                          i1l113 0010  
                        i1l862 01B5                          i1l866 01C8                          i1l868 01CC  
                        u40_25 01C1                          u39_25 01AE                  __CFG_PWRTE$ON 0000  
          adc_gather@value_buf 00A0   __end_of_set_interrupt_handle 0297        led_update_state@cnt_off 004C  
               __CFG_BOREN$OFF 0000                          pclath 000A                __end_of_pwm_run 01D3  
                        status 0003                          wtemp0 007E      __size_of_led_update_state 0032  
               _PWM3CLKCONbits 0DBE                __initialization 0016                   __end_of_main 0254  
                       ??_main 005D                 __CFG_PLLEN$OFF 0000               __end_of_adc_init 0262  
                       _PWM3DC 0DB3                         _PWM3OF 0DB7                         _PWM3PH 0DB1  
                       _PWM3PR 0DB5                         ___wmul 01F7                         _getADC 022F  
               __CFG_STVREN$ON 0000                      ??___lwdiv 0053                 adc_gather@temp 00B4  
             __end_of_tmr2_isr 027B               __end_of_osc_init 0286               __end_of_pwm_init 022F  
                    ??_pwm_run 0077              ??_tmr2_isr_enable 004F        __end_of__initialization 0021  
     __end_of_tmr2_set_handler 02A3                 __pcstackCOMMON 0075                     _adc_gather 0024  
                   _adc_filter 00F8           _set_interrupt_handle 0290                _pwm_update_duty 01D3  
                   __pbssBANK0 0020                  _current_value 0048             __size_of_gpio_init 000D  
             _led_update_state 016F                     __pmaintext 0244          ?_set_interrupt_handle 0075  
                      ?___wmul 004F                        ?_getADC 004F                     __pintentry 0004  
           __size_of_tmr2_init 000A                      ?_adc_init 0075     __end_of_pwm_loadBuffer_set 02B2  
                      _PWM3TMR 0DB9               _adc_gather_value 004A                      ?_tmr2_isr 0075  
                    ?_osc_init 0075                    ?_adc_gather 0075                    ?_adc_filter 0075  
              __size_of___wmul 001C                __size_of_getADC 0015                      ?_pwm_init 0075  
      __end_of_pwm_update_duty 01F7                        ___lwdiv 013A                     ??_adc_init 004F  
              adc_gather@F3550 0034                        __ptext1 02A9                        __ptext2 02AC  
                      __ptext3 0286                        __ptext4 0290                        __ptext5 029D  
                      __ptext6 01D3                        __ptext7 01F7                        __ptext8 0213  
                      __ptext9 027B              __end_of_gpio_init 026F                   __size_of_ISR 0011  
                    _T2CONbits 001C                        _pwm_run 01A1                        clrloop0 0298  
         end_of_initialization 0021              __end_of_tmr2_init 0290                     _tmr2_start 02A9  
          adc_filter@value_buf 0020                     ??_tmr2_isr 0079                     ??_osc_init 004F  
             _adc_filter_value 0072         ??_set_interrupt_handle 0051                     ??_pwm_init 004F  
              _tmr2_isr_enable 02AC               __CFG_FOSC$INTOSC 0000        tmr2_set_handler@handler 004F  
            _pwm_dutyCycle_set 02A3                      _TRISAbits 008C             ?_pwm_dutyCycle_set 0075  
          __size_of_adc_gather 00D4            __size_of_adc_filter 0042            ??_pwm_dutyCycle_set 0077  
              adc_filter@index 004E              ?_tmr2_set_handler 004F             ??_tmr2_set_handler 0051  
             ?_pwm_update_duty 0075                 __end_of___wmul 0213                 __end_of_getADC 0244  
    __end_of_pwm_dutyCycle_set 02A9       __end_of_led_update_state 01A1            start_initialization 0016  
                  __end_of_ISR 0015                    ?_tmr2_start 0075                  _PWM3LDCONbits 0DBF  
             __CFG_LPBOREN$OFF 0000        __end_of_tmr2_isr_enable 02AF                  _PWM3OFCONbits 0DC0  
                     ??___wmul 0053                       ??_getADC 0051                  adc_gather@sum 00B6  
            __size_of_adc_init 000E                    __pbssCOMMON 0070                      ___latbits 0000  
                __pcstackBANK0 004F                  __pcstackBANK1 00A0                  adc_filter@sum 0059  
           _pwm_loadBuffer_set 02AF                    adc_gather@i 00B9                    adc_gather@j 00B8  
                  adc_filter@i 005B                      __pnvBANK0 005D               ___lwdiv@dividend 0051  
          ?_pwm_loadBuffer_set 0075                   ??_adc_gather 0053                   ??_adc_filter 0057  
            __size_of_tmr2_isr 000C              __size_of_osc_init 000B                       ?___lwdiv 004F  
            __size_of_pwm_init 001C     __size_of_pwm_dutyCycle_set 0006            __size_of_tmr2_start 0003  
                    _gpio_init 0262           ??_pwm_loadBuffer_set 0075               ___lwdiv@quotient 0055  
                     ?_pwm_run 0075             __end_of_adc_gather 00F8             __end_of_adc_filter 013A  
               ___wmul@product 0053                       _LATAbits 010C                      clear_ram0 0297  
                     _PIE1bits 0091                      _tmr2_init 0286                       _PIR1bits 0011  
             ?_tmr2_isr_enable 0075                       _PWM3INTE 0DBC                       _PWM3INTF 0DBD  
                   _ADCON0bits 009D                     _ADCON1bits 009E              ___wmul@multiplier 004F  
                   ?_gpio_init 0075                     ?_tmr2_init 0075  __size_of_set_interrupt_handle 0007  
             __size_of___lwdiv 0035                       _adc_init 0254                     _ANSELAbits 018C  
    __size_of_tmr2_set_handler 0006              ?_led_update_state 0075                ___lwdiv@divisor 004F  
              ___lwdiv@counter 0054                       __ptext10 016F                       __ptext11 0262  
                     __ptext20 02AF                       __ptext12 0254                       __ptext21 02A3  
                     __ptext13 0024                       __ptext14 022F                       __ptext15 00F8  
                     __ptext16 013A                       __ptext18 026F                       __ptext19 01A1  
           ??_led_update_state 004F               __size_of_pwm_run 0032                   _target_value 0070  
                __size_of_main 0010                   ??_tmr2_start 004F                       _tmr2_isr 026F  
                     _osc_init 027B                       int$flags 007E                       _pwm_init 0213  
                  _OSCSTATbits 009A                    _OSCTUNEbits 0098                     _INTCONbits 000B  
           __end_of_tmr2_start 02AC       __size_of_pwm_update_duty 0024                    ??_gpio_init 004F  
                  _PWM3CONbits 0DBB                       intlevel1 0000              __CFG_CLKOUTEN$OFF 0000  
                  ??_tmr2_init 004F                     _OSCCONbits 0099               _tmr2_isr_handler 005D  
