

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Tue May 21 08:49:35 2019

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	12F1572
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 1.44
    41                           ; Generated 14/09/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC12F1572 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  008C                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011D                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  0191                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  0193                     	;# 
   130  0193                     	;# 
   131  0194                     	;# 
   132  0195                     	;# 
   133  0196                     	;# 
   134  0197                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  028C                     	;# 
   145  030C                     	;# 
   146  038C                     	;# 
   147  0391                     	;# 
   148  0392                     	;# 
   149  0393                     	;# 
   150  0691                     	;# 
   151  0692                     	;# 
   152  0693                     	;# 
   153  0694                     	;# 
   154  0695                     	;# 
   155  0D8E                     	;# 
   156  0D8F                     	;# 
   157  0D90                     	;# 
   158  0D91                     	;# 
   159  0D91                     	;# 
   160  0D92                     	;# 
   161  0D93                     	;# 
   162  0D93                     	;# 
   163  0D94                     	;# 
   164  0D95                     	;# 
   165  0D95                     	;# 
   166  0D96                     	;# 
   167  0D97                     	;# 
   168  0D97                     	;# 
   169  0D98                     	;# 
   170  0D99                     	;# 
   171  0D99                     	;# 
   172  0D9A                     	;# 
   173  0D9B                     	;# 
   174  0D9C                     	;# 
   175  0D9C                     	;# 
   176  0D9D                     	;# 
   177  0D9D                     	;# 
   178  0D9E                     	;# 
   179  0D9F                     	;# 
   180  0DA0                     	;# 
   181  0DA1                     	;# 
   182  0DA1                     	;# 
   183  0DA2                     	;# 
   184  0DA3                     	;# 
   185  0DA3                     	;# 
   186  0DA4                     	;# 
   187  0DA5                     	;# 
   188  0DA5                     	;# 
   189  0DA6                     	;# 
   190  0DA7                     	;# 
   191  0DA7                     	;# 
   192  0DA8                     	;# 
   193  0DA9                     	;# 
   194  0DA9                     	;# 
   195  0DAA                     	;# 
   196  0DAB                     	;# 
   197  0DAC                     	;# 
   198  0DAC                     	;# 
   199  0DAD                     	;# 
   200  0DAD                     	;# 
   201  0DAE                     	;# 
   202  0DAF                     	;# 
   203  0DB0                     	;# 
   204  0DB1                     	;# 
   205  0DB1                     	;# 
   206  0DB2                     	;# 
   207  0DB3                     	;# 
   208  0DB3                     	;# 
   209  0DB4                     	;# 
   210  0DB5                     	;# 
   211  0DB5                     	;# 
   212  0DB6                     	;# 
   213  0DB7                     	;# 
   214  0DB7                     	;# 
   215  0DB8                     	;# 
   216  0DB9                     	;# 
   217  0DB9                     	;# 
   218  0DBA                     	;# 
   219  0DBB                     	;# 
   220  0DBC                     	;# 
   221  0DBC                     	;# 
   222  0DBD                     	;# 
   223  0DBD                     	;# 
   224  0DBE                     	;# 
   225  0DBF                     	;# 
   226  0DC0                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE8                     	;# 
   233  0FE9                     	;# 
   234  0FEA                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEE                     	;# 
   240  0FEF                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  008C                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  010C                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011D                     	;# 
   291  011D                     	;# 
   292  018C                     	;# 
   293  0191                     	;# 
   294  0191                     	;# 
   295  0192                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0197                     	;# 
   302  0199                     	;# 
   303  019A                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019C                     	;# 
   307  019D                     	;# 
   308  019E                     	;# 
   309  019F                     	;# 
   310  020C                     	;# 
   311  028C                     	;# 
   312  030C                     	;# 
   313  038C                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  0393                     	;# 
   317  0691                     	;# 
   318  0692                     	;# 
   319  0693                     	;# 
   320  0694                     	;# 
   321  0695                     	;# 
   322  0D8E                     	;# 
   323  0D8F                     	;# 
   324  0D90                     	;# 
   325  0D91                     	;# 
   326  0D91                     	;# 
   327  0D92                     	;# 
   328  0D93                     	;# 
   329  0D93                     	;# 
   330  0D94                     	;# 
   331  0D95                     	;# 
   332  0D95                     	;# 
   333  0D96                     	;# 
   334  0D97                     	;# 
   335  0D97                     	;# 
   336  0D98                     	;# 
   337  0D99                     	;# 
   338  0D99                     	;# 
   339  0D9A                     	;# 
   340  0D9B                     	;# 
   341  0D9C                     	;# 
   342  0D9C                     	;# 
   343  0D9D                     	;# 
   344  0D9D                     	;# 
   345  0D9E                     	;# 
   346  0D9F                     	;# 
   347  0DA0                     	;# 
   348  0DA1                     	;# 
   349  0DA1                     	;# 
   350  0DA2                     	;# 
   351  0DA3                     	;# 
   352  0DA3                     	;# 
   353  0DA4                     	;# 
   354  0DA5                     	;# 
   355  0DA5                     	;# 
   356  0DA6                     	;# 
   357  0DA7                     	;# 
   358  0DA7                     	;# 
   359  0DA8                     	;# 
   360  0DA9                     	;# 
   361  0DA9                     	;# 
   362  0DAA                     	;# 
   363  0DAB                     	;# 
   364  0DAC                     	;# 
   365  0DAC                     	;# 
   366  0DAD                     	;# 
   367  0DAD                     	;# 
   368  0DAE                     	;# 
   369  0DAF                     	;# 
   370  0DB0                     	;# 
   371  0DB1                     	;# 
   372  0DB1                     	;# 
   373  0DB2                     	;# 
   374  0DB3                     	;# 
   375  0DB3                     	;# 
   376  0DB4                     	;# 
   377  0DB5                     	;# 
   378  0DB5                     	;# 
   379  0DB6                     	;# 
   380  0DB7                     	;# 
   381  0DB7                     	;# 
   382  0DB8                     	;# 
   383  0DB9                     	;# 
   384  0DB9                     	;# 
   385  0DBA                     	;# 
   386  0DBB                     	;# 
   387  0DBC                     	;# 
   388  0DBC                     	;# 
   389  0DBD                     	;# 
   390  0DBD                     	;# 
   391  0DBE                     	;# 
   392  0DBF                     	;# 
   393  0DC0                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEA                     	;# 
   403  0FEB                     	;# 
   404  0FED                     	;# 
   405  0FEE                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  008C                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  010C                     	;# 
   450  0111                     	;# 
   451  0112                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011D                     	;# 
   458  011D                     	;# 
   459  018C                     	;# 
   460  0191                     	;# 
   461  0191                     	;# 
   462  0192                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0197                     	;# 
   469  0199                     	;# 
   470  019A                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019D                     	;# 
   475  019E                     	;# 
   476  019F                     	;# 
   477  020C                     	;# 
   478  028C                     	;# 
   479  030C                     	;# 
   480  038C                     	;# 
   481  0391                     	;# 
   482  0392                     	;# 
   483  0393                     	;# 
   484  0691                     	;# 
   485  0692                     	;# 
   486  0693                     	;# 
   487  0694                     	;# 
   488  0695                     	;# 
   489  0D8E                     	;# 
   490  0D8F                     	;# 
   491  0D90                     	;# 
   492  0D91                     	;# 
   493  0D91                     	;# 
   494  0D92                     	;# 
   495  0D93                     	;# 
   496  0D93                     	;# 
   497  0D94                     	;# 
   498  0D95                     	;# 
   499  0D95                     	;# 
   500  0D96                     	;# 
   501  0D97                     	;# 
   502  0D97                     	;# 
   503  0D98                     	;# 
   504  0D99                     	;# 
   505  0D99                     	;# 
   506  0D9A                     	;# 
   507  0D9B                     	;# 
   508  0D9C                     	;# 
   509  0D9C                     	;# 
   510  0D9D                     	;# 
   511  0D9D                     	;# 
   512  0D9E                     	;# 
   513  0D9F                     	;# 
   514  0DA0                     	;# 
   515  0DA1                     	;# 
   516  0DA1                     	;# 
   517  0DA2                     	;# 
   518  0DA3                     	;# 
   519  0DA3                     	;# 
   520  0DA4                     	;# 
   521  0DA5                     	;# 
   522  0DA5                     	;# 
   523  0DA6                     	;# 
   524  0DA7                     	;# 
   525  0DA7                     	;# 
   526  0DA8                     	;# 
   527  0DA9                     	;# 
   528  0DA9                     	;# 
   529  0DAA                     	;# 
   530  0DAB                     	;# 
   531  0DAC                     	;# 
   532  0DAC                     	;# 
   533  0DAD                     	;# 
   534  0DAD                     	;# 
   535  0DAE                     	;# 
   536  0DAF                     	;# 
   537  0DB0                     	;# 
   538  0DB1                     	;# 
   539  0DB1                     	;# 
   540  0DB2                     	;# 
   541  0DB3                     	;# 
   542  0DB3                     	;# 
   543  0DB4                     	;# 
   544  0DB5                     	;# 
   545  0DB5                     	;# 
   546  0DB6                     	;# 
   547  0DB7                     	;# 
   548  0DB7                     	;# 
   549  0DB8                     	;# 
   550  0DB9                     	;# 
   551  0DB9                     	;# 
   552  0DBA                     	;# 
   553  0DBB                     	;# 
   554  0DBC                     	;# 
   555  0DBC                     	;# 
   556  0DBD                     	;# 
   557  0DBD                     	;# 
   558  0DBE                     	;# 
   559  0DBF                     	;# 
   560  0DC0                     	;# 
   561  0FE4                     	;# 
   562  0FE5                     	;# 
   563  0FE6                     	;# 
   564  0FE7                     	;# 
   565  0FE8                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0013                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  008C                     	;# 
   601  0091                     	;# 
   602  0092                     	;# 
   603  0093                     	;# 
   604  0095                     	;# 
   605  0096                     	;# 
   606  0097                     	;# 
   607  0098                     	;# 
   608  0099                     	;# 
   609  009A                     	;# 
   610  009B                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  010C                     	;# 
   617  0111                     	;# 
   618  0112                     	;# 
   619  0115                     	;# 
   620  0116                     	;# 
   621  0117                     	;# 
   622  0118                     	;# 
   623  0119                     	;# 
   624  011D                     	;# 
   625  011D                     	;# 
   626  018C                     	;# 
   627  0191                     	;# 
   628  0191                     	;# 
   629  0192                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0194                     	;# 
   633  0195                     	;# 
   634  0196                     	;# 
   635  0197                     	;# 
   636  0199                     	;# 
   637  019A                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019C                     	;# 
   641  019D                     	;# 
   642  019E                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  028C                     	;# 
   646  030C                     	;# 
   647  038C                     	;# 
   648  0391                     	;# 
   649  0392                     	;# 
   650  0393                     	;# 
   651  0691                     	;# 
   652  0692                     	;# 
   653  0693                     	;# 
   654  0694                     	;# 
   655  0695                     	;# 
   656  0D8E                     	;# 
   657  0D8F                     	;# 
   658  0D90                     	;# 
   659  0D91                     	;# 
   660  0D91                     	;# 
   661  0D92                     	;# 
   662  0D93                     	;# 
   663  0D93                     	;# 
   664  0D94                     	;# 
   665  0D95                     	;# 
   666  0D95                     	;# 
   667  0D96                     	;# 
   668  0D97                     	;# 
   669  0D97                     	;# 
   670  0D98                     	;# 
   671  0D99                     	;# 
   672  0D99                     	;# 
   673  0D9A                     	;# 
   674  0D9B                     	;# 
   675  0D9C                     	;# 
   676  0D9C                     	;# 
   677  0D9D                     	;# 
   678  0D9D                     	;# 
   679  0D9E                     	;# 
   680  0D9F                     	;# 
   681  0DA0                     	;# 
   682  0DA1                     	;# 
   683  0DA1                     	;# 
   684  0DA2                     	;# 
   685  0DA3                     	;# 
   686  0DA3                     	;# 
   687  0DA4                     	;# 
   688  0DA5                     	;# 
   689  0DA5                     	;# 
   690  0DA6                     	;# 
   691  0DA7                     	;# 
   692  0DA7                     	;# 
   693  0DA8                     	;# 
   694  0DA9                     	;# 
   695  0DA9                     	;# 
   696  0DAA                     	;# 
   697  0DAB                     	;# 
   698  0DAC                     	;# 
   699  0DAC                     	;# 
   700  0DAD                     	;# 
   701  0DAD                     	;# 
   702  0DAE                     	;# 
   703  0DAF                     	;# 
   704  0DB0                     	;# 
   705  0DB1                     	;# 
   706  0DB1                     	;# 
   707  0DB2                     	;# 
   708  0DB3                     	;# 
   709  0DB3                     	;# 
   710  0DB4                     	;# 
   711  0DB5                     	;# 
   712  0DB5                     	;# 
   713  0DB6                     	;# 
   714  0DB7                     	;# 
   715  0DB7                     	;# 
   716  0DB8                     	;# 
   717  0DB9                     	;# 
   718  0DB9                     	;# 
   719  0DBA                     	;# 
   720  0DBB                     	;# 
   721  0DBC                     	;# 
   722  0DBC                     	;# 
   723  0DBD                     	;# 
   724  0DBD                     	;# 
   725  0DBE                     	;# 
   726  0DBF                     	;# 
   727  0DC0                     	;# 
   728  0FE4                     	;# 
   729  0FE5                     	;# 
   730  0FE6                     	;# 
   731  0FE7                     	;# 
   732  0FE8                     	;# 
   733  0FE8                     	;# 
   734  0FE9                     	;# 
   735  0FEA                     	;# 
   736  0FEA                     	;# 
   737  0FEB                     	;# 
   738  0FED                     	;# 
   739  0FEE                     	;# 
   740  0FEE                     	;# 
   741  0FEF                     	;# 
   742  0000                     	;# 
   743  0001                     	;# 
   744  0002                     	;# 
   745  0003                     	;# 
   746  0004                     	;# 
   747  0005                     	;# 
   748  0006                     	;# 
   749  0007                     	;# 
   750  0008                     	;# 
   751  0009                     	;# 
   752  000A                     	;# 
   753  000B                     	;# 
   754  000C                     	;# 
   755  0011                     	;# 
   756  0012                     	;# 
   757  0013                     	;# 
   758  0015                     	;# 
   759  0016                     	;# 
   760  0016                     	;# 
   761  0017                     	;# 
   762  0018                     	;# 
   763  0019                     	;# 
   764  001A                     	;# 
   765  001B                     	;# 
   766  001C                     	;# 
   767  008C                     	;# 
   768  0091                     	;# 
   769  0092                     	;# 
   770  0093                     	;# 
   771  0095                     	;# 
   772  0096                     	;# 
   773  0097                     	;# 
   774  0098                     	;# 
   775  0099                     	;# 
   776  009A                     	;# 
   777  009B                     	;# 
   778  009B                     	;# 
   779  009C                     	;# 
   780  009D                     	;# 
   781  009E                     	;# 
   782  009F                     	;# 
   783  010C                     	;# 
   784  0111                     	;# 
   785  0112                     	;# 
   786  0115                     	;# 
   787  0116                     	;# 
   788  0117                     	;# 
   789  0118                     	;# 
   790  0119                     	;# 
   791  011D                     	;# 
   792  011D                     	;# 
   793  018C                     	;# 
   794  0191                     	;# 
   795  0191                     	;# 
   796  0192                     	;# 
   797  0193                     	;# 
   798  0193                     	;# 
   799  0194                     	;# 
   800  0195                     	;# 
   801  0196                     	;# 
   802  0197                     	;# 
   803  0199                     	;# 
   804  019A                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019C                     	;# 
   808  019D                     	;# 
   809  019E                     	;# 
   810  019F                     	;# 
   811  020C                     	;# 
   812  028C                     	;# 
   813  030C                     	;# 
   814  038C                     	;# 
   815  0391                     	;# 
   816  0392                     	;# 
   817  0393                     	;# 
   818  0691                     	;# 
   819  0692                     	;# 
   820  0693                     	;# 
   821  0694                     	;# 
   822  0695                     	;# 
   823  0D8E                     	;# 
   824  0D8F                     	;# 
   825  0D90                     	;# 
   826  0D91                     	;# 
   827  0D91                     	;# 
   828  0D92                     	;# 
   829  0D93                     	;# 
   830  0D93                     	;# 
   831  0D94                     	;# 
   832  0D95                     	;# 
   833  0D95                     	;# 
   834  0D96                     	;# 
   835  0D97                     	;# 
   836  0D97                     	;# 
   837  0D98                     	;# 
   838  0D99                     	;# 
   839  0D99                     	;# 
   840  0D9A                     	;# 
   841  0D9B                     	;# 
   842  0D9C                     	;# 
   843  0D9C                     	;# 
   844  0D9D                     	;# 
   845  0D9D                     	;# 
   846  0D9E                     	;# 
   847  0D9F                     	;# 
   848  0DA0                     	;# 
   849  0DA1                     	;# 
   850  0DA1                     	;# 
   851  0DA2                     	;# 
   852  0DA3                     	;# 
   853  0DA3                     	;# 
   854  0DA4                     	;# 
   855  0DA5                     	;# 
   856  0DA5                     	;# 
   857  0DA6                     	;# 
   858  0DA7                     	;# 
   859  0DA7                     	;# 
   860  0DA8                     	;# 
   861  0DA9                     	;# 
   862  0DA9                     	;# 
   863  0DAA                     	;# 
   864  0DAB                     	;# 
   865  0DAC                     	;# 
   866  0DAC                     	;# 
   867  0DAD                     	;# 
   868  0DAD                     	;# 
   869  0DAE                     	;# 
   870  0DAF                     	;# 
   871  0DB0                     	;# 
   872  0DB1                     	;# 
   873  0DB1                     	;# 
   874  0DB2                     	;# 
   875  0DB3                     	;# 
   876  0DB3                     	;# 
   877  0DB4                     	;# 
   878  0DB5                     	;# 
   879  0DB5                     	;# 
   880  0DB6                     	;# 
   881  0DB7                     	;# 
   882  0DB7                     	;# 
   883  0DB8                     	;# 
   884  0DB9                     	;# 
   885  0DB9                     	;# 
   886  0DBA                     	;# 
   887  0DBB                     	;# 
   888  0DBC                     	;# 
   889  0DBC                     	;# 
   890  0DBD                     	;# 
   891  0DBD                     	;# 
   892  0DBE                     	;# 
   893  0DBF                     	;# 
   894  0DC0                     	;# 
   895  0FE4                     	;# 
   896  0FE5                     	;# 
   897  0FE6                     	;# 
   898  0FE7                     	;# 
   899  0FE8                     	;# 
   900  0FE8                     	;# 
   901  0FE9                     	;# 
   902  0FEA                     	;# 
   903  0FEA                     	;# 
   904  0FEB                     	;# 
   905  0FED                     	;# 
   906  0FEE                     	;# 
   907  0FEE                     	;# 
   908  0FEF                     	;# 
   909  0000                     	;# 
   910  0001                     	;# 
   911  0002                     	;# 
   912  0003                     	;# 
   913  0004                     	;# 
   914  0005                     	;# 
   915  0006                     	;# 
   916  0007                     	;# 
   917  0008                     	;# 
   918  0009                     	;# 
   919  000A                     	;# 
   920  000B                     	;# 
   921  000C                     	;# 
   922  0011                     	;# 
   923  0012                     	;# 
   924  0013                     	;# 
   925  0015                     	;# 
   926  0016                     	;# 
   927  0016                     	;# 
   928  0017                     	;# 
   929  0018                     	;# 
   930  0019                     	;# 
   931  001A                     	;# 
   932  001B                     	;# 
   933  001C                     	;# 
   934  008C                     	;# 
   935  0091                     	;# 
   936  0092                     	;# 
   937  0093                     	;# 
   938  0095                     	;# 
   939  0096                     	;# 
   940  0097                     	;# 
   941  0098                     	;# 
   942  0099                     	;# 
   943  009A                     	;# 
   944  009B                     	;# 
   945  009B                     	;# 
   946  009C                     	;# 
   947  009D                     	;# 
   948  009E                     	;# 
   949  009F                     	;# 
   950  010C                     	;# 
   951  0111                     	;# 
   952  0112                     	;# 
   953  0115                     	;# 
   954  0116                     	;# 
   955  0117                     	;# 
   956  0118                     	;# 
   957  0119                     	;# 
   958  011D                     	;# 
   959  011D                     	;# 
   960  018C                     	;# 
   961  0191                     	;# 
   962  0191                     	;# 
   963  0192                     	;# 
   964  0193                     	;# 
   965  0193                     	;# 
   966  0194                     	;# 
   967  0195                     	;# 
   968  0196                     	;# 
   969  0197                     	;# 
   970  0199                     	;# 
   971  019A                     	;# 
   972  019B                     	;# 
   973  019B                     	;# 
   974  019C                     	;# 
   975  019D                     	;# 
   976  019E                     	;# 
   977  019F                     	;# 
   978  020C                     	;# 
   979  028C                     	;# 
   980  030C                     	;# 
   981  038C                     	;# 
   982  0391                     	;# 
   983  0392                     	;# 
   984  0393                     	;# 
   985  0691                     	;# 
   986  0692                     	;# 
   987  0693                     	;# 
   988  0694                     	;# 
   989  0695                     	;# 
   990  0D8E                     	;# 
   991  0D8F                     	;# 
   992  0D90                     	;# 
   993  0D91                     	;# 
   994  0D91                     	;# 
   995  0D92                     	;# 
   996  0D93                     	;# 
   997  0D93                     	;# 
   998  0D94                     	;# 
   999  0D95                     	;# 
  1000  0D95                     	;# 
  1001  0D96                     	;# 
  1002  0D97                     	;# 
  1003  0D97                     	;# 
  1004  0D98                     	;# 
  1005  0D99                     	;# 
  1006  0D99                     	;# 
  1007  0D9A                     	;# 
  1008  0D9B                     	;# 
  1009  0D9C                     	;# 
  1010  0D9C                     	;# 
  1011  0D9D                     	;# 
  1012  0D9D                     	;# 
  1013  0D9E                     	;# 
  1014  0D9F                     	;# 
  1015  0DA0                     	;# 
  1016  0DA1                     	;# 
  1017  0DA1                     	;# 
  1018  0DA2                     	;# 
  1019  0DA3                     	;# 
  1020  0DA3                     	;# 
  1021  0DA4                     	;# 
  1022  0DA5                     	;# 
  1023  0DA5                     	;# 
  1024  0DA6                     	;# 
  1025  0DA7                     	;# 
  1026  0DA7                     	;# 
  1027  0DA8                     	;# 
  1028  0DA9                     	;# 
  1029  0DA9                     	;# 
  1030  0DAA                     	;# 
  1031  0DAB                     	;# 
  1032  0DAC                     	;# 
  1033  0DAC                     	;# 
  1034  0DAD                     	;# 
  1035  0DAD                     	;# 
  1036  0DAE                     	;# 
  1037  0DAF                     	;# 
  1038  0DB0                     	;# 
  1039  0DB1                     	;# 
  1040  0DB1                     	;# 
  1041  0DB2                     	;# 
  1042  0DB3                     	;# 
  1043  0DB3                     	;# 
  1044  0DB4                     	;# 
  1045  0DB5                     	;# 
  1046  0DB5                     	;# 
  1047  0DB6                     	;# 
  1048  0DB7                     	;# 
  1049  0DB7                     	;# 
  1050  0DB8                     	;# 
  1051  0DB9                     	;# 
  1052  0DB9                     	;# 
  1053  0DBA                     	;# 
  1054  0DBB                     	;# 
  1055  0DBC                     	;# 
  1056  0DBC                     	;# 
  1057  0DBD                     	;# 
  1058  0DBD                     	;# 
  1059  0DBE                     	;# 
  1060  0DBF                     	;# 
  1061  0DC0                     	;# 
  1062  0FE4                     	;# 
  1063  0FE5                     	;# 
  1064  0FE6                     	;# 
  1065  0FE7                     	;# 
  1066  0FE8                     	;# 
  1067  0FE8                     	;# 
  1068  0FE9                     	;# 
  1069  0FEA                     	;# 
  1070  0FEA                     	;# 
  1071  0FEB                     	;# 
  1072  0FED                     	;# 
  1073  0FEE                     	;# 
  1074  0FEE                     	;# 
  1075  0FEF                     	;# 
  1076                           
  1077                           	psect	idataCOMMON
  1078  0333                     __pidataCOMMON:	
  1079                           
  1080                           ;initializer for _on
  1081  0333  3401               	retlw	1
  1082  001B                     _PR2	set	27
  1083  001C                     _T2CONbits	set	28
  1084  000B                     _INTCONbits	set	11
  1085  0011                     _PIR1bits	set	17
  1086  009B                     _ADRES	set	155
  1087  009E                     _ADCON1bits	set	158
  1088  009D                     _ADCON0bits	set	157
  1089  008C                     _TRISAbits	set	140
  1090  009A                     _OSCSTATbits	set	154
  1091  0098                     _OSCTUNEbits	set	152
  1092  0099                     _OSCCONbits	set	153
  1093  0091                     _PIE1bits	set	145
  1094  010C                     _LATAbits	set	268
  1095  018C                     _ANSELAbits	set	396
  1096  0DB9                     _PWM3TMR	set	3513
  1097  0DB7                     _PWM3OF	set	3511
  1098  0DB5                     _PWM3PR	set	3509
  1099  0DB3                     _PWM3DC	set	3507
  1100  0DB1                     _PWM3PH	set	3505
  1101  0DC0                     _PWM3OFCONbits	set	3520
  1102  0DBF                     _PWM3LDCONbits	set	3519
  1103  0DBE                     _PWM3CLKCONbits	set	3518
  1104  0DBD                     _PWM3INTF	set	3517
  1105  0DBC                     _PWM3INTE	set	3516
  1106  0DBB                     _PWM3CONbits	set	3515
  1107                           
  1108                           ; #config settings
  1109  0000                     
  1110                           	psect	cinit
  1111  0016                     start_initialization:	
  1112  0016                     __initialization:	
  1113                           
  1114                           ; Initialize objects allocated to COMMON
  1115  0016  2333               	fcall	__pidataCOMMON	;fetch initializer
  1116  0017  00F9               	movwf	__pdataCOMMON& (0+127)
  1117                           
  1118                           ; Clear objects allocated to COMMON
  1119  0018  01F5               	clrf	__pbssCOMMON& (0+127)
  1120  0019  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  1121  001A  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  1122  001B  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
  1123                           
  1124                           ; Clear objects allocated to BANK0
  1125  001C  3045               	movlw	low __pbssBANK0
  1126  001D  0084               	movwf	4
  1127  001E  3000               	movlw	high __pbssBANK0
  1128  001F  0085               	movwf	5
  1129  0020  301D               	movlw	29
  1130  0021  2315               	fcall	clear_ram0
  1131                           
  1132                           ; Clear objects allocated to BANK1
  1133  0022  30A0               	movlw	low __pbssBANK1
  1134  0023  0084               	movwf	4
  1135  0024  3000               	movlw	high __pbssBANK1
  1136  0025  0085               	movwf	5
  1137  0026  3014               	movlw	20
  1138  0027  2315               	fcall	clear_ram0
  1139  0028                     end_of_initialization:	
  1140                           ;End of C runtime variable initialization code
  1141                           
  1142  0028                     __end_of__initialization:	
  1143  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1144  0029  0020               	movlb	0
  1145  002A  28E9               	ljmp	_main	;jump to C main() function
  1146                           
  1147                           	psect	bssCOMMON
  1148  0075                     __pbssCOMMON:	
  1149  0075                     _current_value:	
  1150  0075                     	ds	2
  1151  0077                     _adc_filter_value:	
  1152  0077                     	ds	2
  1153                           
  1154                           	psect	dataCOMMON
  1155  0079                     __pdataCOMMON:	
  1156  0079                     _on:	
  1157  0079                     	ds	1
  1158                           
  1159                           	psect	bssBANK0
  1160  0045                     __pbssBANK0:	
  1161  0045                     _adc_filter_buf:	
  1162  0045                     	ds	20
  1163  0059                     _tmr2_isr_handler:	
  1164  0059                     	ds	2
  1165  005B                     _target_value:	
  1166  005B                     	ds	2
  1167  005D                     _adc_gather_value:	
  1168  005D                     	ds	2
  1169  005F                     led_update_state@cnt_off:	
  1170  005F                     	ds	1
  1171  0060                     led_update_state@cnt_on:	
  1172  0060                     	ds	1
  1173  0061                     adc_filter@index:	
  1174  0061                     	ds	1
  1175                           
  1176                           	psect	bssBANK1
  1177  00A0                     __pbssBANK1:	
  1178  00A0                     adc_gather@F3555:	
  1179  00A0                     	ds	20
  1180                           
  1181                           	psect	clrtext
  1182  0315                     clear_ram0:	
  1183                           ;	Called with FSR0 containing the base address, and
  1184                           ;	WREG with the size to clear
  1185                           
  1186  0315  0064               	clrwdt	;clear the watchdog before getting into this loop
  1187  0316                     clrloop0:	
  1188  0316  0180               	clrf	0	;clear RAM location pointed to by FSR
  1189  0317  3101               	addfsr 0,1
  1190  0318  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1191  0319  2B16               	goto	clrloop0	;have we reached the end yet?
  1192  031A  3400               	retlw	0	;all done for this memory range, return
  1193                           
  1194                           	psect	cstackCOMMON
  1195  0070                     __pcstackCOMMON:	
  1196  0070                     ?_pwm_loadBuffer_set:	
  1197  0070                     ?_osc_init:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_gpio_init:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_pwm_init:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_adc_init:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_tmr2_init:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_tmr2_start:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_tmr2_isr_enable:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_tmr2_isr:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_adc_gather_init:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ?_adc_gather:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     ?_adc_filter:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230  0070                     ?_led_update_state:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233  0070                     ?_pwm_update_duty:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236  0070                     ?_pwm_run:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239  0070                     ?_set_interrupt_handle:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0070                     ?_main:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245  0070                     ?_ISR:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248  0070                     ?i1_pwm_dutyCycle_set:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251  0070                     ?i1_pwm_loadBuffer_set:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254  0070                     ??i1_pwm_loadBuffer_set:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257  0070                     i1pwm_dutyCycle_set@duty:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260                           
  1261                           ; 2 bytes @ 0x0
  1262  0070                     	ds	2
  1263  0072                     ??_pwm_run:	
  1264  0072                     ??i1_pwm_dutyCycle_set:	
  1265                           ; 1 bytes @ 0x2
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x2
  1269  0072                     	ds	2
  1270  0074                     ??_tmr2_isr:	
  1271  0074                     ??_ISR:	
  1272                           ; 1 bytes @ 0x4
  1273                           
  1274                           
  1275                           ; 1 bytes @ 0x4
  1276  0074                     	ds	1
  1277                           
  1278                           	psect	cstackBANK0
  1279  0020                     __pcstackBANK0:	
  1280  0020                     ?_pwm_dutyCycle_set:	
  1281  0020                     ??_pwm_loadBuffer_set:	
  1282                           ; 1 bytes @ 0x0
  1283                           
  1284  0020                     ?_tmr2_set_handler:	
  1285                           ; 1 bytes @ 0x0
  1286                           
  1287  0020                     ??_osc_init:	
  1288                           ; 1 bytes @ 0x0
  1289                           
  1290  0020                     ??_gpio_init:	
  1291                           ; 1 bytes @ 0x0
  1292                           
  1293  0020                     ??_pwm_init:	
  1294                           ; 1 bytes @ 0x0
  1295                           
  1296  0020                     ??_adc_init:	
  1297                           ; 1 bytes @ 0x0
  1298                           
  1299  0020                     ??_tmr2_init:	
  1300                           ; 1 bytes @ 0x0
  1301                           
  1302  0020                     ??_tmr2_start:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0020                     ??_tmr2_isr_enable:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0020                     ??_led_update_state:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0020                     ?_getADC:	
  1312                           ; 1 bytes @ 0x0
  1313                           
  1314  0020                     ?___wmul:	
  1315                           ; 2 bytes @ 0x0
  1316                           
  1317  0020                     ?___lwdiv:	
  1318                           ; 2 bytes @ 0x0
  1319                           
  1320  0020                     pwm_dutyCycle_set@duty:	
  1321                           ; 2 bytes @ 0x0
  1322                           
  1323  0020                     tmr2_set_handler@handler:	
  1324                           ; 2 bytes @ 0x0
  1325                           
  1326  0020                     ___wmul@multiplier:	
  1327                           ; 2 bytes @ 0x0
  1328                           
  1329  0020                     ___lwdiv@divisor:	
  1330                           ; 2 bytes @ 0x0
  1331                           
  1332                           
  1333                           ; 2 bytes @ 0x0
  1334  0020                     	ds	2
  1335  0022                     ??_getADC:	
  1336  0022                     ??_pwm_dutyCycle_set:	
  1337                           ; 1 bytes @ 0x2
  1338                           
  1339  0022                     ??_tmr2_set_handler:	
  1340                           ; 1 bytes @ 0x2
  1341                           
  1342  0022                     ??_set_interrupt_handle:	
  1343                           ; 1 bytes @ 0x2
  1344                           
  1345  0022                     ___wmul@multiplicand:	
  1346                           ; 1 bytes @ 0x2
  1347                           
  1348  0022                     ___lwdiv@dividend:	
  1349                           ; 2 bytes @ 0x2
  1350                           
  1351                           
  1352                           ; 2 bytes @ 0x2
  1353  0022                     	ds	2
  1354  0024                     ??_adc_gather:	
  1355  0024                     ??___wmul:	
  1356                           ; 1 bytes @ 0x4
  1357                           
  1358  0024                     ??___lwdiv:	
  1359                           ; 1 bytes @ 0x4
  1360                           
  1361  0024                     ___wmul@product:	
  1362                           ; 1 bytes @ 0x4
  1363                           
  1364                           
  1365                           ; 2 bytes @ 0x4
  1366  0024                     	ds	1
  1367  0025                     ___lwdiv@counter:	
  1368                           
  1369                           ; 1 bytes @ 0x5
  1370  0025                     	ds	1
  1371  0026                     ??_pwm_update_duty:	
  1372  0026                     ___lwdiv@quotient:	
  1373                           ; 1 bytes @ 0x6
  1374                           
  1375                           
  1376                           ; 2 bytes @ 0x6
  1377  0026                     	ds	2
  1378  0028                     ??_adc_gather_init:	
  1379  0028                     ??_adc_filter:	
  1380                           ; 1 bytes @ 0x8
  1381                           
  1382  0028                     adc_gather@value_buf:	
  1383                           ; 1 bytes @ 0x8
  1384                           
  1385                           
  1386                           ; 20 bytes @ 0x8
  1387  0028                     	ds	1
  1388  0029                     adc_gather_init@sum:	
  1389                           
  1390                           ; 2 bytes @ 0x9
  1391  0029                     	ds	1
  1392  002A                     adc_filter@sum:	
  1393                           
  1394                           ; 2 bytes @ 0xA
  1395  002A                     	ds	1
  1396  002B                     adc_gather_init@i:	
  1397                           
  1398                           ; 1 bytes @ 0xB
  1399  002B                     	ds	1
  1400  002C                     adc_filter@i:	
  1401                           
  1402                           ; 2 bytes @ 0xC
  1403  002C                     	ds	16
  1404  003C                     adc_gather@temp:	
  1405                           
  1406                           ; 2 bytes @ 0x1C
  1407  003C                     	ds	2
  1408  003E                     adc_gather@sum:	
  1409                           
  1410                           ; 2 bytes @ 0x1E
  1411  003E                     	ds	2
  1412  0040                     adc_gather@j:	
  1413                           
  1414                           ; 1 bytes @ 0x20
  1415  0040                     	ds	1
  1416  0041                     adc_gather@i:	
  1417                           
  1418                           ; 1 bytes @ 0x21
  1419  0041                     	ds	1
  1420  0042                     ??_main:	
  1421                           
  1422                           ; 1 bytes @ 0x22
  1423  0042                     	ds	2
  1424  0044                     main@i:	
  1425                           
  1426                           ; 1 bytes @ 0x24
  1427  0044                     	ds	1
  1428                           
  1429                           	psect	maintext
  1430  00E9                     __pmaintext:	
  1431 ;;
  1432 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1433 ;;
  1434 ;; *************** function _main *****************
  1435 ;; Defined at:
  1436 ;;		line 166 in file "src/main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  i               1   36[BANK0 ] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : B1F/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1450 ;;      Params:         0       0       0       0
  1451 ;;      Locals:         0       1       0       0
  1452 ;;      Temps:          0       2       0       0
  1453 ;;      Totals:         0       3       0       0
  1454 ;;Total ram usage:        3 bytes
  1455 ;; Hardware stack levels required when called:    6
  1456 ;; This function calls:
  1457 ;;		_adc_filter
  1458 ;;		_adc_gather
  1459 ;;		_adc_gather_init
  1460 ;;		_adc_init
  1461 ;;		_gpio_init
  1462 ;;		_led_update_state
  1463 ;;		_osc_init
  1464 ;;		_pwm_dutyCycle_set
  1465 ;;		_pwm_init
  1466 ;;		_pwm_loadBuffer_set
  1467 ;;		_pwm_update_duty
  1468 ;;		_set_interrupt_handle
  1469 ;;		_tmr2_init
  1470 ;;		_tmr2_isr_enable
  1471 ;;		_tmr2_start
  1472 ;; This function is called by:
  1473 ;;		Startup code after reset
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _main
  1479  00E9                     _main:	
  1480                           
  1481                           ;main.c: 168: osc_init();
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1485  00E9  22F0               	fcall	_osc_init
  1486                           
  1487                           ;main.c: 170: gpio_init();
  1488  00EA  22D7               	fcall	_gpio_init
  1489                           
  1490                           ;main.c: 172: pwm_init();
  1491  00EB  227C               	fcall	_pwm_init
  1492                           
  1493                           ;main.c: 174: adc_init();
  1494  00EC  22C9               	fcall	_adc_init
  1495                           
  1496                           ;main.c: 176: tmr2_init();
  1497  00ED  22FB               	fcall	_tmr2_init
  1498                           
  1499                           ;main.c: 177: tmr2_start();
  1500  00EE  2327               	fcall	_tmr2_start
  1501                           
  1502                           ;main.c: 179: _delay((unsigned long)((500)*(16000000/4000.0)));
  1503  00EF  300B               	movlw	11
  1504  00F0  0020               	movlb	0	; select bank0
  1505  00F1  00C3               	movwf	??_main+1
  1506  00F2  3026               	movlw	38
  1507  00F3  00C2               	movwf	??_main
  1508  00F4  305D               	movlw	93
  1509  00F5                     u1287:	
  1510  00F5  0B89               	decfsz	9,f
  1511  00F6  28F5               	goto	u1287
  1512  00F7  0BC2               	decfsz	??_main,f
  1513  00F8  28F5               	goto	u1287
  1514  00F9  0BC3               	decfsz	??_main+1,f
  1515  00FA  28F5               	goto	u1287
  1516  00FB  3200               	nop2
  1517                           
  1518                           ;main.c: 181: adc_gather_init();
  1519  00FC  2135               	fcall	_adc_gather_init
  1520  00FD                     l1468:	
  1521                           ;main.c: 182: do {
  1522                           
  1523                           
  1524                           ;main.c: 183: if(PIR1bits.TMR2IF) {
  1525  00FD  0020               	movlb	0	; select bank0
  1526  00FE  1C91               	btfss	17,1	;volatile
  1527  00FF  290B               	goto	l112
  1528                           
  1529                           ;main.c: 184: PIR1bits.TMR2IF = 0;
  1530  0100  1091               	bcf	17,1	;volatile
  1531                           
  1532                           ;main.c: 185: current_value += 10;
  1533  0101  300A               	movlw	10
  1534  0102  07F5               	addwf	_current_value,f	;volatile
  1535  0103  3000               	movlw	0
  1536  0104  3DF6               	addwfc	_current_value+1,f	;volatile
  1537                           
  1538                           ;main.c: 186: pwm_dutyCycle_set(current_value);
  1539  0105  0876               	movf	_current_value+1,w	;volatile
  1540  0106  00A1               	movwf	pwm_dutyCycle_set@duty+1
  1541  0107  0875               	movf	_current_value,w	;volatile
  1542  0108  00A0               	movwf	pwm_dutyCycle_set@duty
  1543  0109  2305               	fcall	_pwm_dutyCycle_set
  1544                           
  1545                           ;main.c: 187: pwm_loadBuffer_set();
  1546  010A  232D               	fcall	_pwm_loadBuffer_set
  1547  010B                     l112:	
  1548  010B  0064               	clrwdt	;# 
  1549                           
  1550                           ;main.c: 190: }while(current_value < target_value);
  1551  010C  0020               	movlb	0	; select bank0
  1552  010D  085C               	movf	_target_value+1,w	;volatile
  1553  010E  0276               	subwf	_current_value+1,w	;volatile
  1554  010F  1D03               	skipz
  1555  0110  2913               	goto	u1255
  1556  0111  085B               	movf	_target_value,w	;volatile
  1557  0112  0275               	subwf	_current_value,w	;volatile
  1558  0113                     u1255:	
  1559  0113  1C03               	skipc
  1560  0114  28FD               	goto	l1468
  1561                           
  1562                           ;main.c: 192: for(uint8_t i = 0; i < 10; i++) {
  1563  0115  01C4               	clrf	main@i
  1564  0116  300A               	movlw	10
  1565  0117  0244               	subwf	main@i,w
  1566  0118  1803               	btfsc	3,0
  1567  0119  292A               	goto	l115
  1568  011A                     l1484:	
  1569                           
  1570                           ;main.c: 193: adc_filter_buf[i] = adc_gather_value;
  1571  011A  3544               	lslf	main@i,w
  1572  011B  3E45               	addlw	(low (_adc_filter_buf| 0))& (0+255)
  1573  011C  0086               	movwf	6
  1574  011D  0187               	clrf	7
  1575  011E  085D               	movf	_adc_gather_value,w	;volatile
  1576  011F  3FC0               	movwi [0]fsr1
  1577  0120  085E               	movf	_adc_gather_value+1,w	;volatile
  1578  0121  3FC1               	movwi [1]fsr1
  1579  0122  3001               	movlw	1
  1580  0123  00C2               	movwf	??_main
  1581  0124  0842               	movf	??_main,w
  1582  0125  07C4               	addwf	main@i,f
  1583  0126  300A               	movlw	10
  1584  0127  0244               	subwf	main@i,w
  1585  0128  1C03               	skipc
  1586  0129  291A               	goto	l1484
  1587  012A                     l115:	
  1588                           
  1589                           ;main.c: 194: }
  1590                           ;main.c: 195: PIR1bits.TMR2IF = 0;
  1591  012A  1091               	bcf	17,1	;volatile
  1592                           
  1593                           ;main.c: 197: set_interrupt_handle();
  1594  012B  230E               	fcall	_set_interrupt_handle
  1595                           
  1596                           ;main.c: 199: INTCONbits.GIE = 1;
  1597  012C  178B               	bsf	11,7	;volatile
  1598                           
  1599                           ;main.c: 201: INTCONbits.PEIE = 1;
  1600  012D  170B               	bsf	11,6	;volatile
  1601                           
  1602                           ;main.c: 203: tmr2_isr_enable();
  1603  012E  232A               	fcall	_tmr2_isr_enable
  1604  012F                     l116:	
  1605                           ;main.c: 205: while(1) {
  1606                           
  1607  012F  0064               	clrwdt	;# 
  1608                           
  1609                           ;main.c: 209: adc_gather();
  1610  0130  202B               	fcall	_adc_gather
  1611                           
  1612                           ;main.c: 211: adc_filter();
  1613  0131  217B               	fcall	_adc_filter
  1614                           
  1615                           ;main.c: 213: led_update_state();
  1616  0132  21F2               	fcall	_led_update_state
  1617                           
  1618                           ;main.c: 215: pwm_update_duty();
  1619  0133  2256               	fcall	_pwm_update_duty
  1620  0134  292F               	goto	l116
  1621  0135                     __end_of_main:	
  1622                           
  1623                           	psect	text1
  1624  0327                     __ptext1:	
  1625 ;; *************** function _tmr2_start *****************
  1626 ;; Defined at:
  1627 ;;		line 13 in file "src/drv_trm2.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;		None
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      void 
  1634 ;; Registers used:
  1635 ;;		None
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1641 ;;      Params:         0       0       0       0
  1642 ;;      Locals:         0       0       0       0
  1643 ;;      Temps:          0       0       0       0
  1644 ;;      Totals:         0       0       0       0
  1645 ;;Total ram usage:        0 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:    4
  1648 ;; This function calls:
  1649 ;;		Nothing
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function _tmr2_start
  1657  0327                     _tmr2_start:	
  1658                           
  1659                           ;drv_trm2.c: 14: T2CONbits.TMR2ON = 1;
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _tmr2_start: []
  1663  0327  0020               	movlb	0	; select bank0
  1664  0328  151C               	bsf	28,2	;volatile
  1665  0329  0008               	return
  1666  032A                     __end_of_tmr2_start:	
  1667                           
  1668                           	psect	text2
  1669  032A                     __ptext2:	
  1670 ;; *************** function _tmr2_isr_enable *****************
  1671 ;; Defined at:
  1672 ;;		line 21 in file "src/drv_trm2.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		None
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1686 ;;      Params:         0       0       0       0
  1687 ;;      Locals:         0       0       0       0
  1688 ;;      Temps:          0       0       0       0
  1689 ;;      Totals:         0       0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    4
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _tmr2_isr_enable
  1702  032A                     _tmr2_isr_enable:	
  1703                           
  1704                           ;drv_trm2.c: 22: PIE1bits.TMR2IE = 1;
  1705                           
  1706                           ;incstack = 0
  1707                           ; Regs used in _tmr2_isr_enable: []
  1708  032A  0021               	movlb	1	; select bank1
  1709  032B  1491               	bsf	17,1	;volatile
  1710  032C  0008               	return
  1711  032D                     __end_of_tmr2_isr_enable:	
  1712                           
  1713                           	psect	text3
  1714  02FB                     __ptext3:	
  1715 ;; *************** function _tmr2_init *****************
  1716 ;; Defined at:
  1717 ;;		line 5 in file "src/drv_trm2.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1731 ;;      Params:         0       0       0       0
  1732 ;;      Locals:         0       0       0       0
  1733 ;;      Temps:          0       0       0       0
  1734 ;;      Totals:         0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    4
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _tmr2_init
  1747  02FB                     _tmr2_init:	
  1748                           
  1749                           ;drv_trm2.c: 7: T2CONbits.T2OUTPS = 0x0F;
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _tmr2_init: [wreg+status,2+status,0]
  1753  02FB  3078               	movlw	120
  1754  02FC  0020               	movlb	0	; select bank0
  1755  02FD  049C               	iorwf	28,f	;volatile
  1756                           
  1757                           ;drv_trm2.c: 8: T2CONbits.T2CKPS = 0x01;
  1758  02FE  081C               	movf	28,w	;volatile
  1759  02FF  39FC               	andlw	-4
  1760  0300  3801               	iorlw	1
  1761  0301  009C               	movwf	28	;volatile
  1762                           
  1763                           ;drv_trm2.c: 10: PR2 = 249;
  1764  0302  30F9               	movlw	249
  1765  0303  009B               	movwf	27	;volatile
  1766  0304  0008               	return
  1767  0305                     __end_of_tmr2_init:	
  1768                           
  1769                           	psect	text4
  1770  030E                     __ptext4:	
  1771 ;; *************** function _set_interrupt_handle *****************
  1772 ;; Defined at:
  1773 ;;		line 162 in file "src/main.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1787 ;;      Params:         0       0       0       0
  1788 ;;      Locals:         0       0       0       0
  1789 ;;      Temps:          0       0       0       0
  1790 ;;      Totals:         0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    5
  1794 ;; This function calls:
  1795 ;;		_tmr2_set_handler
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _set_interrupt_handle
  1803  030E                     _set_interrupt_handle:	
  1804                           
  1805                           ;main.c: 163: tmr2_set_handler(pwm_run);
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _set_interrupt_handle: [wreg+status,2+status,0+pclath+cstack]
  1809  030E  3024               	movlw	low _pwm_run
  1810  030F  0020               	movlb	0	; select bank0
  1811  0310  00A0               	movwf	tmr2_set_handler@handler
  1812  0311  3002               	movlw	high _pwm_run
  1813  0312  00A1               	movwf	tmr2_set_handler@handler+1
  1814  0313  231B               	fcall	_tmr2_set_handler
  1815  0314  0008               	return
  1816  0315                     __end_of_set_interrupt_handle:	
  1817                           
  1818                           	psect	text5
  1819  031B                     __ptext5:	
  1820 ;; *************** function _tmr2_set_handler *****************
  1821 ;; Defined at:
  1822 ;;		line 36 in file "src/drv_trm2.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  handler         2    0[BANK0 ] PTR FTN()void 
  1825 ;;		 -> pwm_run(1), 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1837 ;;      Params:         0       2       0       0
  1838 ;;      Locals:         0       0       0       0
  1839 ;;      Temps:          0       0       0       0
  1840 ;;      Totals:         0       2       0       0
  1841 ;;Total ram usage:        2 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    4
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_set_interrupt_handle
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _tmr2_set_handler
  1853  031B                     _tmr2_set_handler:	
  1854                           
  1855                           ;drv_trm2.c: 37: tmr2_isr_handler = handler;
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _tmr2_set_handler: [wreg]
  1859  031B  0020               	movlb	0	; select bank0
  1860  031C  0821               	movf	tmr2_set_handler@handler+1,w
  1861  031D  00DA               	movwf	_tmr2_isr_handler+1
  1862  031E  0820               	movf	tmr2_set_handler@handler,w
  1863  031F  00D9               	movwf	_tmr2_isr_handler
  1864  0320  0008               	return
  1865  0321                     __end_of_tmr2_set_handler:	
  1866                           
  1867                           	psect	text6
  1868  0256                     __ptext6:	
  1869 ;; *************** function _pwm_update_duty *****************
  1870 ;; Defined at:
  1871 ;;		line 138 in file "src/main.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1885 ;;      Params:         0       0       0       0
  1886 ;;      Locals:         0       0       0       0
  1887 ;;      Temps:          0       0       0       0
  1888 ;;      Totals:         0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    5
  1892 ;; This function calls:
  1893 ;;		___wmul
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _pwm_update_duty
  1901  0256                     _pwm_update_duty:	
  1902                           
  1903                           ;main.c: 139: if(on) {
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _pwm_update_duty: [wreg+status,2+status,0+pclath+cstack]
  1907  0256  0879               	movf	_on,w	;volatile
  1908  0257  1903               	btfsc	3,2
  1909  0258  2A78               	goto	l1406
  1910                           
  1911                           ;main.c: 140: if(adc_filter_value > 1010) {
  1912  0259  3003               	movlw	3
  1913  025A  0278               	subwf	_adc_filter_value+1,w	;volatile
  1914  025B  30F3               	movlw	243
  1915  025C  1903               	skipnz
  1916  025D  0277               	subwf	_adc_filter_value,w	;volatile
  1917  025E  1C03               	skipc
  1918  025F  2A66               	goto	l1404
  1919                           
  1920                           ;main.c: 141: target_value = 10000;
  1921  0260  3010               	movlw	16
  1922  0261  0020               	movlb	0	; select bank0
  1923  0262  00DB               	movwf	_target_value	;volatile
  1924  0263  3027               	movlw	39
  1925  0264  00DC               	movwf	_target_value+1	;volatile
  1926                           
  1927                           ;main.c: 142: } else {
  1928  0265  0008               	return
  1929  0266                     l1404:	
  1930                           
  1931                           ;main.c: 143: target_value = (adc_filter_value - 10) * 10;
  1932  0266  0877               	movf	_adc_filter_value,w	;volatile
  1933  0267  3EF6               	addlw	246
  1934  0268  0020               	movlb	0	; select bank0
  1935  0269  00A0               	movwf	___wmul@multiplier
  1936  026A  30FF               	movlw	255
  1937  026B  3D78               	addwfc	_adc_filter_value+1,w	;volatile
  1938  026C  00A1               	movwf	___wmul@multiplier+1
  1939  026D  300A               	movlw	10
  1940  026E  00A2               	movwf	___wmul@multiplicand
  1941  026F  3000               	movlw	0
  1942  0270  00A3               	movwf	___wmul@multiplicand+1
  1943  0271  2298               	fcall	___wmul
  1944  0272  0020               	movlb	0	; select bank0
  1945  0273  0821               	movf	?___wmul+1,w
  1946  0274  00DC               	movwf	_target_value+1	;volatile
  1947  0275  0820               	movf	?___wmul,w
  1948  0276  00DB               	movwf	_target_value	;volatile
  1949                           
  1950                           ;main.c: 144: }
  1951                           ;main.c: 145: } else {
  1952  0277  0008               	return
  1953  0278                     l1406:	
  1954                           
  1955                           ;main.c: 146: target_value = 0;
  1956  0278  0020               	movlb	0	; select bank0
  1957  0279  01DB               	clrf	_target_value	;volatile
  1958  027A  01DC               	clrf	_target_value+1	;volatile
  1959  027B  0008               	return
  1960  027C                     __end_of_pwm_update_duty:	
  1961                           
  1962                           	psect	text7
  1963  032D                     __ptext7:	
  1964 ;; *************** function _pwm_loadBuffer_set *****************
  1965 ;; Defined at:
  1966 ;;		line 39 in file "src/drv_pwm.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		None
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1980 ;;      Params:         0       0       0       0
  1981 ;;      Locals:         0       0       0       0
  1982 ;;      Temps:          0       0       0       0
  1983 ;;      Totals:         0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    4
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           
  1995                           ;psect for function _pwm_loadBuffer_set
  1996  032D                     _pwm_loadBuffer_set:	
  1997                           
  1998                           ;drv_pwm.c: 40: PWM3LDCONbits.LDA = 1;
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _pwm_loadBuffer_set: []
  2002  032D  003B               	movlb	27	; select bank27
  2003  032E  17BF               	bsf	63,7	;volatile
  2004  032F  0008               	return
  2005  0330                     __end_of_pwm_loadBuffer_set:	
  2006                           
  2007                           	psect	text8
  2008  027C                     __ptext8:	
  2009 ;; *************** function _pwm_init *****************
  2010 ;; Defined at:
  2011 ;;		line 3 in file "src/drv_pwm.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2025 ;;      Params:         0       0       0       0
  2026 ;;      Locals:         0       0       0       0
  2027 ;;      Temps:          0       0       0       0
  2028 ;;      Totals:         0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    4
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           
  2040                           ;psect for function _pwm_init
  2041  027C                     _pwm_init:	
  2042                           
  2043                           ;drv_pwm.c: 5: PWM3CONbits.OE = 1;
  2044                           
  2045                           ;incstack = 0
  2046                           ; Regs used in _pwm_init: [wreg+status,2+status,0]
  2047  027C  003B               	movlb	27	; select bank27
  2048  027D  173B               	bsf	59,6	;volatile
  2049                           
  2050                           ;drv_pwm.c: 7: PWM3CONbits.POL = 0;
  2051  027E  123B               	bcf	59,4	;volatile
  2052                           
  2053                           ;drv_pwm.c: 9: PWM3CONbits.MODE = 0x00;
  2054  027F  30F3               	movlw	-13
  2055  0280  05BB               	andwf	59,f	;volatile
  2056                           
  2057                           ;drv_pwm.c: 11: PWM3INTE = 0x00;
  2058  0281  01BC               	clrf	60	;volatile
  2059                           
  2060                           ;drv_pwm.c: 13: PWM3INTF = 0x00;
  2061  0282  01BD               	clrf	61	;volatile
  2062                           
  2063                           ;drv_pwm.c: 15: PWM3CLKCONbits.PS = 0x00;
  2064  0283  308F               	movlw	-113
  2065  0284  05BE               	andwf	62,f	;volatile
  2066                           
  2067                           ;drv_pwm.c: 16: PWM3CLKCONbits.CS = 0x00;
  2068  0285  30FC               	movlw	-4
  2069  0286  05BE               	andwf	62,f	;volatile
  2070                           
  2071                           ;drv_pwm.c: 18: PWM3LDCONbits.LDA = 1;
  2072  0287  17BF               	bsf	63,7	;volatile
  2073                           
  2074                           ;drv_pwm.c: 20: PWM3OFCONbits.OFM = 0x00;
  2075  0288  309F               	movlw	-97
  2076  0289  05C0               	andwf	64,f	;volatile
  2077                           
  2078                           ;drv_pwm.c: 22: PWM3PH = 0x00;
  2079  028A  01B1               	clrf	49	;volatile
  2080  028B  01B2               	clrf	50	;volatile
  2081                           
  2082                           ;drv_pwm.c: 24: PWM3DC = 0x00;
  2083  028C  01B3               	clrf	51	;volatile
  2084  028D  01B4               	clrf	52	;volatile
  2085                           
  2086                           ;drv_pwm.c: 26: PWM3PR = 0x270F;
  2087  028E  3027               	movlw	39
  2088  028F  00B6               	movwf	54	;volatile
  2089  0290  300F               	movlw	15
  2090  0291  00B5               	movwf	53	;volatile
  2091                           
  2092                           ;drv_pwm.c: 28: PWM3OF = 0x00;
  2093  0292  01B7               	clrf	55	;volatile
  2094  0293  01B8               	clrf	56	;volatile
  2095                           
  2096                           ;drv_pwm.c: 30: PWM3TMR = 0x00;
  2097  0294  01B9               	clrf	57	;volatile
  2098  0295  01BA               	clrf	58	;volatile
  2099                           
  2100                           ;drv_pwm.c: 32: PWM3CONbits.EN = 1;
  2101  0296  17BB               	bsf	59,7	;volatile
  2102  0297  0008               	return
  2103  0298                     __end_of_pwm_init:	
  2104                           
  2105                           	psect	text9
  2106  0305                     __ptext9:	
  2107 ;; *************** function _pwm_dutyCycle_set *****************
  2108 ;; Defined at:
  2109 ;;		line 35 in file "src/drv_pwm.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  duty            2    0[BANK0 ] unsigned int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       2       0       0
  2124 ;;      Locals:         0       0       0       0
  2125 ;;      Temps:          0       0       0       0
  2126 ;;      Totals:         0       2       0       0
  2127 ;;Total ram usage:        2 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    4
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _pwm_dutyCycle_set
  2139  0305                     _pwm_dutyCycle_set:	
  2140                           
  2141                           ;drv_pwm.c: 36: PWM3DC = duty;
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _pwm_dutyCycle_set: [wreg]
  2145  0305  0020               	movlb	0	; select bank0
  2146  0306  0821               	movf	pwm_dutyCycle_set@duty+1,w
  2147  0307  003B               	movlb	27	; select bank27
  2148  0308  00B4               	movwf	52	;volatile
  2149  0309  0020               	movlb	0	; select bank0
  2150  030A  0820               	movf	pwm_dutyCycle_set@duty,w
  2151  030B  003B               	movlb	27	; select bank27
  2152  030C  00B3               	movwf	51	;volatile
  2153  030D  0008               	return
  2154  030E                     __end_of_pwm_dutyCycle_set:	
  2155                           
  2156                           	psect	text10
  2157  02F0                     __ptext10:	
  2158 ;; *************** function _osc_init *****************
  2159 ;; Defined at:
  2160 ;;		line 3 in file "src/drv_osc.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2174 ;;      Params:         0       0       0       0
  2175 ;;      Locals:         0       0       0       0
  2176 ;;      Temps:          0       0       0       0
  2177 ;;      Totals:         0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    4
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function _osc_init
  2190  02F0                     _osc_init:	
  2191                           
  2192                           ;drv_osc.c: 5: OSCCONbits.SPLLEN = 0x00;
  2193                           
  2194                           ;incstack = 0
  2195                           ; Regs used in _osc_init: [wreg+status,2+status,0]
  2196  02F0  0021               	movlb	1	; select bank1
  2197  02F1  1399               	bcf	25,7	;volatile
  2198                           
  2199                           ;drv_osc.c: 7: OSCCONbits.IRCF = 0x0F;
  2200  02F2  3078               	movlw	120
  2201  02F3  0499               	iorwf	25,f	;volatile
  2202                           
  2203                           ;drv_osc.c: 9: OSCCONbits.SCS = 0x00;
  2204  02F4  30FC               	movlw	-4
  2205  02F5  0599               	andwf	25,f	;volatile
  2206                           
  2207                           ;drv_osc.c: 11: OSCTUNEbits.TUN = 0x00;
  2208  02F6  30C0               	movlw	-64
  2209  02F7  0598               	andwf	24,f	;volatile
  2210  02F8                     l134:	
  2211                           ;drv_osc.c: 13: while(!OSCSTATbits.HFIOFR);
  2212                           
  2213  02F8  1A1A               	btfsc	26,4	;volatile
  2214  02F9  0008               	return
  2215  02FA  2AF8               	goto	l134
  2216  02FB                     __end_of_osc_init:	
  2217                           
  2218                           	psect	text11
  2219  01F2                     __ptext11:	
  2220 ;; *************** function _led_update_state *****************
  2221 ;; Defined at:
  2222 ;;		line 112 in file "src/main.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg, status,2, status,0
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2236 ;;      Params:         0       0       0       0
  2237 ;;      Locals:         0       0       0       0
  2238 ;;      Temps:          0       1       0       0
  2239 ;;      Totals:         0       1       0       0
  2240 ;;Total ram usage:        1 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    4
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _led_update_state
  2252  01F2                     _led_update_state:	
  2253                           
  2254                           ;main.c: 113: static uint8_t cnt_on = 0;
  2255                           ;main.c: 114: static uint8_t cnt_off = 0;
  2256                           ;main.c: 115: if(on) {
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _led_update_state: [wreg+status,2+status,0]
  2260  01F2  0879               	movf	_on,w	;volatile
  2261  01F3  1903               	btfsc	3,2
  2262  01F4  2A0B               	goto	l1386
  2263                           
  2264                           ;main.c: 116: if(adc_filter_value < 20) {
  2265  01F5  3000               	movlw	0
  2266  01F6  0278               	subwf	_adc_filter_value+1,w	;volatile
  2267  01F7  3014               	movlw	20
  2268  01F8  1903               	skipnz
  2269  01F9  0277               	subwf	_adc_filter_value,w	;volatile
  2270  01FA  1803               	skipnc
  2271  01FB  2A08               	goto	l1384
  2272                           
  2273                           ;main.c: 117: cnt_off++;
  2274  01FC  3001               	movlw	1
  2275  01FD  0020               	movlb	0	; select bank0
  2276  01FE  00A0               	movwf	??_led_update_state
  2277  01FF  0820               	movf	??_led_update_state,w
  2278  0200  07DF               	addwf	led_update_state@cnt_off,f
  2279                           
  2280                           ;main.c: 118: if(cnt_off >= 30) {
  2281  0201  301E               	movlw	30
  2282  0202  025F               	subwf	led_update_state@cnt_off,w
  2283  0203  1C03               	skipc
  2284  0204  0008               	return
  2285                           
  2286                           ;main.c: 119: cnt_off = 0;
  2287  0205  01DF               	clrf	led_update_state@cnt_off
  2288                           
  2289                           ;main.c: 120: on = 0;
  2290  0206  01F9               	clrf	_on	;volatile
  2291                           
  2292                           ;main.c: 121: }
  2293                           ;main.c: 122: } else {
  2294  0207  0008               	return
  2295  0208                     l1384:	
  2296                           
  2297                           ;main.c: 123: cnt_off = 0;
  2298  0208  0020               	movlb	0	; select bank0
  2299  0209  01DF               	clrf	led_update_state@cnt_off
  2300                           
  2301                           ;main.c: 124: }
  2302                           ;main.c: 125: } else {
  2303  020A  0008               	return
  2304  020B                     l1386:	
  2305                           
  2306                           ;main.c: 126: if(adc_filter_value > 20) {
  2307  020B  3000               	movlw	0
  2308  020C  0278               	subwf	_adc_filter_value+1,w	;volatile
  2309  020D  3015               	movlw	21
  2310  020E  1903               	skipnz
  2311  020F  0277               	subwf	_adc_filter_value,w	;volatile
  2312  0210  1C03               	skipc
  2313  0211  2A21               	goto	l1396
  2314                           
  2315                           ;main.c: 127: cnt_on++;
  2316  0212  3001               	movlw	1
  2317  0213  0020               	movlb	0	; select bank0
  2318  0214  00A0               	movwf	??_led_update_state
  2319  0215  0820               	movf	??_led_update_state,w
  2320  0216  07E0               	addwf	led_update_state@cnt_on,f
  2321                           
  2322                           ;main.c: 128: if(cnt_on >= 30) {
  2323  0217  301E               	movlw	30
  2324  0218  0260               	subwf	led_update_state@cnt_on,w
  2325  0219  1C03               	skipc
  2326  021A  0008               	return
  2327                           
  2328                           ;main.c: 129: cnt_on = 0;
  2329  021B  01E0               	clrf	led_update_state@cnt_on
  2330                           
  2331                           ;main.c: 130: on = 1;
  2332  021C  3001               	movlw	1
  2333  021D  00A0               	movwf	??_led_update_state
  2334  021E  0820               	movf	??_led_update_state,w
  2335  021F  00F9               	movwf	_on	;volatile
  2336                           
  2337                           ;main.c: 131: }
  2338                           ;main.c: 132: } else {
  2339  0220  0008               	return
  2340  0221                     l1396:	
  2341                           
  2342                           ;main.c: 133: cnt_on = 0;
  2343  0221  0020               	movlb	0	; select bank0
  2344  0222  01E0               	clrf	led_update_state@cnt_on
  2345  0223  0008               	return
  2346  0224                     __end_of_led_update_state:	
  2347                           
  2348                           	psect	text12
  2349  02D7                     __ptext12:	
  2350 ;; *************** function _gpio_init *****************
  2351 ;; Defined at:
  2352 ;;		line 3 in file "src/drv_gpio.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		None
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2366 ;;      Params:         0       0       0       0
  2367 ;;      Locals:         0       0       0       0
  2368 ;;      Temps:          0       0       0       0
  2369 ;;      Totals:         0       0       0       0
  2370 ;;Total ram usage:        0 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    4
  2373 ;; This function calls:
  2374 ;;		Nothing
  2375 ;; This function is called by:
  2376 ;;		_main
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           
  2381                           ;psect for function _gpio_init
  2382  02D7                     _gpio_init:	
  2383                           
  2384                           ;drv_gpio.c: 6: TRISAbits.TRISA4 = 1;
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in _gpio_init: []
  2388  02D7  0021               	movlb	1	; select bank1
  2389  02D8  160C               	bsf	12,4	;volatile
  2390                           
  2391                           ;drv_gpio.c: 7: ANSELAbits.ANSA4 = 1;
  2392  02D9  0023               	movlb	3	; select bank3
  2393  02DA  160C               	bsf	12,4	;volatile
  2394                           
  2395                           ;drv_gpio.c: 8: LATAbits.LATA4 = 0;
  2396  02DB  0022               	movlb	2	; select bank2
  2397  02DC  120C               	bcf	12,4	;volatile
  2398                           
  2399                           ;drv_gpio.c: 10: ANSELAbits.ANSA2 = 0;
  2400  02DD  0023               	movlb	3	; select bank3
  2401  02DE  110C               	bcf	12,2	;volatile
  2402                           
  2403                           ;drv_gpio.c: 11: LATAbits.LATA2 = 0;
  2404  02DF  0022               	movlb	2	; select bank2
  2405  02E0  110C               	bcf	12,2	;volatile
  2406                           
  2407                           ;drv_gpio.c: 12: TRISAbits.TRISA2 = 0;
  2408  02E1  0021               	movlb	1	; select bank1
  2409  02E2  110C               	bcf	12,2	;volatile
  2410  02E3  0008               	return
  2411  02E4                     __end_of_gpio_init:	
  2412                           
  2413                           	psect	text13
  2414  02C9                     __ptext13:	
  2415 ;; *************** function _adc_init *****************
  2416 ;; Defined at:
  2417 ;;		line 3 in file "src/drv_adc.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2431 ;;      Params:         0       0       0       0
  2432 ;;      Locals:         0       0       0       0
  2433 ;;      Temps:          0       0       0       0
  2434 ;;      Totals:         0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:    4
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _adc_init
  2447  02C9                     _adc_init:	
  2448                           
  2449                           ;drv_adc.c: 5: ADCON0bits.CHS = 0x03;
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  2453  02C9  0021               	movlb	1	; select bank1
  2454  02CA  081D               	movf	29,w	;volatile
  2455  02CB  3983               	andlw	-125
  2456  02CC  380C               	iorlw	12
  2457  02CD  009D               	movwf	29	;volatile
  2458                           
  2459                           ;drv_adc.c: 7: ADCON0bits.ADON = 1;
  2460  02CE  141D               	bsf	29,0	;volatile
  2461                           
  2462                           ;drv_adc.c: 9: ADCON1bits.ADFM = 1;
  2463  02CF  179E               	bsf	30,7	;volatile
  2464                           
  2465                           ;drv_adc.c: 11: ADCON1bits.ADCS = 0x02;
  2466  02D0  081E               	movf	30,w	;volatile
  2467  02D1  398F               	andlw	-113
  2468  02D2  3820               	iorlw	32
  2469  02D3  009E               	movwf	30	;volatile
  2470                           
  2471                           ;drv_adc.c: 13: ADCON1bits.ADPREF = 0x00;
  2472  02D4  30FC               	movlw	-4
  2473  02D5  059E               	andwf	30,f	;volatile
  2474  02D6  0008               	return
  2475  02D7                     __end_of_adc_init:	
  2476                           
  2477                           	psect	text14
  2478  0135                     __ptext14:	
  2479 ;; *************** function _adc_gather_init *****************
  2480 ;; Defined at:
  2481 ;;		line 62 in file "src/main.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  i               1   11[BANK0 ] unsigned char 
  2486 ;;  sum             2    9[BANK0 ] unsigned int 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0, pclath, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2496 ;;      Params:         0       0       0       0
  2497 ;;      Locals:         0       3       0       0
  2498 ;;      Temps:          0       1       0       0
  2499 ;;      Totals:         0       4       0       0
  2500 ;;Total ram usage:        4 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    5
  2503 ;; This function calls:
  2504 ;;		___lwdiv
  2505 ;;		___wmul
  2506 ;;		_getADC
  2507 ;; This function is called by:
  2508 ;;		_main
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _adc_gather_init
  2514  0135                     _adc_gather_init:	
  2515                           
  2516                           ;main.c: 63: uint16_t sum = 0;
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _adc_gather_init: [wreg+status,2+status,0+pclath+cstack]
  2520  0135  0020               	movlb	0	; select bank0
  2521  0136  01A9               	clrf	adc_gather_init@sum
  2522  0137  01AA               	clrf	adc_gather_init@sum+1
  2523                           
  2524                           ;main.c: 64: for(uint8_t i = 0; i < 10; i++) {
  2525  0138  01AB               	clrf	adc_gather_init@i
  2526  0139  300A               	movlw	10
  2527  013A  022B               	subwf	adc_gather_init@i,w
  2528  013B  1803               	btfsc	3,0
  2529  013C  2950               	goto	l1288
  2530  013D                     l1280:	
  2531                           
  2532                           ;main.c: 65: sum += getADC();
  2533  013D  22B4               	fcall	_getADC
  2534  013E  0020               	movlb	0	; select bank0
  2535  013F  0820               	movf	?_getADC,w
  2536  0140  07A9               	addwf	adc_gather_init@sum,f
  2537  0141  0821               	movf	?_getADC+1,w
  2538  0142  3DAA               	addwfc	adc_gather_init@sum+1,f
  2539                           
  2540                           ;main.c: 66: _delay((unsigned long)((20)*(16000000/4000000.0)));
  2541  0143  301A               	movlw	26
  2542  0144                     u1297:	
  2543  0144  0B89               	decfsz	9,f
  2544  0145  2944               	goto	u1297
  2545  0146  3200               	nop2
  2546  0147  3001               	movlw	1
  2547  0148  0020               	movlb	0	; select bank0
  2548  0149  00A8               	movwf	??_adc_gather_init
  2549  014A  0828               	movf	??_adc_gather_init,w
  2550  014B  07AB               	addwf	adc_gather_init@i,f
  2551  014C  300A               	movlw	10
  2552  014D  022B               	subwf	adc_gather_init@i,w
  2553  014E  1C03               	skipc
  2554  014F  293D               	goto	l1280
  2555  0150                     l1288:	
  2556                           
  2557                           ;main.c: 67: }
  2558                           ;main.c: 68: adc_gather_value = sum / 10;
  2559  0150  300A               	movlw	10
  2560  0151  00A0               	movwf	___lwdiv@divisor
  2561  0152  3000               	movlw	0
  2562  0153  00A1               	movwf	___lwdiv@divisor+1
  2563  0154  082A               	movf	adc_gather_init@sum+1,w
  2564  0155  00A3               	movwf	___lwdiv@dividend+1
  2565  0156  0829               	movf	adc_gather_init@sum,w
  2566  0157  00A2               	movwf	___lwdiv@dividend
  2567  0158  21BD               	fcall	___lwdiv
  2568  0159  0020               	movlb	0	; select bank0
  2569  015A  0821               	movf	?___lwdiv+1,w
  2570  015B  00DE               	movwf	_adc_gather_value+1	;volatile
  2571  015C  0820               	movf	?___lwdiv,w
  2572  015D  00DD               	movwf	_adc_gather_value	;volatile
  2573                           
  2574                           ;main.c: 69: if(adc_gather_value > 1010) {
  2575  015E  3003               	movlw	3
  2576  015F  025E               	subwf	_adc_gather_value+1,w	;volatile
  2577  0160  30F3               	movlw	243
  2578  0161  1903               	skipnz
  2579  0162  025D               	subwf	_adc_gather_value,w	;volatile
  2580  0163  1C03               	skipc
  2581  0164  296A               	goto	l1294
  2582                           
  2583                           ;main.c: 70: target_value = 10000;
  2584  0165  3010               	movlw	16
  2585  0166  00DB               	movwf	_target_value	;volatile
  2586  0167  3027               	movlw	39
  2587  0168  00DC               	movwf	_target_value+1	;volatile
  2588                           
  2589                           ;main.c: 71: } else {
  2590  0169  0008               	return
  2591  016A                     l1294:	
  2592                           
  2593                           ;main.c: 72: target_value = (adc_gather_value - 10) * 10;
  2594  016A  085D               	movf	_adc_gather_value,w	;volatile
  2595  016B  3EF6               	addlw	246
  2596  016C  00A0               	movwf	___wmul@multiplier
  2597  016D  30FF               	movlw	255
  2598  016E  3D5E               	addwfc	_adc_gather_value+1,w	;volatile
  2599  016F  00A1               	movwf	___wmul@multiplier+1
  2600  0170  300A               	movlw	10
  2601  0171  00A2               	movwf	___wmul@multiplicand
  2602  0172  3000               	movlw	0
  2603  0173  00A3               	movwf	___wmul@multiplicand+1
  2604  0174  2298               	fcall	___wmul
  2605  0175  0020               	movlb	0	; select bank0
  2606  0176  0821               	movf	?___wmul+1,w
  2607  0177  00DC               	movwf	_target_value+1	;volatile
  2608  0178  0820               	movf	?___wmul,w
  2609  0179  00DB               	movwf	_target_value	;volatile
  2610  017A  0008               	return
  2611  017B                     __end_of_adc_gather_init:	
  2612                           
  2613                           	psect	text15
  2614  0298                     __ptext15:	
  2615 ;; *************** function ___wmul *****************
  2616 ;; Defined at:
  2617 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2620 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  product         2    4[BANK0 ] unsigned int 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  2    0[BANK0 ] unsigned int 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2632 ;;      Params:         0       4       0       0
  2633 ;;      Locals:         0       2       0       0
  2634 ;;      Temps:          0       0       0       0
  2635 ;;      Totals:         0       6       0       0
  2636 ;;Total ram usage:        6 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    4
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_adc_gather_init
  2643 ;;		_pwm_update_duty
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function ___wmul
  2649  0298                     ___wmul:	
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2653  0298  0020               	movlb	0	; select bank0
  2654  0299  01A4               	clrf	___wmul@product
  2655  029A  01A5               	clrf	___wmul@product+1
  2656  029B                     l1236:	
  2657  029B  1C20               	btfss	___wmul@multiplier,0
  2658  029C  2AA1               	goto	l230
  2659  029D  0822               	movf	___wmul@multiplicand,w
  2660  029E  07A4               	addwf	___wmul@product,f
  2661  029F  0823               	movf	___wmul@multiplicand+1,w
  2662  02A0  3DA5               	addwfc	___wmul@product+1,f
  2663  02A1                     l230:	
  2664  02A1  3001               	movlw	1
  2665  02A2                     u915:	
  2666  02A2  35A2               	lslf	___wmul@multiplicand,f
  2667  02A3  0DA3               	rlf	___wmul@multiplicand+1,f
  2668  02A4  0B89               	decfsz	9,f
  2669  02A5  2AA2               	goto	u915
  2670  02A6  3001               	movlw	1
  2671  02A7                     u925:	
  2672  02A7  36A1               	lsrf	___wmul@multiplier+1,f
  2673  02A8  0CA0               	rrf	___wmul@multiplier,f
  2674  02A9  0B89               	decfsz	9,f
  2675  02AA  2AA7               	goto	u925
  2676  02AB  0820               	movf	___wmul@multiplier,w
  2677  02AC  0421               	iorwf	___wmul@multiplier+1,w
  2678  02AD  1D03               	btfss	3,2
  2679  02AE  2A9B               	goto	l1236
  2680  02AF  0825               	movf	___wmul@product+1,w
  2681  02B0  00A1               	movwf	?___wmul+1
  2682  02B1  0824               	movf	___wmul@product,w
  2683  02B2  00A0               	movwf	?___wmul
  2684  02B3  0008               	return
  2685  02B4                     __end_of___wmul:	
  2686                           
  2687                           	psect	text16
  2688  002B                     __ptext16:	
  2689 ;; *************** function _adc_gather *****************
  2690 ;; Defined at:
  2691 ;;		line 76 in file "src/main.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  value_buf      20    8[BANK0 ] unsigned int [10]
  2696 ;;  sum             2   30[BANK0 ] unsigned int 
  2697 ;;  temp            2   28[BANK0 ] unsigned int 
  2698 ;;  i               1   33[BANK0 ] unsigned char 
  2699 ;;  j               1   32[BANK0 ] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;                  1    wreg      void 
  2702 ;; Registers used:
  2703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2709 ;;      Params:         0       0       0       0
  2710 ;;      Locals:         0      26       0       0
  2711 ;;      Temps:          0       4       0       0
  2712 ;;      Totals:         0      30       0       0
  2713 ;;Total ram usage:       30 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    5
  2716 ;; This function calls:
  2717 ;;		_getADC
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _adc_gather
  2725  002B                     _adc_gather:	
  2726                           
  2727                           ;main.c: 77: uint8_t i,j;
  2728                           ;main.c: 78: uint16_t temp,sum = 0;
  2729                           
  2730                           ;incstack = 0
  2731                           ; Regs used in _adc_gather: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2732  002B  0020               	movlb	0	; select bank0
  2733  002C  01BE               	clrf	adc_gather@sum
  2734  002D  01BF               	clrf	adc_gather@sum+1
  2735                           
  2736                           ;main.c: 79: uint16_t value_buf[10] = {0};
  2737  002E  30A0               	movlw	low adc_gather@F3555
  2738  002F  0086               	movwf	6
  2739  0030  3000               	movlw	high adc_gather@F3555
  2740  0031  0087               	movwf	7
  2741  0032  3028               	movlw	low adc_gather@value_buf
  2742  0033  0084               	movwf	4
  2743  0034  3000               	movlw	high adc_gather@value_buf
  2744  0035  0085               	movwf	5
  2745  0036  3014               	movlw	20
  2746  0037  00A4               	movwf	??_adc_gather
  2747  0038                     u1040:	
  2748  0038  0016               	moviw fsr1++
  2749  0039  001A               	movwi fsr0++
  2750  003A  0BA4               	decfsz	??_adc_gather,f
  2751  003B  2838               	goto	u1040
  2752                           
  2753                           ;main.c: 80: for(i = 0; i < 10; i++) {
  2754  003C  01C1               	clrf	adc_gather@i
  2755  003D  300A               	movlw	10
  2756  003E  0241               	subwf	adc_gather@i,w
  2757  003F  1803               	btfsc	3,0
  2758  0040  285D               	goto	l1314
  2759  0041                     l1306:	
  2760                           
  2761                           ;main.c: 81: value_buf[i] = getADC();
  2762  0041  22B4               	fcall	_getADC
  2763  0042  0020               	movlb	0	; select bank0
  2764  0043  3541               	lslf	adc_gather@i,w
  2765  0044  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2766  0045  0086               	movwf	6
  2767  0046  0187               	clrf	7
  2768  0047  0820               	movf	?_getADC,w
  2769  0048  3FC0               	movwi [0]fsr1
  2770  0049  0821               	movf	?_getADC+1,w
  2771  004A  3FC1               	movwi [1]fsr1
  2772                           
  2773                           ;main.c: 82: _delay((unsigned long)((5)*(16000000/4000.0)));
  2774  004B  301A               	movlw	26
  2775  004C  0020               	movlb	0	; select bank0
  2776  004D  00A4               	movwf	??_adc_gather
  2777  004E  30F8               	movlw	248
  2778  004F                     u1307:	
  2779  004F  0B89               	decfsz	9,f
  2780  0050  284F               	goto	u1307
  2781  0051  0BA4               	decfsz	??_adc_gather,f
  2782  0052  284F               	goto	u1307
  2783  0053  0000               	nop
  2784  0054  3001               	movlw	1
  2785  0055  0020               	movlb	0	; select bank0
  2786  0056  00A4               	movwf	??_adc_gather
  2787  0057  0824               	movf	??_adc_gather,w
  2788  0058  07C1               	addwf	adc_gather@i,f
  2789  0059  300A               	movlw	10
  2790  005A  0241               	subwf	adc_gather@i,w
  2791  005B  1C03               	skipc
  2792  005C  2841               	goto	l1306
  2793  005D                     l1314:	
  2794                           
  2795                           ;main.c: 83: }
  2796                           ;main.c: 84: for(j = 0; j < 10 - 1; j++) {
  2797  005D  01C0               	clrf	adc_gather@j
  2798  005E  3009               	movlw	9
  2799  005F  0240               	subwf	adc_gather@j,w
  2800  0060  1803               	btfsc	3,0
  2801  0061  28C0               	goto	l59
  2802  0062                     l1320:	
  2803                           
  2804                           ;main.c: 85: for(i = 0;i < 10 - j; i++) {
  2805  0062  01C1               	clrf	adc_gather@i
  2806  0063                     l1332:	
  2807  0063  0840               	movf	adc_gather@j,w
  2808  0064  00A4               	movwf	??_adc_gather
  2809  0065  01A5               	clrf	??_adc_gather+1
  2810  0066  09A4               	comf	??_adc_gather,f
  2811  0067  09A5               	comf	??_adc_gather+1,f
  2812  0068  0AA4               	incf	??_adc_gather,f
  2813  0069  1903               	skipnz
  2814  006A  0AA5               	incf	??_adc_gather+1,f
  2815  006B  0824               	movf	??_adc_gather,w
  2816  006C  3E0A               	addlw	10
  2817  006D  00A6               	movwf	??_adc_gather+2
  2818  006E  3000               	movlw	0
  2819  006F  3D25               	addwfc	??_adc_gather+1,w
  2820  0070  00A7               	movwf	??_adc_gather+3
  2821  0071  0827               	movf	??_adc_gather+3,w
  2822  0072  3A80               	xorlw	128
  2823  0073  3C80               	sublw	128
  2824  0074  1D03               	skipz
  2825  0075  2878               	goto	u1095
  2826  0076  0826               	movf	??_adc_gather+2,w
  2827  0077  0241               	subwf	adc_gather@i,w
  2828  0078                     u1095:	
  2829  0078  1803               	btfsc	3,0
  2830  0079  28B7               	goto	l1334
  2831                           
  2832                           ;main.c: 86: if(value_buf[i] > value_buf[i + 1]) {
  2833  007A  0020               	movlb	0	; select bank0
  2834  007B  3541               	lslf	adc_gather@i,w
  2835  007C  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2836  007D  0086               	movwf	6
  2837  007E  0187               	clrf	7
  2838  007F  3F40               	moviw [0]fsr1
  2839  0080  00A4               	movwf	??_adc_gather
  2840  0081  3F41               	moviw [1]fsr1
  2841  0082  00A5               	movwf	??_adc_gather+1
  2842  0083  3541               	lslf	adc_gather@i,w
  2843  0084  3E02               	addlw	2
  2844  0085  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2845  0086  0086               	movwf	6
  2846  0087  0187               	clrf	7
  2847  0088  3F40               	moviw [0]fsr1
  2848  0089  00A6               	movwf	??_adc_gather+2
  2849  008A  3F41               	moviw [1]fsr1
  2850  008B  00A7               	movwf	??_adc_gather+3
  2851  008C  0825               	movf	??_adc_gather+1,w
  2852  008D  0227               	subwf	??_adc_gather+3,w
  2853  008E  1D03               	skipz
  2854  008F  2892               	goto	u1085
  2855  0090  0824               	movf	??_adc_gather,w
  2856  0091  0226               	subwf	??_adc_gather+2,w
  2857  0092                     u1085:	
  2858  0092  1803               	skipnc
  2859  0093  28B2               	goto	l1330
  2860                           
  2861                           ;main.c: 87: temp = value_buf[i];
  2862  0094  3541               	lslf	adc_gather@i,w
  2863  0095  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2864  0096  0086               	movwf	6
  2865  0097  0187               	clrf	7
  2866  0098  3F40               	moviw [0]fsr1
  2867  0099  00BC               	movwf	adc_gather@temp
  2868  009A  3F41               	moviw [1]fsr1
  2869  009B  00BD               	movwf	adc_gather@temp+1
  2870                           
  2871                           ;main.c: 88: value_buf[i] = value_buf[i + 1];
  2872  009C  3541               	lslf	adc_gather@i,w
  2873  009D  3E02               	addlw	2
  2874  009E  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2875  009F  0086               	movwf	6
  2876  00A0  0187               	clrf	7
  2877  00A1  3541               	lslf	adc_gather@i,w
  2878  00A2  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2879  00A3  0084               	movwf	4
  2880  00A4  0185               	clrf	5
  2881  00A5  3F40               	moviw [0]fsr1
  2882  00A6  3F80               	movwi [0]fsr0
  2883  00A7  3F41               	moviw [1]fsr1
  2884  00A8  3F81               	movwi [1]fsr0
  2885                           
  2886                           ;main.c: 89: value_buf[i + 1] = temp;
  2887  00A9  3541               	lslf	adc_gather@i,w
  2888  00AA  3E02               	addlw	2
  2889  00AB  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2890  00AC  0086               	movwf	6
  2891  00AD  0187               	clrf	7
  2892  00AE  083C               	movf	adc_gather@temp,w
  2893  00AF  3FC0               	movwi [0]fsr1
  2894  00B0  083D               	movf	adc_gather@temp+1,w
  2895  00B1  3FC1               	movwi [1]fsr1
  2896  00B2                     l1330:	
  2897  00B2  3001               	movlw	1
  2898  00B3  00A4               	movwf	??_adc_gather
  2899  00B4  0824               	movf	??_adc_gather,w
  2900  00B5  07C1               	addwf	adc_gather@i,f
  2901  00B6  2863               	goto	l1332
  2902  00B7                     l1334:	
  2903  00B7  3001               	movlw	1
  2904  00B8  0020               	movlb	0	; select bank0
  2905  00B9  00A4               	movwf	??_adc_gather
  2906  00BA  0824               	movf	??_adc_gather,w
  2907  00BB  07C0               	addwf	adc_gather@j,f
  2908  00BC  3009               	movlw	9
  2909  00BD  0240               	subwf	adc_gather@j,w
  2910  00BE  1C03               	skipc
  2911  00BF  2862               	goto	l1320
  2912  00C0                     l59:	
  2913                           
  2914                           ;main.c: 90: }
  2915                           ;main.c: 91: }
  2916                           ;main.c: 92: }
  2917                           ;main.c: 93: for(i = 1; i < 10 - 1; i++) {
  2918  00C0  01C1               	clrf	adc_gather@i
  2919  00C1  0AC1               	incf	adc_gather@i,f
  2920  00C2  3009               	movlw	9
  2921  00C3  0241               	subwf	adc_gather@i,w
  2922  00C4  1803               	btfsc	3,0
  2923  00C5  28DA               	goto	l1348
  2924  00C6                     l1342:	
  2925                           
  2926                           ;main.c: 94: sum += value_buf[i];
  2927  00C6  3541               	lslf	adc_gather@i,w
  2928  00C7  3E28               	addlw	(low (adc_gather@value_buf| 0))& (0+255)
  2929  00C8  0086               	movwf	6
  2930  00C9  0187               	clrf	7
  2931  00CA  3F40               	moviw [0]fsr1
  2932  00CB  00A4               	movwf	??_adc_gather
  2933  00CC  3F41               	moviw [1]fsr1
  2934  00CD  00A5               	movwf	??_adc_gather+1
  2935  00CE  0824               	movf	??_adc_gather,w
  2936  00CF  07BE               	addwf	adc_gather@sum,f
  2937  00D0  0825               	movf	??_adc_gather+1,w
  2938  00D1  3DBF               	addwfc	adc_gather@sum+1,f
  2939  00D2  3001               	movlw	1
  2940  00D3  00A4               	movwf	??_adc_gather
  2941  00D4  0824               	movf	??_adc_gather,w
  2942  00D5  07C1               	addwf	adc_gather@i,f
  2943  00D6  3009               	movlw	9
  2944  00D7  0241               	subwf	adc_gather@i,w
  2945  00D8  1C03               	skipc
  2946  00D9  28C6               	goto	l1342
  2947  00DA                     l1348:	
  2948                           
  2949                           ;main.c: 95: }
  2950                           ;main.c: 96: adc_gather_value = sum / (10 - 2);
  2951  00DA  083F               	movf	adc_gather@sum+1,w
  2952  00DB  00A5               	movwf	??_adc_gather+1
  2953  00DC  083E               	movf	adc_gather@sum,w
  2954  00DD  00A4               	movwf	??_adc_gather
  2955  00DE  36A5               	lsrf	??_adc_gather+1,f
  2956  00DF  0CA4               	rrf	??_adc_gather,f
  2957  00E0  36A5               	lsrf	??_adc_gather+1,f
  2958  00E1  0CA4               	rrf	??_adc_gather,f
  2959  00E2  36A5               	lsrf	??_adc_gather+1,f
  2960  00E3  0CA4               	rrf	??_adc_gather,f
  2961  00E4  0824               	movf	??_adc_gather,w
  2962  00E5  00DD               	movwf	_adc_gather_value	;volatile
  2963  00E6  0825               	movf	??_adc_gather+1,w
  2964  00E7  00DE               	movwf	_adc_gather_value+1	;volatile
  2965  00E8  0008               	return
  2966  00E9                     __end_of_adc_gather:	
  2967                           
  2968                           	psect	text17
  2969  02B4                     __ptext17:	
  2970 ;; *************** function _getADC *****************
  2971 ;; Defined at:
  2972 ;;		line 16 in file "src/drv_adc.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  2    0[BANK0 ] unsigned int 
  2979 ;; Registers used:
  2980 ;;		wreg
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2986 ;;      Params:         0       2       0       0
  2987 ;;      Locals:         0       0       0       0
  2988 ;;      Temps:          0       2       0       0
  2989 ;;      Totals:         0       4       0       0
  2990 ;;Total ram usage:        4 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; Hardware stack levels required when called:    4
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_adc_gather_init
  2997 ;;		_adc_gather
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           
  3002                           ;psect for function _getADC
  3003  02B4                     _getADC:	
  3004                           
  3005                           ;drv_adc.c: 17: ADCON0bits.GO_nDONE = 1;
  3006                           
  3007                           ;incstack = 0
  3008                           ; Regs used in _getADC: [wreg]
  3009  02B4  0021               	movlb	1	; select bank1
  3010  02B5  149D               	bsf	29,1	;volatile
  3011  02B6                     l160:	
  3012                           ;drv_adc.c: 18: while(!PIR1bits.ADIF);
  3013                           
  3014  02B6  0020               	movlb	0	; select bank0
  3015  02B7  1F11               	btfss	17,6	;volatile
  3016  02B8  2AB6               	goto	l160
  3017                           
  3018                           ;drv_adc.c: 19: PIR1bits.ADIF = 0;
  3019  02B9  1311               	bcf	17,6	;volatile
  3020                           
  3021                           ;drv_adc.c: 20: return (ADRES & 0x3FF);
  3022  02BA  30FF               	movlw	255
  3023  02BB  0021               	movlb	1	; select bank1
  3024  02BC  051B               	andwf	27,w	;volatile
  3025  02BD  0020               	movlb	0	; select bank0
  3026  02BE  00A2               	movwf	??_getADC
  3027  02BF  3003               	movlw	3
  3028  02C0  0021               	movlb	1	; select bank1
  3029  02C1  051C               	andwf	28,w	;volatile
  3030  02C2  0020               	movlb	0	; select bank0
  3031  02C3  00A3               	movwf	??_getADC+1
  3032  02C4  0822               	movf	??_getADC,w
  3033  02C5  00A0               	movwf	?_getADC
  3034  02C6  0823               	movf	??_getADC+1,w
  3035  02C7  00A1               	movwf	?_getADC+1
  3036  02C8  0008               	return
  3037  02C9                     __end_of_getADC:	
  3038                           
  3039                           	psect	text18
  3040  017B                     __ptext18:	
  3041 ;; *************** function _adc_filter *****************
  3042 ;; Defined at:
  3043 ;;		line 99 in file "src/main.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  i               2   12[BANK0 ] unsigned int 
  3048 ;;  sum             2   10[BANK0 ] unsigned int 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      void 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3058 ;;      Params:         0       0       0       0
  3059 ;;      Locals:         0       4       0       0
  3060 ;;      Temps:          0       2       0       0
  3061 ;;      Totals:         0       6       0       0
  3062 ;;Total ram usage:        6 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    5
  3065 ;; This function calls:
  3066 ;;		___lwdiv
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _adc_filter
  3074  017B                     _adc_filter:	
  3075                           
  3076                           ;main.c: 100: uint16_t sum = 0;
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _adc_filter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3080  017B  0020               	movlb	0	; select bank0
  3081  017C  01AA               	clrf	adc_filter@sum
  3082  017D  01AB               	clrf	adc_filter@sum+1
  3083                           
  3084                           ;main.c: 101: static uint8_t index = 0;
  3085                           ;main.c: 102: if(index >= 10) {
  3086  017E  300A               	movlw	10
  3087  017F  0261               	subwf	adc_filter@index,w
  3088  0180  1803               	btfsc	3,0
  3089                           
  3090                           ;main.c: 103: index = 0;
  3091  0181  01E1               	clrf	adc_filter@index
  3092                           
  3093                           ;main.c: 104: }
  3094                           ;main.c: 105: adc_filter_buf[index++] = adc_gather_value;
  3095  0182  3561               	lslf	adc_filter@index,w
  3096  0183  3E45               	addlw	(low (_adc_filter_buf| 0))& (0+255)
  3097  0184  0086               	movwf	6
  3098  0185  0187               	clrf	7
  3099  0186  085D               	movf	_adc_gather_value,w	;volatile
  3100  0187  3FC0               	movwi [0]fsr1
  3101  0188  085E               	movf	_adc_gather_value+1,w	;volatile
  3102  0189  3FC1               	movwi [1]fsr1
  3103  018A  3001               	movlw	1
  3104  018B  00A8               	movwf	??_adc_filter
  3105  018C  0828               	movf	??_adc_filter,w
  3106  018D  07E1               	addwf	adc_filter@index,f
  3107                           
  3108                           ;main.c: 106: for(unsigned int i = 0; i < 10; i++) {
  3109  018E  01AC               	clrf	adc_filter@i
  3110  018F  01AD               	clrf	adc_filter@i+1
  3111  0190  3000               	movlw	0
  3112  0191  022D               	subwf	adc_filter@i+1,w
  3113  0192  300A               	movlw	10
  3114  0193  1903               	skipnz
  3115  0194  022C               	subwf	adc_filter@i,w
  3116  0195  1803               	btfsc	3,0
  3117  0196  29AE               	goto	l1372
  3118  0197                     l1366:	
  3119                           
  3120                           ;main.c: 107: sum += adc_filter_buf[i];
  3121  0197  352C               	lslf	adc_filter@i,w
  3122  0198  3E45               	addlw	(low (_adc_filter_buf| 0))& (0+255)
  3123  0199  0086               	movwf	6
  3124  019A  0187               	clrf	7
  3125  019B  3F40               	moviw [0]fsr1
  3126  019C  00A8               	movwf	??_adc_filter
  3127  019D  3F41               	moviw [1]fsr1
  3128  019E  00A9               	movwf	??_adc_filter+1
  3129  019F  0828               	movf	??_adc_filter,w
  3130  01A0  07AA               	addwf	adc_filter@sum,f
  3131  01A1  0829               	movf	??_adc_filter+1,w
  3132  01A2  3DAB               	addwfc	adc_filter@sum+1,f
  3133  01A3  3001               	movlw	1
  3134  01A4  07AC               	addwf	adc_filter@i,f
  3135  01A5  3000               	movlw	0
  3136  01A6  3DAD               	addwfc	adc_filter@i+1,f
  3137  01A7  3000               	movlw	0
  3138  01A8  022D               	subwf	adc_filter@i+1,w
  3139  01A9  300A               	movlw	10
  3140  01AA  1903               	skipnz
  3141  01AB  022C               	subwf	adc_filter@i,w
  3142  01AC  1C03               	skipc
  3143  01AD  2997               	goto	l1366
  3144  01AE                     l1372:	
  3145                           
  3146                           ;main.c: 108: }
  3147                           ;main.c: 109: adc_filter_value = sum / 10;
  3148  01AE  300A               	movlw	10
  3149  01AF  00A0               	movwf	___lwdiv@divisor
  3150  01B0  3000               	movlw	0
  3151  01B1  00A1               	movwf	___lwdiv@divisor+1
  3152  01B2  082B               	movf	adc_filter@sum+1,w
  3153  01B3  00A3               	movwf	___lwdiv@dividend+1
  3154  01B4  082A               	movf	adc_filter@sum,w
  3155  01B5  00A2               	movwf	___lwdiv@dividend
  3156  01B6  21BD               	fcall	___lwdiv
  3157  01B7  0020               	movlb	0	; select bank0
  3158  01B8  0821               	movf	?___lwdiv+1,w
  3159  01B9  00F8               	movwf	_adc_filter_value+1	;volatile
  3160  01BA  0820               	movf	?___lwdiv,w
  3161  01BB  00F7               	movwf	_adc_filter_value	;volatile
  3162  01BC  0008               	return
  3163  01BD                     __end_of_adc_filter:	
  3164                           
  3165                           	psect	text19
  3166  01BD                     __ptext19:	
  3167 ;; *************** function ___lwdiv *****************
  3168 ;; Defined at:
  3169 ;;		line 6 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\lwdiv.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  divisor         2    0[BANK0 ] unsigned int 
  3172 ;;  dividend        2    2[BANK0 ] unsigned int 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  quotient        2    6[BANK0 ] unsigned int 
  3175 ;;  counter         1    5[BANK0 ] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2    0[BANK0 ] unsigned int 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3185 ;;      Params:         0       4       0       0
  3186 ;;      Locals:         0       3       0       0
  3187 ;;      Temps:          0       1       0       0
  3188 ;;      Totals:         0       8       0       0
  3189 ;;Total ram usage:        8 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    4
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_adc_gather_init
  3196 ;;		_adc_filter
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function ___lwdiv
  3202  01BD                     ___lwdiv:	
  3203                           
  3204                           ;incstack = 0
  3205                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3206  01BD  0020               	movlb	0	; select bank0
  3207  01BE  01A6               	clrf	___lwdiv@quotient
  3208  01BF  01A7               	clrf	___lwdiv@quotient+1
  3209  01C0  0820               	movf	___lwdiv@divisor,w
  3210  01C1  0421               	iorwf	___lwdiv@divisor+1,w
  3211  01C2  1903               	btfsc	3,2
  3212  01C3  29ED               	goto	l1270
  3213  01C4  01A5               	clrf	___lwdiv@counter
  3214  01C5  0AA5               	incf	___lwdiv@counter,f
  3215  01C6                     l1258:	
  3216  01C6  1BA1               	btfsc	___lwdiv@divisor+1,7
  3217  01C7  29D2               	goto	l1260
  3218  01C8  3001               	movlw	1
  3219  01C9                     u955:	
  3220  01C9  35A0               	lslf	___lwdiv@divisor,f
  3221  01CA  0DA1               	rlf	___lwdiv@divisor+1,f
  3222  01CB  0B89               	decfsz	9,f
  3223  01CC  29C9               	goto	u955
  3224  01CD  3001               	movlw	1
  3225  01CE  00A4               	movwf	??___lwdiv
  3226  01CF  0824               	movf	??___lwdiv,w
  3227  01D0  07A5               	addwf	___lwdiv@counter,f
  3228  01D1  29C6               	goto	l1258
  3229  01D2                     l1260:	
  3230  01D2  3001               	movlw	1
  3231  01D3                     u975:	
  3232  01D3  35A6               	lslf	___lwdiv@quotient,f
  3233  01D4  0DA7               	rlf	___lwdiv@quotient+1,f
  3234  01D5  0B89               	decfsz	9,f
  3235  01D6  29D3               	goto	u975
  3236  01D7  0821               	movf	___lwdiv@divisor+1,w
  3237  01D8  0223               	subwf	___lwdiv@dividend+1,w
  3238  01D9  1D03               	skipz
  3239  01DA  29DD               	goto	u985
  3240  01DB  0820               	movf	___lwdiv@divisor,w
  3241  01DC  0222               	subwf	___lwdiv@dividend,w
  3242  01DD                     u985:	
  3243  01DD  1C03               	skipc
  3244  01DE  29E4               	goto	l1266
  3245  01DF  0820               	movf	___lwdiv@divisor,w
  3246  01E0  02A2               	subwf	___lwdiv@dividend,f
  3247  01E1  0821               	movf	___lwdiv@divisor+1,w
  3248  01E2  3BA3               	subwfb	___lwdiv@dividend+1,f
  3249  01E3  1426               	bsf	___lwdiv@quotient,0
  3250  01E4                     l1266:	
  3251  01E4  3001               	movlw	1
  3252  01E5                     u995:	
  3253  01E5  36A1               	lsrf	___lwdiv@divisor+1,f
  3254  01E6  0CA0               	rrf	___lwdiv@divisor,f
  3255  01E7  0B89               	decfsz	9,f
  3256  01E8  29E5               	goto	u995
  3257  01E9  3001               	movlw	1
  3258  01EA  02A5               	subwf	___lwdiv@counter,f
  3259  01EB  1D03               	btfss	3,2
  3260  01EC  29D2               	goto	l1260
  3261  01ED                     l1270:	
  3262  01ED  0827               	movf	___lwdiv@quotient+1,w
  3263  01EE  00A1               	movwf	?___lwdiv+1
  3264  01EF  0826               	movf	___lwdiv@quotient,w
  3265  01F0  00A0               	movwf	?___lwdiv
  3266  01F1  0008               	return
  3267  01F2                     __end_of___lwdiv:	
  3268                           
  3269                           	psect	intentry
  3270  0004                     __pintentry:	
  3271 ;; *************** function _ISR *****************
  3272 ;; Defined at:
  3273 ;;		line 219 in file "src/main.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0, pclath, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3287 ;;      Params:         0       0       0       0
  3288 ;;      Locals:         0       0       0       0
  3289 ;;      Temps:          1       0       0       0
  3290 ;;      Totals:         1       0       0       0
  3291 ;;Total ram usage:        1 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    3
  3294 ;; This function calls:
  3295 ;;		_tmr2_isr
  3296 ;; This function is called by:
  3297 ;;		Interrupt level 1
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301  0004                     _ISR:	
  3302                           
  3303                           ;incstack = 0
  3304  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3305                           
  3306                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3307  0005  3180               	pagesel	$
  3308  0006  0020               	movlb	0	; select bank0
  3309  0007  087F               	movf	127,w
  3310  0008  00F4               	movwf	??_ISR
  3311                           
  3312                           ;main.c: 220: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  3313  0009  0021               	movlb	1	; select bank1
  3314  000A  1C91               	btfss	17,1	;volatile
  3315  000B  2810               	goto	i1l125
  3316  000C  0020               	movlb	0	; select bank0
  3317  000D  1C91               	btfss	17,1	;volatile
  3318  000E  2810               	goto	i1l125
  3319                           
  3320                           ;main.c: 221: tmr2_isr();
  3321  000F  22E4               	fcall	_tmr2_isr
  3322  0010                     i1l125:	
  3323  0010  0874               	movf	??_ISR,w
  3324  0011  0020               	movlb	0	; select bank0
  3325  0012  00FF               	movwf	127
  3326  0013  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3327  0014  0009               	retfie
  3328  0015                     __end_of_ISR:	
  3329                           
  3330                           	psect	text21
  3331  02E4                     __ptext21:	
  3332 ;; *************** function _tmr2_isr *****************
  3333 ;; Defined at:
  3334 ;;		line 29 in file "src/drv_trm2.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, pclath, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3348 ;;      Params:         0       0       0       0
  3349 ;;      Locals:         0       0       0       0
  3350 ;;      Temps:          0       0       0       0
  3351 ;;      Totals:         0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:    2
  3355 ;; This function calls:
  3356 ;;		Absolute function
  3357 ;;		_pwm_run
  3358 ;; This function is called by:
  3359 ;;		_ISR
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           
  3364                           ;psect for function _tmr2_isr
  3365  02E4                     _tmr2_isr:	
  3366                           
  3367                           ;drv_trm2.c: 30: PIR1bits.TMR2IF = 0;
  3368                           
  3369                           ;incstack = 0
  3370                           ; Regs used in _tmr2_isr: [wreg+status,2+status,0+pclath+cstack]
  3371  02E4  0020               	movlb	0	; select bank0
  3372  02E5  1091               	bcf	17,1	;volatile
  3373                           
  3374                           ;drv_trm2.c: 31: if(tmr2_isr_handler) {
  3375  02E6  0859               	movf	_tmr2_isr_handler,w
  3376  02E7  045A               	iorwf	_tmr2_isr_handler+1,w
  3377  02E8  1903               	btfsc	3,2
  3378  02E9  0008               	return
  3379                           
  3380                           ;drv_trm2.c: 32: tmr2_isr_handler();
  3381  02EA  085A               	movf	_tmr2_isr_handler+1,w
  3382  02EB  008A               	movwf	10
  3383  02EC  0859               	movf	_tmr2_isr_handler,w
  3384  02ED  000A               	callw
  3385  02EE  3182               	pagesel	$
  3386  02EF  0008               	return
  3387  02F0                     __end_of_tmr2_isr:	
  3388                           
  3389                           	psect	text22
  3390  0224                     __ptext22:	
  3391 ;; *************** function _pwm_run *****************
  3392 ;; Defined at:
  3393 ;;		line 150 in file "src/main.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      void 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0, pclath, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3407 ;;      Params:         0       0       0       0
  3408 ;;      Locals:         0       0       0       0
  3409 ;;      Temps:          2       0       0       0
  3410 ;;      Totals:         2       0       0       0
  3411 ;;Total ram usage:        2 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    1
  3414 ;; This function calls:
  3415 ;;		i1_pwm_dutyCycle_set
  3416 ;;		i1_pwm_loadBuffer_set
  3417 ;; This function is called by:
  3418 ;;		_set_interrupt_handle
  3419 ;;		_tmr2_isr
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _pwm_run
  3425  0224                     _pwm_run:	
  3426                           
  3427                           ;main.c: 151: if(current_value + 10 < target_value) {
  3428                           
  3429                           ;incstack = 0
  3430                           ; Regs used in _pwm_run: [wreg+status,2+status,0+pclath+cstack]
  3431  0224  0875               	movf	_current_value,w	;volatile
  3432  0225  3E0A               	addlw	10
  3433  0226  00F2               	movwf	??_pwm_run
  3434  0227  3000               	movlw	0
  3435  0228  3D76               	addwfc	_current_value+1,w	;volatile
  3436  0229  00F3               	movwf	??_pwm_run+1
  3437  022A  0020               	movlb	0	; select bank0
  3438  022B  085C               	movf	_target_value+1,w	;volatile
  3439  022C  0273               	subwf	??_pwm_run+1,w
  3440  022D  1D03               	skipz
  3441  022E  2A31               	goto	u46_25
  3442  022F  085B               	movf	_target_value,w	;volatile
  3443  0230  0272               	subwf	??_pwm_run,w
  3444  0231                     u46_25:	
  3445  0231  1803               	skipnc
  3446  0232  2A38               	goto	i1l932
  3447                           
  3448                           ;main.c: 152: current_value += 10;
  3449  0233  300A               	movlw	10
  3450  0234  07F5               	addwf	_current_value,f	;volatile
  3451  0235  3000               	movlw	0
  3452  0236  3DF6               	addwfc	_current_value+1,f	;volatile
  3453                           
  3454                           ;main.c: 153: } else if (current_value > target_value + 10) {
  3455  0237  2A4F               	goto	i1l938
  3456  0238                     i1l932:	
  3457  0238  085B               	movf	_target_value,w	;volatile
  3458  0239  3E0A               	addlw	10
  3459  023A  00F2               	movwf	??_pwm_run
  3460  023B  3000               	movlw	0
  3461  023C  3D5C               	addwfc	_target_value+1,w	;volatile
  3462  023D  00F3               	movwf	??_pwm_run+1
  3463  023E  0876               	movf	_current_value+1,w	;volatile
  3464  023F  0273               	subwf	??_pwm_run+1,w
  3465  0240  1D03               	skipz
  3466  0241  2A44               	goto	u47_25
  3467  0242  0875               	movf	_current_value,w	;volatile
  3468  0243  0272               	subwf	??_pwm_run,w
  3469  0244                     u47_25:	
  3470  0244  1803               	skipnc
  3471  0245  2A4B               	goto	i1l936
  3472                           
  3473                           ;main.c: 154: current_value -= 10;
  3474  0246  300A               	movlw	10
  3475  0247  02F5               	subwf	_current_value,f	;volatile
  3476  0248  3000               	movlw	0
  3477  0249  3BF6               	subwfb	_current_value+1,f	;volatile
  3478                           
  3479                           ;main.c: 155: } else {
  3480  024A  2A4F               	goto	i1l938
  3481  024B                     i1l936:	
  3482                           
  3483                           ;main.c: 156: current_value = target_value;
  3484  024B  085C               	movf	_target_value+1,w	;volatile
  3485  024C  00F6               	movwf	_current_value+1	;volatile
  3486  024D  085B               	movf	_target_value,w	;volatile
  3487  024E  00F5               	movwf	_current_value	;volatile
  3488  024F                     i1l938:	
  3489                           
  3490                           ;main.c: 157: }
  3491                           ;main.c: 158: pwm_dutyCycle_set(current_value);
  3492  024F  0876               	movf	_current_value+1,w	;volatile
  3493  0250  00F1               	movwf	i1pwm_dutyCycle_set@duty+1
  3494  0251  0875               	movf	_current_value,w	;volatile
  3495  0252  00F0               	movwf	i1pwm_dutyCycle_set@duty
  3496  0253  2321               	fcall	i1_pwm_dutyCycle_set
  3497                           
  3498                           ;main.c: 159: pwm_loadBuffer_set();
  3499  0254  2330               	fcall	i1_pwm_loadBuffer_set
  3500  0255  0008               	return
  3501  0256                     __end_of_pwm_run:	
  3502                           
  3503                           	psect	text23
  3504  0330                     __ptext23:	
  3505 ;; *************** function i1_pwm_loadBuffer_set *****************
  3506 ;; Defined at:
  3507 ;;		line 39 in file "src/drv_pwm.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		None
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3521 ;;      Params:         0       0       0       0
  3522 ;;      Locals:         0       0       0       0
  3523 ;;      Temps:          0       0       0       0
  3524 ;;      Totals:         0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_pwm_run
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           
  3535                           ;psect for function i1_pwm_loadBuffer_set
  3536  0330                     i1_pwm_loadBuffer_set:	
  3537                           
  3538                           ;drv_pwm.c: 40: PWM3LDCONbits.LDA = 1;
  3539                           
  3540                           ;incstack = 0
  3541                           ; Regs used in i1_pwm_loadBuffer_set: []
  3542  0330  003B               	movlb	27	; select bank27
  3543  0331  17BF               	bsf	63,7	;volatile
  3544  0332  0008               	return
  3545  0333                     __end_ofi1_pwm_loadBuffer_set:	
  3546                           
  3547                           	psect	text24
  3548  0321                     __ptext24:	
  3549 ;; *************** function i1_pwm_dutyCycle_set *****************
  3550 ;; Defined at:
  3551 ;;		line 35 in file "src/drv_pwm.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;  duty            2    0[COMMON] unsigned int 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3565 ;;      Params:         2       0       0       0
  3566 ;;      Locals:         0       0       0       0
  3567 ;;      Temps:          0       0       0       0
  3568 ;;      Totals:         2       0       0       0
  3569 ;;Total ram usage:        2 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_pwm_run
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           
  3579                           ;psect for function i1_pwm_dutyCycle_set
  3580  0321                     i1_pwm_dutyCycle_set:	
  3581                           
  3582                           ;drv_pwm.c: 36: PWM3DC = duty;
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in i1_pwm_dutyCycle_set: [wreg]
  3586  0321  0871               	movf	i1pwm_dutyCycle_set@duty+1,w
  3587  0322  003B               	movlb	27	; select bank27
  3588  0323  00B4               	movwf	52	;volatile
  3589  0324  0870               	movf	i1pwm_dutyCycle_set@duty,w
  3590  0325  00B3               	movwf	51	;volatile
  3591  0326  0008               	return
  3592  0327                     __end_ofi1_pwm_dutyCycle_set:	
  3593  007E                     btemp	set	126	;btemp
  3594  007E                     int$flags	set	126
  3595  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     37      66
    BANK1            80      0      20
    BANK2            80      0       0

Pointer List with Targets:

    tmr2_set_handler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> pwm_run(), 

    tmr2_isr_handler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), pwm_run(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _tmr2_isr->_pwm_run
    _pwm_run->i1_pwm_dutyCycle_set

Critical Paths under _main in BANK0

    _main->_adc_gather
    _set_interrupt_handle->_tmr2_set_handler
    _pwm_update_duty->___wmul
    _adc_gather_init->___lwdiv
    _adc_gather->_getADC
    _adc_filter->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3231
                                             34 BANK0      3     3      0
                         _adc_filter
                         _adc_gather
                    _adc_gather_init
                           _adc_init
                          _gpio_init
                   _led_update_state
                           _osc_init
                  _pwm_dutyCycle_set
                           _pwm_init
                 _pwm_loadBuffer_set
                    _pwm_update_duty
               _set_interrupt_handle
                          _tmr2_init
                    _tmr2_isr_enable
                         _tmr2_start
 ---------------------------------------------------------------------------------
 (1) _tmr2_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr2_isr_enable                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tmr2_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_interrupt_handle                                 0     0      0      96
                   _tmr2_set_handler
 ---------------------------------------------------------------------------------
 (2) _tmr2_set_handler                                     2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _pwm_update_duty                                      0     0      0     396
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _pwm_loadBuffer_set                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm_dutyCycle_set                                    2     0      2     126
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_update_state                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_gather_init                                      4     4      0    1002
                                              8 BANK0      4     4      0
                            ___lwdiv
                             ___wmul
                             _getADC
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _adc_gather                                          30    30      0     875
                                              4 BANK0     30    30      0
                             _getADC
 ---------------------------------------------------------------------------------
 (2) _getADC                                               4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _adc_filter                                           6     6      0     637
                                              8 BANK0      6     6      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     501
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  1     1      0      48
                                              4 COMMON     1     1      0
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (4) _tmr2_isr                                             0     0      0      48
                   Absolute function *
                            _pwm_run *
 ---------------------------------------------------------------------------------
 (5) _pwm_run                                              2     2      0      48
                                              2 COMMON     2     2      0
                i1_pwm_dutyCycle_set
               i1_pwm_loadBuffer_set
 ---------------------------------------------------------------------------------
 (6) i1_pwm_loadBuffer_set                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i1_pwm_dutyCycle_set                                  2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_filter
     ___lwdiv
   _adc_gather
     _getADC
   _adc_gather_init
     ___lwdiv
     ___wmul
     _getADC
   _adc_init
   _gpio_init
   _led_update_state
   _osc_init
   _pwm_dutyCycle_set
   _pwm_init
   _pwm_loadBuffer_set
   _pwm_update_duty
     ___wmul
   _set_interrupt_handle
     _tmr2_set_handler
   _tmr2_init
   _tmr2_isr_enable
   _tmr2_start

 _ISR (ROOT)
   _tmr2_isr
     Absolute function(Fake) *
     _pwm_run *
       i1_pwm_dutyCycle_set
       i1_pwm_loadBuffer_set

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      60       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     25      42       6       82.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      14       8       25.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      60      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Tue May 21 08:49:35 2019

                  __CFG_CP$OFF 0000                             l59 00C0                             _on 0079  
          ___wmul@multiplicand 0022                    __CFG_LVP$ON 0000                            l112 010B  
                          l115 012A                            l116 012F                            l230 02A1  
                          l134 02F8                            l160 02B6                            _PR2 001B  
                          _ISR 0004                            u915 02A2                            u925 02A7  
                          u955 01C9                            u975 01D3                            u985 01DD  
                          u995 01E5               _tmr2_set_handler 031B                   __CFG_BORV$LO 0000  
                          wreg 0009    __size_of_pwm_loadBuffer_set 0003                           ?_ISR 0070  
                         l1320 0062                           l1330 00B2                           l1314 005D  
                         l1306 0041                           l1260 01D2                           l1332 0063  
                         l1236 029B                           l1404 0266                           l1270 01ED  
                         l1342 00C6                           l1334 00B7                           l1406 0278  
                         l1280 013D                           l1266 01E4                           l1258 01C6  
                         l1372 01AE                           l1348 00DA                           l1366 0197  
                         l1294 016A                           l1288 0150                           l1384 0208  
                         l1386 020B                           l1396 0221                           l1484 011A  
                         l1468 00FD                   __CFG_WDTE$ON 0000                           u1040 0038  
                         u1307 004F                           u1085 0092                           u1095 0078  
                         u1255 0113                           u1287 00F5                           u1297 0144  
            ??_pwm_update_duty 0026                   __CFG_WRT$OFF 0000         led_update_state@cnt_on 0060  
                         _main 00E9                           fsr0h 0005                           fsr1h 0007  
                         indf0 0000                           fsr0l 0004                           fsr1l 0006  
                         btemp 007E                           start 0015                  __CFG_MCLRE$ON 0000  
                        ??_ISR 0074          pwm_dutyCycle_set@duty 0020                          ?_main 0070  
                        _ADRES 009B       __size_of_tmr2_isr_enable 0003                __end_of___lwdiv 01F2  
                        i1l125 0010                          i1l932 0238                          i1l936 024B  
                        i1l938 024F                          u46_25 0231                          u47_25 0244  
                __CFG_PWRTE$ON 0000            adc_gather@value_buf 0028   __end_of_set_interrupt_handle 0315  
      led_update_state@cnt_off 005F                          main@i 0044                 __CFG_BOREN$OFF 0000  
                        pclath 000A                __end_of_pwm_run 0256                          status 0003  
                        wtemp0 007E      __size_of_led_update_state 0032                 _PWM3CLKCONbits 0DBE  
              __initialization 0016                   __end_of_main 0135                         ??_main 0042  
               __CFG_PLLEN$OFF 0000               __end_of_adc_init 02D7                         _PWM3DC 0DB3  
                       _PWM3OF 0DB7                         _PWM3PH 0DB1                         _PWM3PR 0DB5  
                       ___wmul 0298                         _getADC 02B4                 __CFG_STVREN$ON 0000  
                    ??___lwdiv 0024   __end_ofi1_pwm_loadBuffer_set 0333                 adc_gather@temp 003C  
             __end_of_tmr2_isr 02F0               __end_of_osc_init 02FB                   __pdataCOMMON 0079  
             __end_of_pwm_init 0298                      ??_pwm_run 0072              ??_tmr2_isr_enable 0020  
      __end_of__initialization 0028       __end_of_tmr2_set_handler 0321                 __pcstackCOMMON 0070  
                   _adc_gather 002B                     _adc_filter 017B           _set_interrupt_handle 030E  
  __end_ofi1_pwm_dutyCycle_set 0327                _pwm_update_duty 0256       __size_of_adc_gather_init 0046  
                   __pbssBANK0 0045                     __pbssBANK1 00A0                  _current_value 0075  
           __size_of_gpio_init 000D               _led_update_state 01F2                     __pmaintext 00E9  
        ?_set_interrupt_handle 0070                        ?___wmul 0020                        ?_getADC 0020  
                   __pintentry 0004             __size_of_tmr2_init 000A                      ?_adc_init 0070  
   __end_of_pwm_loadBuffer_set 0330                 _adc_filter_buf 0045                        _PWM3TMR 0DB9  
             _adc_gather_value 005D           i1_pwm_loadBuffer_set 0330                      ?_tmr2_isr 0070  
                    ?_osc_init 0070                    ?_adc_gather 0070                    ?_adc_filter 0070  
              __size_of___wmul 001C                __size_of_getADC 0015                      ?_pwm_init 0070  
      __end_of_pwm_update_duty 027C                        ___lwdiv 01BD                     ??_adc_init 0020  
              adc_gather@F3555 00A0                        __ptext1 0327                        __ptext2 032A  
                      __ptext3 02FB                        __ptext4 030E                        __ptext5 031B  
                      __ptext6 0256                        __ptext7 032D                        __ptext8 027C  
                      __ptext9 0305              __end_of_gpio_init 02E4                   __size_of_ISR 0011  
                    _T2CONbits 001C                        _pwm_run 0224                        clrloop0 0316  
         end_of_initialization 0028              ??_adc_gather_init 0028              __end_of_tmr2_init 0305  
        ?i1_pwm_loadBuffer_set 0070                     _tmr2_start 0327                     ??_tmr2_isr 0074  
                   ??_osc_init 0020               _adc_filter_value 0077         ??_set_interrupt_handle 0022  
                   ??_pwm_init 0020                _tmr2_isr_enable 032A               __CFG_FOSC$INTOSC 0000  
      tmr2_set_handler@handler 0020              _pwm_dutyCycle_set 0305                      _TRISAbits 008C  
           ?_pwm_dutyCycle_set 0020            __size_of_adc_gather 00BE            __size_of_adc_filter 0042  
          ??_pwm_dutyCycle_set 0022                adc_filter@index 0061              ?_tmr2_set_handler 0020  
           ??_tmr2_set_handler 0022               ?_pwm_update_duty 0070                 __end_of___wmul 02B4  
               __end_of_getADC 02C9                  __pidataCOMMON 0333      __end_of_pwm_dutyCycle_set 030E  
     __end_of_led_update_state 0224            start_initialization 0016                    __end_of_ISR 0015  
       ??i1_pwm_loadBuffer_set 0070                    ?_tmr2_start 0070                  _PWM3LDCONbits 0DBF  
             __CFG_LPBOREN$OFF 0000        __end_of_tmr2_isr_enable 032D                  _PWM3OFCONbits 0DC0  
                     ??___wmul 0024                       ??_getADC 0022                  adc_gather@sum 003E  
            __size_of_adc_init 000E                    __pbssCOMMON 0075                      ___latbits 0000  
 __size_ofi1_pwm_dutyCycle_set 0006                  __pcstackBANK0 0020                  adc_filter@sum 002A  
           _pwm_loadBuffer_set 032D                    adc_gather@i 0041                    adc_gather@j 0040  
                  adc_filter@i 002C             adc_gather_init@sum 0029               ___lwdiv@dividend 0022  
          ?_pwm_loadBuffer_set 0070                   ??_adc_gather 0024                   ??_adc_filter 0028  
            __size_of_tmr2_isr 000C              __size_of_osc_init 000B                       ?___lwdiv 0020  
            __size_of_pwm_init 001C                _adc_gather_init 0135     __size_of_pwm_dutyCycle_set 0009  
          __size_of_tmr2_start 0003                      _gpio_init 02D7           ??_pwm_loadBuffer_set 0020  
             ___lwdiv@quotient 0026                       ?_pwm_run 0070             __end_of_adc_gather 00E9  
           __end_of_adc_filter 01BD                 ___wmul@product 0024                       _LATAbits 010C  
                    clear_ram0 0315                       _PIE1bits 0091                      _tmr2_init 02FB  
                     _PIR1bits 0011               ?_tmr2_isr_enable 0070                       _PWM3INTE 0DBC  
                     _PWM3INTF 0DBD                     _ADCON0bits 009D                     _ADCON1bits 009E  
            ___wmul@multiplier 0020                     ?_gpio_init 0070                     ?_tmr2_init 0070  
      __end_of_adc_gather_init 017B  __size_of_set_interrupt_handle 0007               __size_of___lwdiv 0035  
                     _adc_init 02C9                     _ANSELAbits 018C      __size_of_tmr2_set_handler 0006  
            ?_led_update_state 0070                ___lwdiv@divisor 0020                ___lwdiv@counter 0025  
                     __ptext10 02F0                       __ptext11 01F2                       __ptext12 02D7  
                     __ptext21 02E4                       __ptext13 02C9                       __ptext22 0224  
                     __ptext14 0135                       __ptext23 0330                       __ptext15 0298  
                     __ptext24 0321                       __ptext16 002B                       __ptext17 02B4  
                     __ptext18 017B                       __ptext19 01BD             ??_led_update_state 0020  
             __size_of_pwm_run 0032                   _target_value 005B                  __size_of_main 004C  
                 ??_tmr2_start 0020                       _tmr2_isr 02E4                       _osc_init 02F0  
          i1_pwm_dutyCycle_set 0321                       int$flags 007E                       _pwm_init 027C  
                  _OSCSTATbits 009A                    _OSCTUNEbits 0098                     _INTCONbits 000B  
           __end_of_tmr2_start 032A           ?i1_pwm_dutyCycle_set 0070       __size_of_pwm_update_duty 0026  
                  ??_gpio_init 0020                    _PWM3CONbits 0DBB                       intlevel1 0000  
             adc_gather_init@i 002B  __size_ofi1_pwm_loadBuffer_set 0003              __CFG_CLKOUTEN$OFF 0000  
                  ??_tmr2_init 0020                     _OSCCONbits 0099        i1pwm_dutyCycle_set@duty 0070  
             ?_adc_gather_init 0070          ??i1_pwm_dutyCycle_set 0072               _tmr2_isr_handler 0059  
